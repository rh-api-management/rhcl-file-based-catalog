---
image: registry.redhat.io/rhcl-1/authorino-operator-bundle@sha256:4d2ae2b27473961ad398a9f921e9ab3a63ad1d5b88bedbdd37086bee1005632c
name: authorino-operator.v0.16.0
package: authorino-operator
properties:
  - type: olm.gvk
    value:
      group: authorino.kuadrant.io
      kind: AuthConfig
      version: v1beta2
  - type: olm.gvk
    value:
      group: authorino.kuadrant.io
      kind: AuthConfig
      version: v1beta3
  - type: olm.gvk
    value:
      group: operator.authorino.kuadrant.io
      kind: Authorino
      version: v1beta1
  - type: olm.package
    value:
      packageName: authorino-operator
      version: 0.16.0
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLW1hbmFnZXItazhzLWF1dGgtcm9sZSJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbImF1dGhlbnRpY2F0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsidG9rZW5yZXZpZXdzIl0sInZlcmJzIjpbImNyZWF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsic3ViamVjdGFjY2Vzc3Jldmlld3MiXSwidmVyYnMiOlsiY3JlYXRlIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLW1hbmFnZXItcm9sZSJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbImF1dGhvcmluby5rdWFkcmFudC5pbyJdLCJyZXNvdXJjZXMiOlsiYXV0aGNvbmZpZ3MiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiYXV0aG9yaW5vLmt1YWRyYW50LmlvIl0sInJlc291cmNlcyI6WyJhdXRoY29uZmlncy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCIsImxpc3QiLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZWNyZXRzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLWF1dGhjb25maWctZWRpdG9yLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLWF1dGhjb25maWctdmlld2VyLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogYWFjM2ExNWQuYXV0aG9yaW5vLmt1YWRyYW50LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJtYW5hZ2VyLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImF1dGhvcmluby1vcGVyYXRvciJ9LCJuYW1lIjoiYXV0aG9yaW5vLW9wZXJhdG9yLW1ldHJpY3MifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Im1ldHJpY3MiLCJwb3J0Ijo4MDgwLCJ0YXJnZXRQb3J0IjoibWV0cmljcyJ9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImF1dGhvcmluby1vcGVyYXRvciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoiYXV0aG9yaW5vIiwiYXV0aG9yaW5vLWNvbXBvbmVudCI6ImF1dGhvcmluby13ZWJob29rcyJ9LCJuYW1lIjoiYXV0aG9yaW5vLXdlYmhvb2tzIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImFwcCI6ImF1dGhvcmlubyIsImF1dGhvcmluby1jb21wb25lbnQiOiJhdXRob3Jpbm8td2ViaG9va3MifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
relatedImages:
  - image: registry.redhat.io/rhcl-1/authorino-operator-bundle@sha256:4d2ae2b27473961ad398a9f921e9ab3a63ad1d5b88bedbdd37086bee1005632c
    name: ""
  - image: registry.redhat.io/rhcl-1/authorino-rhel9-operator@sha256:7306f0614effb508231a76dd1d2ff9d1775bfee8c3fa2d0aafe14d9e59a044ac
    name: authorino-rhel9-operator-7306f0614effb508231a76dd1d2ff9d1775bfee8c3fa2d0aafe14d9e59a044ac-annotation
  - image: registry.redhat.io/rhcl-1/authorino-rhel9-operator@sha256:7306f0614effb508231a76dd1d2ff9d1775bfee8c3fa2d0aafe14d9e59a044ac
    name: authorino-operator
  - image: registry.redhat.io/rhcl-1/authorino-rhel9@sha256:7f706051bf98e45f209159ba1033b991e343369dff45276c9efde9de83424b1e
    name: authorino
schema: olm.bundle
---
image: registry.redhat.io/rhcl-1/authorino-operator-bundle@sha256:71c2187aafb30b3fc59da1534147ef2cf5fa9f8217c74479b723da4764c08a85
name: authorino-operator.v1.2.3
package: authorino-operator
properties:
  - type: olm.gvk
    value:
      group: authorino.kuadrant.io
      kind: AuthConfig
      version: v1beta2
  - type: olm.gvk
    value:
      group: authorino.kuadrant.io
      kind: AuthConfig
      version: v1beta3
  - type: olm.gvk
    value:
      group: operator.authorino.kuadrant.io
      kind: Authorino
      version: v1beta1
  - type: olm.package
    value:
      packageName: authorino-operator
      version: 1.2.3
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLW1hbmFnZXItazhzLWF1dGgtcm9sZSJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbImF1dGhlbnRpY2F0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsidG9rZW5yZXZpZXdzIl0sInZlcmJzIjpbImNyZWF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsic3ViamVjdGFjY2Vzc3Jldmlld3MiXSwidmVyYnMiOlsiY3JlYXRlIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLW1hbmFnZXItcm9sZSJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbImF1dGhvcmluby5rdWFkcmFudC5pbyJdLCJyZXNvdXJjZXMiOlsiYXV0aGNvbmZpZ3MiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiYXV0aG9yaW5vLmt1YWRyYW50LmlvIl0sInJlc291cmNlcyI6WyJhdXRoY29uZmlncy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCIsImxpc3QiLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZWNyZXRzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLWF1dGhjb25maWctZWRpdG9yLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLWF1dGhjb25maWctdmlld2VyLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogYWFjM2ExNWQuYXV0aG9yaW5vLmt1YWRyYW50LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJtYW5hZ2VyLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImF1dGhvcmluby1vcGVyYXRvciJ9LCJuYW1lIjoiYXV0aG9yaW5vLW9wZXJhdG9yLW1ldHJpY3MifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Im1ldHJpY3MiLCJwb3J0Ijo4MDgwLCJ0YXJnZXRQb3J0IjoibWV0cmljcyJ9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImF1dGhvcmluby1vcGVyYXRvciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoiYXV0aG9yaW5vIiwiYXV0aG9yaW5vLWNvbXBvbmVudCI6ImF1dGhvcmluby13ZWJob29rcyJ9LCJuYW1lIjoiYXV0aG9yaW5vLXdlYmhvb2tzIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImFwcCI6ImF1dGhvcmlubyIsImF1dGhvcmluby1jb21wb25lbnQiOiJhdXRob3Jpbm8td2ViaG9va3MifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
relatedImages:
  - image: registry.redhat.io/rhcl-1/authorino-operator-bundle@sha256:71c2187aafb30b3fc59da1534147ef2cf5fa9f8217c74479b723da4764c08a85
    name: ""
  - image: registry.redhat.io/rhcl-1/authorino-rhel9-operator@sha256:1b2e842b642f8737de8b3229e624cb54858de2cfc2750dab593d894968ad8ebe
    name: ""
  - image: registry.redhat.io/rhcl-1/authorino-rhel9@sha256:22d44b5bccacac44ffe96206e69ac91e22557f1c4fbfd46252c6ba9b720d7d6a
    name: authorino
schema: olm.bundle
---
image: registry.redhat.io/rhcl-1/authorino-operator-bundle@sha256:cc4d487b00ffe6013ee6e7fa68c15d3bae8a9605ea632f291b2c604bff76105e
name: authorino-operator.v0.16.1
package: authorino-operator
properties:
  - type: olm.gvk
    value:
      group: authorino.kuadrant.io
      kind: AuthConfig
      version: v1beta2
  - type: olm.gvk
    value:
      group: authorino.kuadrant.io
      kind: AuthConfig
      version: v1beta3
  - type: olm.gvk
    value:
      group: operator.authorino.kuadrant.io
      kind: Authorino
      version: v1beta1
  - type: olm.package
    value:
      packageName: authorino-operator
      version: 0.16.1
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLW1hbmFnZXItazhzLWF1dGgtcm9sZSJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbImF1dGhlbnRpY2F0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsidG9rZW5yZXZpZXdzIl0sInZlcmJzIjpbImNyZWF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsic3ViamVjdGFjY2Vzc3Jldmlld3MiXSwidmVyYnMiOlsiY3JlYXRlIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLW1hbmFnZXItcm9sZSJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbImF1dGhvcmluby5rdWFkcmFudC5pbyJdLCJyZXNvdXJjZXMiOlsiYXV0aGNvbmZpZ3MiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiYXV0aG9yaW5vLmt1YWRyYW50LmlvIl0sInJlc291cmNlcyI6WyJhdXRoY29uZmlncy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCIsImxpc3QiLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZWNyZXRzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLWF1dGhjb25maWctZWRpdG9yLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLWF1dGhjb25maWctdmlld2VyLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogYWFjM2ExNWQuYXV0aG9yaW5vLmt1YWRyYW50LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJtYW5hZ2VyLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImF1dGhvcmluby1vcGVyYXRvciJ9LCJuYW1lIjoiYXV0aG9yaW5vLW9wZXJhdG9yLW1ldHJpY3MifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Im1ldHJpY3MiLCJwb3J0Ijo4MDgwLCJ0YXJnZXRQb3J0IjoibWV0cmljcyJ9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImF1dGhvcmluby1vcGVyYXRvciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoiYXV0aG9yaW5vIiwiYXV0aG9yaW5vLWNvbXBvbmVudCI6ImF1dGhvcmluby13ZWJob29rcyJ9LCJuYW1lIjoiYXV0aG9yaW5vLXdlYmhvb2tzIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImFwcCI6ImF1dGhvcmlubyIsImF1dGhvcmluby1jb21wb25lbnQiOiJhdXRob3Jpbm8td2ViaG9va3MifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
relatedImages:
  - image: registry.redhat.io/rhcl-1/authorino-operator-bundle@sha256:cc4d487b00ffe6013ee6e7fa68c15d3bae8a9605ea632f291b2c604bff76105e
    name: ""
  - image: registry.redhat.io/rhcl-1/authorino-rhel9-operator@sha256:581d12296e31a2518216b7ffcddbacec178e9adb87d6e4a98561f1aef55522f4
    name: authorino-rhel9-operator-581d12296e31a2518216b7ffcddbacec178e9adb87d6e4a98561f1aef55522f4-annotation
  - image: registry.redhat.io/rhcl-1/authorino-rhel9-operator@sha256:581d12296e31a2518216b7ffcddbacec178e9adb87d6e4a98561f1aef55522f4
    name: authorino-operator
  - image: registry.redhat.io/rhcl-1/authorino-rhel9@sha256:3962953f6473609ddf78800555920f2ad3461cd44e3756c30a543e7184df829e
    name: authorino
schema: olm.bundle
---
image: registry.redhat.io/3scale-tech-preview/authorino-operator-bundle@sha256:ade1e993e7b4243cc39a678ad36654aad06776b47c1edc776f00d3524ff4c129
name: authorino-operator.v1.0.2
package: authorino-operator
properties:
  - type: olm.gvk
    value:
      group: authorino.kuadrant.io
      kind: AuthConfig
      version: v1beta1
  - type: olm.gvk
    value:
      group: authorino.kuadrant.io
      kind: AuthConfig
      version: v1beta2
  - type: olm.gvk
    value:
      group: operator.authorino.kuadrant.io
      kind: Authorino
      version: v1beta1
  - type: olm.package
    value:
      packageName: authorino-operator
      version: 1.0.2
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLW1hbmFnZXItazhzLWF1dGgtcm9sZSJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbImF1dGhlbnRpY2F0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsidG9rZW5yZXZpZXdzIl0sInZlcmJzIjpbImNyZWF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsic3ViamVjdGFjY2Vzc3Jldmlld3MiXSwidmVyYnMiOlsiY3JlYXRlIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLW1hbmFnZXItcm9sZSJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbImF1dGhvcmluby5rdWFkcmFudC5pbyJdLCJyZXNvdXJjZXMiOlsiYXV0aGNvbmZpZ3MiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiYXV0aG9yaW5vLmt1YWRyYW50LmlvIl0sInJlc291cmNlcyI6WyJhdXRoY29uZmlncy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCIsImxpc3QiLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZWNyZXRzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLW1ldHJpY3MtcmVhZGVyIn0sInJ1bGVzIjpbeyJub25SZXNvdXJjZVVSTHMiOlsiL21ldHJpY3MiXSwidmVyYnMiOlsiZ2V0Il19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLW9wZXJhdG9yLW1ldHJpY3MtcmVhZGVyIn0sInJ1bGVzIjpbeyJub25SZXNvdXJjZVVSTHMiOlsiL21ldHJpY3MiXSwidmVyYnMiOlsiZ2V0Il19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLWF1dGhjb25maWctZWRpdG9yLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLWF1dGhjb25maWctdmlld2VyLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLXByb3h5LXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRoZW50aWNhdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbInRva2VucmV2aWV3cyJdLCJ2ZXJicyI6WyJjcmVhdGUiXX0seyJhcGlHcm91cHMiOlsiYXV0aG9yaXphdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbInN1YmplY3RhY2Nlc3NyZXZpZXdzIl0sInZlcmJzIjpbImNyZWF0ZSJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogYWFjM2ExNWQuYXV0aG9yaW5vLmt1YWRyYW50LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJhdXRob3Jpbm8tb3BlcmF0b3ItbWFuYWdlci1jb25maWcifX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogYWFjM2ExNWQuYXV0aG9yaW5vLmt1YWRyYW50LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJtYW5hZ2VyLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9LCJuYW1lIjoiYXV0aG9yaW5vLW9wZXJhdG9yLWNvbnRyb2xsZXItbWFuYWdlci1tZXRyaWNzLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Imh0dHBzIiwicG9ydCI6ODQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjoiaHR0cHMifV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoiYXV0aG9yaW5vIiwiYXV0aG9yaW5vLWNvbXBvbmVudCI6ImF1dGhvcmluby13ZWJob29rcyJ9LCJuYW1lIjoiYXV0aG9yaW5vLXdlYmhvb2tzIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImFwcCI6ImF1dGhvcmlubyIsImF1dGhvcmluby1jb21wb25lbnQiOiJhdXRob3Jpbm8td2ViaG9va3MifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
relatedImages:
  - image: registry.redhat.io/3scale-tech-preview/authorino-operator-bundle@sha256:ade1e993e7b4243cc39a678ad36654aad06776b47c1edc776f00d3524ff4c129
    name: ""
  - image: registry.redhat.io/3scale-tech-preview/authorino-rhel9-operator@sha256:df96e91657c292de4f7bde8e3331260a6e8329995d42e28851787d6a674a05b1
    name: authorino-rhel9-operator-df96e91657c292de4f7bde8e3331260a6e8329995d42e28851787d6a674a05b1-annotation
  - image: registry.redhat.io/3scale-tech-preview/authorino-rhel9-operator@sha256:df96e91657c292de4f7bde8e3331260a6e8329995d42e28851787d6a674a05b1
    name: manager
  - image: registry.redhat.io/3scale-tech-preview/authorino-rhel9@sha256:27ab4042161278eb5ea71d1b2f7d7705cacd817dc7469f7032fce13e560c40c6
    name: webhooks
  - image: registry.redhat.io/3scale-tech-preview/authorino-rhel9@sha256:27ab4042161278eb5ea71d1b2f7d7705cacd817dc7469f7032fce13e560c40c6
    name: authorino
schema: olm.bundle
---
image: registry.redhat.io/3scale-tech-preview/authorino-operator-bundle@sha256:fa929a75fa0c1a52320d7aea77d03db4362c629f5cccd6eea2242fc782e27600
name: authorino-operator.v1.1.0
package: authorino-operator
properties:
  - type: olm.gvk
    value:
      group: authorino.kuadrant.io
      kind: AuthConfig
      version: v1beta1
  - type: olm.gvk
    value:
      group: authorino.kuadrant.io
      kind: AuthConfig
      version: v1beta2
  - type: olm.gvk
    value:
      group: operator.authorino.kuadrant.io
      kind: Authorino
      version: v1beta1
  - type: olm.package
    value:
      packageName: authorino-operator
      version: 1.1.0
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE1LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJhdXRob3Jpbm9zLm9wZXJhdG9yLmF1dGhvcmluby5rdWFkcmFudC5pbyJ9LCJzcGVjIjp7Imdyb3VwIjoib3BlcmF0b3IuYXV0aG9yaW5vLmt1YWRyYW50LmlvIiwibmFtZXMiOnsia2luZCI6IkF1dGhvcmlubyIsImxpc3RLaW5kIjoiQXV0aG9yaW5vTGlzdCIsInBsdXJhbCI6ImF1dGhvcmlub3MiLCJzaW5ndWxhciI6ImF1dGhvcmlubyJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYmV0YTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQXV0aG9yaW5vIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBhdXRob3Jpbm9zIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkF1dGhvcmlub1NwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBBdXRob3Jpbm8iLCJwcm9wZXJ0aWVzIjp7ImF1dGhDb25maWdMYWJlbFNlbGVjdG9ycyI6eyJ0eXBlIjoic3RyaW5nIn0sImNsdXN0ZXJXaWRlIjp7InR5cGUiOiJib29sZWFuIn0sImV2YWx1YXRvckNhY2hlU2l6ZSI6eyJ0eXBlIjoiaW50ZWdlciJ9LCJoZWFsdGh6Ijp7InByb3BlcnRpZXMiOnsicG9ydCI6eyJkZXNjcmlwdGlvbiI6IlBvcnQgbnVtYmVyIG9mIHRoZSBoZWFsdGgvcmVhZGluZXNzIHByb2JlIGVuZHBvaW50cy4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn19LCJ0eXBlIjoib2JqZWN0In0sImltYWdlIjp7InR5cGUiOiJzdHJpbmcifSwiaW1hZ2VQdWxsUG9saWN5Ijp7ImRlc2NyaXB0aW9uIjoiUHVsbFBvbGljeSBkZXNjcmliZXMgYSBwb2xpY3kgZm9yIGlmL3doZW4gdG8gcHVsbCBhIGNvbnRhaW5lciBpbWFnZSIsInR5cGUiOiJzdHJpbmcifSwibGlzdGVuZXIiOnsicHJvcGVydGllcyI6eyJtYXhIdHRwUmVxdWVzdEJvZHlTaXplIjp7ImRlc2NyaXB0aW9uIjoiTWF4aW11bSBwYXlsb2FkIChyZXF1ZXN0IGJvZHkpIHNpemUgZm9yIHRoZSBhdXRoIHNlcnZpY2UgKEhUVFAgaW50ZXJmYWNlKSwgaW4gYnl0ZXMuIiwidHlwZSI6ImludGVnZXIifSwicG9ydCI6eyJkZXNjcmlwdGlvbiI6IlBvcnQgbnVtYmVyIG9mIHRoZSBHUlBDIGludGVyZmFjZS5cbkRFUFJFQ0FURUQ6IHVzZSAncG9ydHMuZ3JwYycgaW5zdGVhZC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInBvcnRzIjp7ImRlc2NyaXB0aW9uIjoiUG9ydCBudW1iZXJzIG9mIHRoZSBHUlBDIGFuZCBIVFRQIGF1dGggaW50ZXJmYWNlcy4iLCJwcm9wZXJ0aWVzIjp7ImdycGMiOnsiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJodHRwIjp7ImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInR5cGUiOiJvYmplY3QifSwidGltZW91dCI6eyJkZXNjcmlwdGlvbiI6IlRpbWVvdXQgb2YgdGhlIGF1dGggc2VydmljZSAoR1JQQyBhbmQgSFRUUCBpbnRlcmZhY2VzKSwgaW4gbWlsbGlzZWNvbmRzLiIsInR5cGUiOiJpbnRlZ2VyIn0sInRscyI6eyJkZXNjcmlwdGlvbiI6IlRMUyBjb25maWd1cmF0aW9uIG9mIHRoZSBhdXRoIHNlcnZpY2UgKEdSUEMgYW5kIEhUVFAgaW50ZXJmYWNlcykuIiwicHJvcGVydGllcyI6eyJjZXJ0U2VjcmV0UmVmIjp7ImRlc2NyaXB0aW9uIjoiTG9jYWxPYmplY3RSZWZlcmVuY2UgY29udGFpbnMgZW5vdWdoIGluZm9ybWF0aW9uIHRvIGxldCB5b3UgbG9jYXRlIHRoZVxucmVmZXJlbmNlZCBvYmplY3QgaW5zaWRlIHRoZSBzYW1lIG5hbWVzcGFjZS4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudC5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzXG5UT0RPOiBBZGQgb3RoZXIgdXNlZnVsIGZpZWxkcy4gYXBpVmVyc2lvbiwga2luZCwgdWlkPyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwiZW5hYmxlZCI6eyJ0eXBlIjoiYm9vbGVhbiJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsidGxzIl0sInR5cGUiOiJvYmplY3QifSwibG9nTGV2ZWwiOnsidHlwZSI6InN0cmluZyJ9LCJsb2dNb2RlIjp7InR5cGUiOiJzdHJpbmcifSwibWV0cmljcyI6eyJwcm9wZXJ0aWVzIjp7ImRlZXAiOnsidHlwZSI6ImJvb2xlYW4ifSwicG9ydCI6eyJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn19LCJ0eXBlIjoib2JqZWN0In0sIm9pZGNTZXJ2ZXIiOnsicHJvcGVydGllcyI6eyJwb3J0Ijp7ImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwidGxzIjp7InByb3BlcnRpZXMiOnsiY2VydFNlY3JldFJlZiI6eyJkZXNjcmlwdGlvbiI6IkxvY2FsT2JqZWN0UmVmZXJlbmNlIGNvbnRhaW5zIGVub3VnaCBpbmZvcm1hdGlvbiB0byBsZXQgeW91IGxvY2F0ZSB0aGVcbnJlZmVyZW5jZWQgb2JqZWN0IGluc2lkZSB0aGUgc2FtZSBuYW1lc3BhY2UuIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbnQuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL292ZXJ2aWV3L3dvcmtpbmctd2l0aC1vYmplY3RzL25hbWVzLyNuYW1lc1xuVE9ETzogQWRkIG90aGVyIHVzZWZ1bCBmaWVsZHMuIGFwaVZlcnNpb24sIGtpbmQsIHVpZD8iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sImVuYWJsZWQiOnsidHlwZSI6ImJvb2xlYW4ifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInRscyJdLCJ0eXBlIjoib2JqZWN0In0sInJlcGxpY2FzIjp7ImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwic2VjcmV0TGFiZWxTZWxlY3RvcnMiOnsidHlwZSI6InN0cmluZyJ9LCJzdXBlcnNlZGluZ0hvc3RTdWJzZXRzIjp7InR5cGUiOiJib29sZWFuIn0sInRyYWNpbmciOnsicHJvcGVydGllcyI6eyJlbmRwb2ludCI6eyJ0eXBlIjoic3RyaW5nIn0sImluc2VjdXJlIjp7InR5cGUiOiJib29sZWFuIn0sInRhZ3MiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJlbmRwb2ludCJdLCJ0eXBlIjoib2JqZWN0In0sInZvbHVtZXMiOnsicHJvcGVydGllcyI6eyJkZWZhdWx0TW9kZSI6eyJkZXNjcmlwdGlvbiI6IlBlcm1pc3Npb25zIG1vZGUuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJpdGVtcyI6eyJpdGVtcyI6eyJwcm9wZXJ0aWVzIjp7ImNvbmZpZ01hcHMiOnsiZGVzY3JpcHRpb24iOiJBbGxvdyBtdWx0aXBsZSBjb25maWdtYXBzIHRvIG1vdW50IHRvIHRoZSBzYW1lIGRpcmVjdG9yeSIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiTW91bnQgZGV0YWlscyIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiTWFwcyBhIHN0cmluZyBrZXkgdG8gYSBwYXRoIHdpdGhpbiBhIHZvbHVtZS4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUga2V5IHRvIHByb2plY3QuIiwidHlwZSI6InN0cmluZyJ9LCJtb2RlIjp7ImRlc2NyaXB0aW9uIjoibW9kZSBpcyBPcHRpb25hbDogbW9kZSBiaXRzIHVzZWQgdG8gc2V0IHBlcm1pc3Npb25zIG9uIHRoaXMgZmlsZS5cbk11c3QgYmUgYW4gb2N0YWwgdmFsdWUgYmV0d2VlbiAwMDAwIGFuZCAwNzc3IG9yIGEgZGVjaW1hbCB2YWx1ZSBiZXR3ZWVuIDAgYW5kIDUxMS5cbllBTUwgYWNjZXB0cyBib3RoIG9jdGFsIGFuZCBkZWNpbWFsIHZhbHVlcywgSlNPTiByZXF1aXJlcyBkZWNpbWFsIHZhbHVlcyBmb3IgbW9kZSBiaXRzLlxuSWYgbm90IHNwZWNpZmllZCwgdGhlIHZvbHVtZSBkZWZhdWx0TW9kZSB3aWxsIGJlIHVzZWQuXG5UaGlzIG1pZ2h0IGJlIGluIGNvbmZsaWN0IHdpdGggb3RoZXIgb3B0aW9ucyB0aGF0IGFmZmVjdCB0aGUgZmlsZVxubW9kZSwgbGlrZSBmc0dyb3VwLCBhbmQgdGhlIHJlc3VsdCBjYW4gYmUgb3RoZXIgbW9kZSBiaXRzIHNldC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInBhdGgiOnsiZGVzY3JpcHRpb24iOiJwYXRoIGlzIHRoZSByZWxhdGl2ZSBwYXRoIG9mIHRoZSBmaWxlIHRvIG1hcCB0aGUga2V5IHRvLlxuTWF5IG5vdCBiZSBhbiBhYnNvbHV0ZSBwYXRoLlxuTWF5IG5vdCBjb250YWluIHRoZSBwYXRoIGVsZW1lbnQgJy4uJy5cbk1heSBub3Qgc3RhcnQgd2l0aCB0aGUgc3RyaW5nICcuLicuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsia2V5IiwicGF0aCJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtb3VudFBhdGgiOnsiZGVzY3JpcHRpb24iOiJBbiBhYnNvbHV0ZSBwYXRoIHdoZXJlIHRvIG1vdW50IGl0IiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiVm9sdW1lIG5hbWUiLCJ0eXBlIjoic3RyaW5nIn0sInNlY3JldHMiOnsiZGVzY3JpcHRpb24iOiJTZWNyZXQgbW91bnQiLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsibW91bnRQYXRoIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJsaXN0ZW5lciIsIm9pZGNTZXJ2ZXIiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJBdXRob3Jpbm9TdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgQXV0aG9yaW5vIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9ucyBpcyBhbiBhcnJheSBvZiB0aGUgY3VycmVudCBBdXRob3Jpbm8ncyBDUiBjb25kaXRpb25zXG5TdXBwb3J0ZWQgY29uZGl0aW9uIHR5cGVzOiBDb25kaXRpb25SZWFkeSIsIml0ZW1zIjp7InByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImRlc2NyaXB0aW9uIjoiTGFzdCB0aW1lIHRoZSBjb25kaXRpb24gdHJhbnNpdCBmcm9tIG9uZSBzdGF0dXMgdG8gYW5vdGhlci4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sImxhc3RVcGRhdGVkVGltZSI6eyJkZXNjcmlwdGlvbiI6Ikxhc3QgdGltZSB0aGUgY29uZGl0aW9uIHdhcyB1cGRhdGVkIiwiZm9ybWF0IjoiZGF0ZS10aW1lIiwidHlwZSI6InN0cmluZyJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiSHVtYW4gcmVhZGFibGUgbWVzc2FnZSBpbmRpY2F0aW5nIGRldGFpbHMgYWJvdXQgbGFzdCB0cmFuc2l0aW9uLiIsInR5cGUiOiJzdHJpbmcifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoiKGJyaWVmKSByZWFzb24gZm9yIHRoZSBjb25kaXRpb24ncyBsYXN0IHRyYW5zaXRpb24uIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgb2YgdGhlIGNvbmRpdGlvbiwgb25lIG9mIFRydWUsIEZhbHNlLCBVbmtub3duLiIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6IlR5cGUgb2YgY29uZGl0aW9uIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsic3RhdHVzIiwidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LW1hcC1rZXlzIjpbInR5cGUiXSwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6Im1hcCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLW1hbmFnZXItazhzLWF1dGgtcm9sZSJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbImF1dGhlbnRpY2F0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsidG9rZW5yZXZpZXdzIl0sInZlcmJzIjpbImNyZWF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsic3ViamVjdGFjY2Vzc3Jldmlld3MiXSwidmVyYnMiOlsiY3JlYXRlIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLW1hbmFnZXItcm9sZSJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbImF1dGhvcmluby5rdWFkcmFudC5pbyJdLCJyZXNvdXJjZXMiOlsiYXV0aGNvbmZpZ3MiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiYXV0aG9yaW5vLmt1YWRyYW50LmlvIl0sInJlc291cmNlcyI6WyJhdXRoY29uZmlncy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCIsImxpc3QiLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZWNyZXRzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLWF1dGhjb25maWctZWRpdG9yLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLWF1dGhjb25maWctdmlld2VyLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogYWFjM2ExNWQuYXV0aG9yaW5vLmt1YWRyYW50LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJtYW5hZ2VyLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImF1dGhvcmluby1vcGVyYXRvciJ9LCJuYW1lIjoiYXV0aG9yaW5vLW9wZXJhdG9yLW1ldHJpY3MifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Im1ldHJpY3MiLCJwb3J0Ijo4MDgwLCJ0YXJnZXRQb3J0IjoibWV0cmljcyJ9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImF1dGhvcmluby1vcGVyYXRvciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoiYXV0aG9yaW5vIiwiYXV0aG9yaW5vLWNvbXBvbmVudCI6ImF1dGhvcmluby13ZWJob29rcyJ9LCJuYW1lIjoiYXV0aG9yaW5vLXdlYmhvb2tzIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImFwcCI6ImF1dGhvcmlubyIsImF1dGhvcmluby1jb21wb25lbnQiOiJhdXRob3Jpbm8td2ViaG9va3MifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
relatedImages:
  - image: registry.redhat.io/3scale-tech-preview/authorino-operator-bundle@sha256:fa929a75fa0c1a52320d7aea77d03db4362c629f5cccd6eea2242fc782e27600
    name: ""
  - image: registry.redhat.io/3scale-tech-preview/authorino-rhel9-operator@sha256:48f8bb245f2c912cff8ac08af5862d6df68be5d198e26d488546cb997276dd93
    name: authorino-rhel9-operator-48f8bb245f2c912cff8ac08af5862d6df68be5d198e26d488546cb997276dd93-annotation
  - image: registry.redhat.io/3scale-tech-preview/authorino-rhel9-operator@sha256:48f8bb245f2c912cff8ac08af5862d6df68be5d198e26d488546cb997276dd93
    name: manager
  - image: registry.redhat.io/3scale-tech-preview/authorino-rhel9@sha256:26ec6d4579f4dd746f5e898b8f086963849b98c704a7a7f8b4dc7517cf0c7003
    name: webhooks
  - image: registry.redhat.io/3scale-tech-preview/authorino-rhel9@sha256:26ec6d4579f4dd746f5e898b8f086963849b98c704a7a7f8b4dc7517cf0c7003
    name: authorino
schema: olm.bundle
---
image: registry.redhat.io/3scale-tech-preview/authorino-operator-bundle@sha256:75ef745eee540a43a00c49107c5cc9ed51c03ae1c5554de51ee798f1ac7d55f0
name: authorino-operator.v1.1.1
package: authorino-operator
properties:
  - type: olm.gvk
    value:
      group: authorino.kuadrant.io
      kind: AuthConfig
      version: v1beta1
  - type: olm.gvk
    value:
      group: authorino.kuadrant.io
      kind: AuthConfig
      version: v1beta2
  - type: olm.gvk
    value:
      group: operator.authorino.kuadrant.io
      kind: Authorino
      version: v1beta1
  - type: olm.package
    value:
      packageName: authorino-operator
      version: 1.1.1
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoib3BlcmF0b3JzLmNvcmVvcy5jb20vdjFhbHBoYTEiLCJraW5kIjoiQ2x1c3RlclNlcnZpY2VWZXJzaW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiYWxtLWV4YW1wbGVzIjoiW1xuICB7XG4gICAgXCJhcGlWZXJzaW9uXCI6IFwiYXV0aG9yaW5vLmt1YWRyYW50LmlvL3YxYmV0YTFcIixcbiAgICBcImtpbmRcIjogXCJBdXRoQ29uZmlnXCIsXG4gICAgXCJtZXRhZGF0YVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJteS1hcGktcHJvdGVjdGlvblwiXG4gICAgfSxcbiAgICBcInNwZWNcIjoge1xuICAgICAgXCJob3N0c1wiOiBbXG4gICAgICAgIFwibXktYXBpLmlvXCJcbiAgICAgIF0sXG4gICAgICBcImlkZW50aXR5XCI6IFtcbiAgICAgICAge1xuICAgICAgICAgIFwiYXBpS2V5XCI6IHtcbiAgICAgICAgICAgIFwic2VsZWN0b3JcIjoge1xuICAgICAgICAgICAgICBcIm1hdGNoTGFiZWxzXCI6IHtcbiAgICAgICAgICAgICAgICBcImdyb3VwXCI6IFwiZnJpZW5kc1wiXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIFwiY3JlZGVudGlhbHNcIjoge1xuICAgICAgICAgICAgXCJpblwiOiBcImF1dGhvcml6YXRpb25faGVhZGVyXCIsXG4gICAgICAgICAgICBcImtleVNlbGVjdG9yXCI6IFwiQVBJS0VZXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIFwibmFtZVwiOiBcImFwaS1rZXktdXNlcnNcIlxuICAgICAgICB9XG4gICAgICBdXG4gICAgfVxuICB9LFxuICB7XG4gICAgXCJhcGlWZXJzaW9uXCI6IFwiYXV0aG9yaW5vLmt1YWRyYW50LmlvL3YxYmV0YTJcIixcbiAgICBcImtpbmRcIjogXCJBdXRoQ29uZmlnXCIsXG4gICAgXCJtZXRhZGF0YVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJteS1hcGktcHJvdGVjdGlvblwiXG4gICAgfSxcbiAgICBcInNwZWNcIjoge1xuICAgICAgXCJhdXRoZW50aWNhdGlvblwiOiB7XG4gICAgICAgIFwiYXBpLWtleS11c2Vyc1wiOiB7XG4gICAgICAgICAgXCJhcGlLZXlcIjoge1xuICAgICAgICAgICAgXCJzZWxlY3RvclwiOiB7XG4gICAgICAgICAgICAgIFwibWF0Y2hMYWJlbHNcIjoge1xuICAgICAgICAgICAgICAgIFwiZ3JvdXBcIjogXCJmcmllbmRzXCJcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCJjcmVkZW50aWFsc1wiOiB7XG4gICAgICAgICAgICBcImF1dGhvcml6YXRpb25IZWFkZXJcIjoge1xuICAgICAgICAgICAgICBcInByZWZpeFwiOiBcIkFQSUtFWVwiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgXCJob3N0c1wiOiBbXG4gICAgICAgIFwibXktYXBpLmlvXCJcbiAgICAgIF1cbiAgICB9XG4gIH0sXG4gIHtcbiAgICBcImFwaVZlcnNpb25cIjogXCJvcGVyYXRvci5hdXRob3Jpbm8ua3VhZHJhbnQuaW8vdjFiZXRhMVwiLFxuICAgIFwia2luZFwiOiBcIkF1dGhvcmlub1wiLFxuICAgIFwibWV0YWRhdGFcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiYXV0aG9yaW5vLXNhbXBsZVwiXG4gICAgfSxcbiAgICBcInNwZWNcIjoge1xuICAgICAgXCJsaXN0ZW5lclwiOiB7XG4gICAgICAgIFwidGxzXCI6IHtcbiAgICAgICAgICBcImVuYWJsZWRcIjogZmFsc2VcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIFwib2lkY1NlcnZlclwiOiB7XG4gICAgICAgIFwidGxzXCI6IHtcbiAgICAgICAgICBcImVuYWJsZWRcIjogZmFsc2VcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXSIsImNhcGFiaWxpdGllcyI6IkJhc2ljIEluc3RhbGwiLCJjYXRlZ29yaWVzIjoiSW50ZWdyYXRpb24gXHUwMDI2IERlbGl2ZXJ5IiwiY29udGFpbmVySW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vM3NjYWxlLXRlY2gtcHJldmlldy9hdXRob3Jpbm8tcmhlbDktb3BlcmF0b3JAc2hhMjU2Ojk0YjUxNDU1OGIwMjhmMzE0YzQxN2VkZThjMjJmYjBkNzljOThmYjhkNzcyOGY4M2E0YzA5NDMwOWJlZThhOGQiLCJjcmVhdGVkQXQiOiIyMDI0LTExLTA4VDExOjA2OjMzWiIsImRlc2NyaXB0aW9uIjoiQXV0aG9yaW5vIiwiZmVhdHVyZXMub3BlcmF0b3JzLm9wZW5zaGlmdC5pby9kaXNjb25uZWN0ZWQiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vZmlwcy1jb21wbGlhbnQiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vcHJveHktYXdhcmUiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vdGxzLXByb2ZpbGVzIjoiZmFsc2UiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL3Rva2VuLWF1dGgtYXdzIjoiZmFsc2UiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL3Rva2VuLWF1dGgtYXp1cmUiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vdG9rZW4tYXV0aC1nY3AiOiJmYWxzZSIsIm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vdmFsaWQtc3Vic2NyaXB0aW9uIjoiW1wiUmVkIEhhdCBJbnRlZ3JhdGlvblwiLCBcIlJlZCBIYXQgM3NjYWxlIEFQSSBNYW5hZ2VtZW50XCJdIiwib3BlcmF0b3JzLm9wZXJhdG9yZnJhbWV3b3JrLmlvL2J1aWxkZXIiOiJvcGVyYXRvci1zZGstdjEuMzIuMCIsIm9wZXJhdG9ycy5vcGVyYXRvcmZyYW1ld29yay5pby9wcm9qZWN0X2xheW91dCI6ImdvLmt1YmVidWlsZGVyLmlvL3YzIiwicmVwb3NpdG9yeSI6Imh0dHBzOi8vZ2l0aHViLmNvbS9LdWFkcmFudC9hdXRob3Jpbm8tb3BlcmF0b3IiLCJzdXBwb3J0Ijoia3VhZHJhbnQiLCJ0ZWN0b25pYy12aXNpYmlsaXR5Ijoib2NzIn0sImxhYmVscyI6eyJvcGVyYXRvcmZyYW1ld29yay5pby9hcmNoLmFtZDY0Ijoic3VwcG9ydGVkIiwib3BlcmF0b3JmcmFtZXdvcmsuaW8vYXJjaC5hcm02NCI6InN1cHBvcnRlZCIsIm9wZXJhdG9yZnJhbWV3b3JrLmlvL2FyY2gucHBjNjRsZSI6InN1cHBvcnRlZCIsIm9wZXJhdG9yZnJhbWV3b3JrLmlvL2FyY2guczM5MHgiOiJzdXBwb3J0ZWQiLCJvcGVyYXRvcmZyYW1ld29yay5pby9vcy5saW51eCI6InN1cHBvcnRlZCJ9LCJuYW1lIjoiYXV0aG9yaW5vLW9wZXJhdG9yLnYxLjEuMSIsIm5hbWVzcGFjZSI6InBsYWNlaG9sZGVyIn0sInNwZWMiOnsiYXBpc2VydmljZWRlZmluaXRpb25zIjp7fSwiY3VzdG9tcmVzb3VyY2VkZWZpbml0aW9ucyI6eyJvd25lZCI6W3siZGVzY3JpcHRpb24iOiJBUEkgdG8gZGVzY3JpYmUgdGhlIGRlc2lyZWQgcHJvdGVjdGlvbiBmb3IgYSBzZXJ2aWNlIiwiZGlzcGxheU5hbWUiOiJBdXRoQ29uZmlnIiwia2luZCI6IkF1dGhDb25maWciLCJuYW1lIjoiYXV0aGNvbmZpZ3MuYXV0aG9yaW5vLmt1YWRyYW50LmlvIiwidmVyc2lvbiI6InYxYmV0YTEifSx7ImRlc2NyaXB0aW9uIjoiQVBJIHRvIGRlc2NyaWJlIHRoZSBkZXNpcmVkIHByb3RlY3Rpb24gZm9yIGEgc2VydmljZSIsImRpc3BsYXlOYW1lIjoiQXV0aENvbmZpZyIsImtpbmQiOiJBdXRoQ29uZmlnIiwibmFtZSI6ImF1dGhjb25maWdzLmF1dGhvcmluby5rdWFkcmFudC5pbyIsInZlcnNpb24iOiJ2MWJldGEyIn0seyJkZXNjcmlwdGlvbiI6IkFQSSB0byBjcmVhdGUgaW5zdGFuY2VzIG9mIGF1dGhvcmlubyIsImRpc3BsYXlOYW1lIjoiQXV0aG9yaW5vIiwia2luZCI6IkF1dGhvcmlubyIsIm5hbWUiOiJhdXRob3Jpbm9zLm9wZXJhdG9yLmF1dGhvcmluby5rdWFkcmFudC5pbyIsInZlcnNpb24iOiJ2MWJldGExIn1dfSwiZGVzY3JpcHRpb24iOiJbQXV0aG9yaW5vXShodHRwczovL2RvY3Mua3VhZHJhbnQuaW8vYXV0aG9yaW5vLykgaXMgUmVkIEhhdCdzIEt1YmVybmV0ZXMtbmF0aXZlIGxpZ2h0d2VpZ2h0IGV4dGVybmFsIGF1dGhvcml6YXRpb24gc2VydmljZSBmb3IgdGFpbG9yLW1hZGUgWmVybyBUcnVzdCBBUEkgc2VjdXJpdHkuXG5cbkluc3RhbGwgdGhpcyBSZWQgSGF0IG9mZmljaWFsIGRpc3RyaWJ1dGlvbiBvZiBbQXV0aG9yaW5vIE9wZXJhdG9yXShodHRwczovL2RvY3Mua3VhZHJhbnQuaW8vYXV0aG9yaW5vLW9wZXJhdG9yLykgdG8gbWFuYWdlIGluc3RhbmNlcyBvZiBBdXRob3Jpbm8gaW4gdGhpcyBjbHVzdGVyLlxuXG5UaGUgY3VycmVudCBzdGF0ZSBvZiB0aGlzIGRpc3RyaWJ1dGlvbiBvZiB0aGUgb3BlcmF0b3IgaXM6ICoqX1RlY2huaWNhbCBQcmV2aWV3XyoqLlxuXG5UaGUgQ29tbXVuaXR5IHZlcnNpb24gb2YgQXV0aG9yaW5vIE9wZXJhdG9yLCBiYXNlZCBvbiB1cHN0cmVhbSBwdWJsaWMgaW1hZ2VzLCBpcyBhdmFpbGFibGUgaW4gW09wZXJhdG9ySHViLmlvXShodHRwczovL29wZXJhdG9yaHViLmlvL29wZXJhdG9yL2F1dGhvcmluby1vcGVyYXRvcikuXG5cbiMjIEdldHRpbmcgc3RhcnRlZFxuXG5BZnRlciBpbnN0YWxsaW5nIHRoZSBPcGVyYXRvciwgcmVxdWVzdCBhbiBpbnN0YW5jZSBvZiB0aGUgZXh0ZXJuYWwgYXV0aG9yaXphdGlvbiBzZXJ2aWNlIGJ5IGNyZWF0aW5nIGFuIGBBdXRob3Jpbm9gIGN1c3RvbSByZXNvdXJjZS5cblxuKipNaW5pbWFsIGV4YW1wbGUgKG5hbWVzcGFjZWQpKipcblxuYGBgeWFtbFxuYXBpVmVyc2lvbjogb3BlcmF0b3IuYXV0aG9yaW5vLmt1YWRyYW50LmlvL3YxYmV0YTFcbmtpbmQ6IEF1dGhvcmlub1xubWV0YWRhdGE6XG4gIG5hbWU6IGF1dGhvcmlub1xuc3BlYzpcbiAgbGlzdGVuZXI6XG4gICAgdGxzOlxuICAgICAgZW5hYmxlZDogZmFsc2VcbiAgb2lkY1NlcnZlcjpcbiAgICB0bHM6XG4gICAgICBlbmFibGVkOiBmYWxzZVxuYGBgXG5cbioqRXh0ZW5kZWQgZXhhbXBsZSoqXG5cbmBgYHlhbWxcbmFwaVZlcnNpb246IG9wZXJhdG9yLmF1dGhvcmluby5rdWFkcmFudC5pby92MWJldGExXG5raW5kOiBBdXRob3Jpbm9cbm1ldGFkYXRhOlxuICBuYW1lOiBhdXRob3Jpbm9cbnNwZWM6XG4gIGNsdXN0ZXJXaWRlOiB0cnVlXG4gIGF1dGhDb25maWdMYWJlbFNlbGVjdG9yczogZW52aXJvbm1lbnQ9cHJvZHVjdGlvblxuICBzZWNyZXRMYWJlbFNlbGVjdG9yczogYXV0aG9yaW5vLmt1YWRyYW50LmlvL2NvbXBvbmVudD1hdXRob3Jpbm8sZW52aXJvbm1lbnQ9cHJvZHVjdGlvblxuXG4gIHJlcGxpY2FzOiAyXG5cbiAgZXZhbHVhdG9yQ2FjaGVTaXplOiAyICMgbWJcblxuICBsb2dMZXZlbDogaW5mb1xuICBsb2dNb2RlOiBwcm9kdWN0aW9uXG5cbiAgbGlzdGVuZXI6XG4gICAgcG9ydHM6XG4gICAgICBncnBjOiA1MDAwMVxuICAgICAgaHR0cDogNTAwMVxuICAgIHRsczpcbiAgICAgIGNlcnRTZWNyZXRSZWY6XG4gICAgICAgIG5hbWU6IGF1dGhvcmluby1zZXJ2ZXItY2VydCAjIHNlY3JldCBtdXN0IGNvbnRhaW4gYHRscy5jcnRgIGFuZCBgdGxzLmtleWAgZW50cmllc1xuICAgIHRpbWVvdXQ6IDJcblxuICBvaWRjU2VydmVyOlxuICAgIHBvcnQ6IDgwODNcbiAgICB0bHM6XG4gICAgICBjZXJ0U2VjcmV0UmVmOlxuICAgICAgICBuYW1lOiBhdXRob3Jpbm8tb2lkYy1zZXJ2ZXItY2VydCAjIHNlY3JldCBtdXN0IGNvbnRhaW4gYHRscy5jcnRgIGFuZCBgdGxzLmtleWAgZW50cmllc1xuXG4gIG1ldHJpY3M6XG4gICAgcG9ydDogODA4MFxuICAgIGRlZXA6IHRydWVcblxuICBoZWFsdGh6OlxuICAgIHBvcnQ6IDgwODFcblxuICB0cmFjaW5nOlxuICAgIGVuZHBvaW50OiBycGM6Ly9vdGVsLWNvbGxlY3Rvci5vYnNlcnZhYmlsaXR5LnN2Yy5jbHVzdGVyLmxvY2FsOjQzMTdcbiAgICBpbnNlY3VyZTogdHJ1ZVxuXG4gIHZvbHVtZXM6XG4gICAgaXRlbXM6XG4gICAgICAtIG5hbWU6IGtleWNsb2FrLXRscy1jZXJ0XG4gICAgICAgIG1vdW50UGF0aDogL2V0Yy9zc2wvY2VydHNcbiAgICAgICAgY29uZmlnTWFwczpcbiAgICAgICAgICAtIGtleWNsb2FrLXRscy1jZXJ0XG4gICAgICAgIGl0ZW1zOiAjIGRldGFpbHMgdG8gbW91bnQgdGhlIGs4cyBjb25maWdtYXAgaW4gdGhlIGF1dGhvcmlubyBwb2RzXG4gICAgICAgICAgLSBrZXk6IGtleWNsb2FrLmNydFxuICAgICAgICAgICAgcGF0aDoga2V5Y2xvYWsuY3J0XG4gICAgZGVmYXVsdE1vZGU6IDQyMFxuYGBgXG5cbiMjIyBDbHVzdGVyLXdpZGUgdnMgTmFtZXNwYWNlZFxuXG5OYW1lc3BhY2VkIGluc3RhbmNlcyBvbmx5IHdhdGNoIGF1dGggcmVzb3VyY2VzIChgQXV0aENvbmZpZ2AgYW5kIGBTZWNyZXRzYCkgY3JlYXRlZCBpbiB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgdGhlIEF1dGhvcmlubyBzZXJ2aWNlLiBVc2UgdGhpcyBtb2RlIGZvciBkZWRpY2F0ZWQgaW5zdGFuY2VzIHRoYXQgZG8gbm90IHJlcXVpcmUgZWxldmF0ZWQgcHJpdmlsZWdlcy5cblxuQ2x1c3Rlci13aWRlIGluc3RhbmNlcyB3YXRjaCByZXNvdXJjZXMgYWNyb3NzIHRoZSBlbnRpcmUgY2x1c3RlciAoYWxsIG5hbWVzcGFjZXMuKSBEZXBsb3lpbmcgYW5kIHJ1bm5pbmcgQXV0aG9yaW5vIGluIHRoaXMgbW9kZSByZXF1aXJlcyBlbGV2YXRlZCBwcml2aWxlZ2VzLlxuXG4jIyMgTXVsdGktdGVuYW5jeVxuXG5Vc2UgdGhlIGBhdXRoQ29uZmlnTGFiZWxTZWxlY3RvcnNgIGZpZWxkIG9mIHRoZSBgQXV0aG9yaW5vYCBjdXN0b20gcmVzb3VyY2UgdG8gbmFycm93IHRoZSBzY29wZSBvZiB0aGUgQXV0aG9yaW5vIGluc3RhbmNlLlxuXG5Pbmx5IGBBdXRoQ29uZmlnYCBjdXN0b20gcmVzb3VyY2VzIHdob3NlIGxhYmVscyBtYXRjaCB0aGUgdmFsdWUgb2YgdGhpcyBmaWVsZCB3aWxsIGJlIGhhbmRsZWQgYnkgdGhlIEF1dGhvcmlubyBpbnN0YW5jZS5cblxuIyMgUHJvdGVjdCBhIGhvc3RcblxuVG8gcHJvdGVjdCBhIGhvc3QsIGNyZWF0ZSBhbiBgQXV0aENvbmZpZ2AgY3VzdG9tIHJlc291cmNlIGZvciB0aGUgaG9zdC4gRS5nLjpcblxuYGBgeWFtbFxuYXBpVmVyc2lvbjogYXV0aG9yaW5vLmt1YWRyYW50LmlvL3YxYmV0YTJcbmtpbmQ6IEF1dGhDb25maWdcbm1ldGFkYXRhOlxuICBuYW1lOiBteS1hcGktcHJvdGVjdGlvblxuc3BlYzpcbiAgaG9zdHM6XG4gIC0gbXktYXBpLmlvXG5cbiAgYXV0aGVudGljYXRpb246XG4gICAgXCJrZXljbG9ha1wiOlxuICAgICAgand0OlxuICAgICAgICBpc3N1ZXJVcmw6IGh0dHBzOi8va2V5Y2xvYWsua2V5Y2xvYWsuc3ZjLmNsdXN0ZXIubG9jYWw6ODA4MC9yZWFsbXMvbXktcmVhbG1cblxuICBhdXRob3JpemF0aW9uOlxuICAgIFwiazhzLXJiYWNcIjpcbiAgICAgIGt1YmVybmV0ZXNTdWJqZWN0QWNjZXNzUmV2aWV3OlxuICAgICAgICB1c2VyOlxuICAgICAgICAgIHNlbGVjdG9yOiBhdXRoLmlkZW50aXR5LnVzZXIudXNlcm5hbWVcbiAgICAgICAgcmVzb3VyY2VBdHRyaWJ1dGVzOlxuICAgICAgICAgIHJlc291cmNlOlxuICAgICAgICAgICAgdmFsdWU6IG15LWFwaVxuICAgICAgICAgIHZlcmI6XG4gICAgICAgICAgICBzZWxlY3RvcjogcmVxdWVzdC5tZXRob2RcbiAgICAgIGNhY2hlOlxuICAgICAgICBrZXk6XG4gICAgICAgICAgc2VsZWN0b3I6IGF1dGguaWRlbnRpdHkudXNlci51c2VybmFtZVxuICAgICAgICB0dGw6IDMwXG4gICAgXCJhZnRlci0yYW0tb25seVwiOlxuICAgICAgcmVnbzogfFxuICAgICAgICBhbGxvdyB7XG4gICAgICAgICAgW2hvdXIsIF8sIF9dIDo9IHRpbWUuY2xvY2sodGltZS5ub3dfbnMoKSlcbiAgICAgICAgICBob3VyIFx1MDAzZT0gMlxuICAgICAgICB9XG5gYGBcblxuTWFrZSBzdXJlIGFsbCByZXF1ZXN0cyB0byB0aGUgaG9zdCBhcmUgZmlzcnQgY2hlY2tlZCB3aXRoIHRoZSBBdXRob3Jpbm8gaW5zdGFuY2UsIGJ5IGNvbmZpZ3VyaW5nIGFuIEVudm95IHByb3h5IGZvciBleHRlcm5hbCBhdXRoejpcblxuYGBgeWFtbFxuY2x1c3RlcnM6XG4tIG5hbWU6IG15LWFwaVxuICDigKZcbi0gbmFtZTogYXV0aG9yaW5vXG4gIGNvbm5lY3RfdGltZW91dDogMC4yNXNcbiAgdHlwZTogU1RSSUNUX0ROU1xuICBsYl9wb2xpY3k6IFJPVU5EX1JPQklOXG4gIGh0dHAyX3Byb3RvY29sX29wdGlvbnM6IHt9XG4gIGxvYWRfYXNzaWdubWVudDpcbiAgICBjbHVzdGVyX25hbWU6IGF1dGhvcmlub1xuICAgIGVuZHBvaW50czpcbiAgICAtIGxiX2VuZHBvaW50czpcbiAgICAgIC0gZW5kcG9pbnQ6XG4gICAgICAgICAgYWRkcmVzczpcbiAgICAgICAgICAgIHNvY2tldF9hZGRyZXNzOlxuICAgICAgICAgICAgICBhZGRyZXNzOiBhdXRob3Jpbm8tYXV0aG9yaW5vLWF1dGhvcml6YXRpb25cbiAgICAgICAgICAgICAgcG9ydF92YWx1ZTogNTAwNTFcbmxpc3RlbmVyczpcbi0gZmlsdGVyX2NoYWluczpcbiAgLSBmaWx0ZXJzOlxuICAgIG5hbWU6IGVudm95Lmh0dHBfY29ubmVjdGlvbl9tYW5hZ2VyXG4gICAgdHlwZWRfY29uZmlnOlxuICAgICAgXCJAdHlwZVwiOiB0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5uZXR3b3JrLmh0dHBfY29ubmVjdGlvbl9tYW5hZ2VyLnYzLkh0dHBDb25uZWN0aW9uTWFuYWdlclxuICAgICAgdXNlX3JlbW90ZV9hZGRyZXNzOiB0cnVlXG4gICAgICByb3V0ZV9jb25maWc6XG4gICAgICAgIG5hbWU6IG15LWFwaS1jb25maWdcbiAgICAgICAgdmlydHVhbF9ob3N0czpcbiAgICAgICAgLSBuYW1lOiBteS1hcGktdnNcbiAgICAgICAgICBkb21haW5zOlxuICAgICAgICAgIC0gbXktYXBpLmlvXG4gICAgICAgICAgcm91dGVzOlxuICAgICAgICAgIC0gbWF0Y2g6XG4gICAgICAgICAgICAgIHByZWZpeDogL1xuICAgICAgICAgICAgcm91dGU6XG4gICAgICAgICAgICAgIGNsdXN0ZXI6IG15LWFwaVxuICAgICAgaHR0cF9maWx0ZXJzOlxuICAgICAgLSBuYW1lOiBlbnZveS5maWx0ZXJzLmh0dHAuZXh0X2F1dGh6XG4gICAgICAgIHR5cGVkX2NvbmZpZzpcbiAgICAgICAgICBcIkB0eXBlXCI6IHR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLmh0dHAuZXh0X2F1dGh6LnYzLkV4dEF1dGh6XG4gICAgICAgICAgdHJhbnNwb3J0X2FwaV92ZXJzaW9uOiBWM1xuICAgICAgICAgIGZhaWx1cmVfbW9kZV9hbGxvdzogZmFsc2VcbiAgICAgICAgICBpbmNsdWRlX3BlZXJfY2VydGlmaWNhdGU6IHRydWVcbiAgICAgICAgICBncnBjX3NlcnZpY2U6XG4gICAgICAgICAgICBlbnZveV9ncnBjOlxuICAgICAgICAgICAgICBjbHVzdGVyX25hbWU6IGF1dGhvcmlub1xuICAgICAgICAgICAgdGltZW91dDogMXNcbmBgYFxuXG4uLi5vciwgaWYgdXNpbmcgSXN0aW8sIGJ5IGNyZWF0aW5nIGFuIFtgQXV0aG9yaXphdGlvblBvbGljeWBdKGh0dHBzOi8vaXN0aW8uaW8vbGF0ZXN0L2RvY3MvcmVmZXJlbmNlL2NvbmZpZy9zZWN1cml0eS9hdXRob3JpemF0aW9uLXBvbGljeS8jQXV0aG9yaXphdGlvblBvbGljeSkgY3VzdG9tIHJlc291cmNlLiBVc2UgYGFjdGlvbjogQ1VTVE9NYCBpbiB0aGUgcmVzb3VyY2UgYW5kIHRoZSBBdXRob3Jpbm8gYXV0aG9yaXphdGlvbiBzZXJ2aWNlIGNvbmZpZ3VyZWQgaW4gdGhlIG1lc2ggZXh0ZW5zaW9uIHByb3ZpZGVyIHNldHRpbmdzLlxuXG4jIyBGZWF0dXJlc1xuXG4qKkF1dGhlbnRpY2F0aW9uKipcblxuKiBKV1QgdmFsaWRhdGlvbiAod2l0aCBPcGVuSUQgQ29ubmVjdCBEaXNjb3ZlcnkpXG4qIE9BdXRoIDIuMCBUb2tlbiBJbnRyb3NwZWN0aW9uIChvcGFxdWUgdG9rZW5zKVxuKiBLdWJlcm5ldGVzIFRva2VuUmV2aWV3IChTZXJ2aWNlQWNjb3VudCB0b2tlbnMpXG4qIEFQSSBrZXkgYXV0aGVudGljYXRpb25cbiogWC41MDkgY2xpZW50IGNlcnRpZmljYXRlIGF1dGhlbnRpY2F0aW9uXG4qIEFub255bW91cyBhY2Nlc3NcbiogUHJveHktaGFuZGxlZCAoYXV0aGVudGljYXRpb24gcGVyZm9ybWVkIGJ5IHRoZSBwcm94eSlcblxuKipBdXRob3JpemF0aW9uKipcblxuKiBCdWlsdC1pbiBzaW1wbGUgcGF0dGVybiBtYXRjaGluZyAoZS5nLiBKV1QgY2xhaW1zLCByZXF1ZXN0IGF0dHJpYnV0ZXMgY2hlY2tpbmcpXG4qIE9QQSBwb2xpY2llcyAoaW5saW5lIFJlZ28gYW5kIGZldGNoIGZyb20gZXh0ZXJuYWwgcmVnaXN0cnkpXG4qIEt1YmVybmV0ZXMgU3ViamVjdEFjY2Vzc1JldmlldyAocmVzb3VyY2UgYW5kIG5vbi1yZXNvdXJjZSBhdHRyaWJ1dGVzKVxuKiBBdXRoemVkIFNwaWNlREJcblxuKipFeHRlcm5hbCBtZXRhZGF0YSoqXG5cbiogSFRUUCByZXF1ZXN0XG4qIE9wZW5JRCBDb25uZWN0IFVzZXIgSW5mb1xuKiBVTUEtcHJvdGVjdGVkIHJlc291cmNlIGF0dHJpYnV0ZXNcblxuKipDdXN0b20gcmVzcG9uc2VzKipcblxuKiBIZWFkZXIgaW5qZWN0aW9uIChGZXN0aXZhbCBXcmlzdGJhbmRzIHRva2VucywgSlNPTiwgcGxhaW4gdGV4dClcbiogRW52b3kgRHluYW1pYyBNZXRhZGF0YVxuKiBDdXN0b20gSFRUUCByZXNwb25zZSAoc3RhdHVzIGNvZGUsIGhlYWRlcnMsIG1lc3NhZ2VzLCBib2R5LCBldGMpXG5cbioqQ2FsbGJhY2tzKipcblxuKiBIVFRQIHdlYmhvb2tzXG5cbioqQ2FjaGluZyoqXG5cbiogT3BlbklEIENvbm5lY3QgYW5kIFVzZXItTWFuYWdlZCBBY2Nlc3MgY29uZmlnc1xuKiBKU09OIFdlYiBLZXlzIChKV0tzKSBhbmQgSlNPTiBXZWIgS2V5IFNldHMgKEpXS1MpXG4qIEFjY2VzcyB0b2tlbnNcbiogRXh0ZXJuYWwgbWV0YWRhdGFcbiogUHJlY29tcGlsZWQgUmVnbyBwb2xpY2llc1xuKiBQb2xpY3kgZXZhbHVhdGlvblxuXG5DaGVjayBvdXQgdGhlIGZ1bGwgW0ZlYXR1cmUgU3BlY2lmaWNhdGlvbl0oaHR0cHM6Ly9kb2NzLmt1YWRyYW50LmlvL2F1dGhvcmluby9kb2NzL2ZlYXR1cmVzLykgYW5kIGhvdy10byBndWlkZXMgaW4gdGhlIFtLdWFkcmFudCBEb2NzXShodHRwczovL2RvY3Mua3VhZHJhbnQuaW8pIHdlYnNpdGUuIiwiZGlzcGxheU5hbWUiOiJSZWQgSGF0IC0gQXV0aG9yaW5vIChUZWNobmljYWwgUHJldmlldykiLCJpY29uIjpbeyJiYXNlNjRkYXRhIjoiaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQU1nQUFBRElDQUlBQUFBaU9qbkpBQUFIQ2tsRVFWUjRuT3pjNzJ0V2RRUEg4ZSt0bS9lY1hHTk83N21iM2JlWkxndGtEeHBDZ1Q0SUJCRnFKVDFZUnFGUzVvTVMvQkc1aW9xaFVjM0lGS3dIcHFIU2c5cURzQ3dJUWVpQlFvRW90SVN5emN3YTZiSTVObHltczhYNExwMXUxenpYdWI2ZjgvMmVhKy9YSDNETzU4R2JYZWVjNjlvcEdoZ1lNSUJyRTN3UFFHRWlMRWdRRmlRSUN4S0VCUW5DZ2dSaFFZS3dJRUZZa0NBc1NCQVdKQWdMRW9RRkNjS0NCR0ZCZ3JBZ1FWaVFJQ3hJRUJZa0NBc1NoQVVKd29JRVlVR0NzQ0JCV0pBZ0xFZ1FGaVFJQ3hLRUJRbkNnZ1JoUVlLd0lFRllrQ0FzU0JBV0pBZ0xFb1FGQ2NLQ0JHRkJnckFnUVZpUUlDeElFQllrQ0FzU2hBVUp3b0lFWVVHQ3NDQlI1SHRBSkk4OXVxeXR2VDJmSTJ6ZXRIbnhraVh1RmduMWQzZWVhZDQ0czNGTFVYbWw3eTN4cFNPc3R2YjI0OTk4bTg4UnVycTYzTTBSNnUvdVBQbGt3NlZqWnkrZGJKaTd1eVc5YmZGUkdKQnJWUmxqTGgwNysrTXJ6L2hlRkI5aGhXSjRWVmJ2Z2RaVEw2ejBPaW8rd2dyQ3lLcXM3ZysvK21YNzg1NUc1WVd3L010V2xkVzViZi81bGgySmo4b1hZWGsyZGxWV1IvUE92dGJEQ1k1eWdMQjhpbEtWTWVacTErWDJEZXY3dXp1VDJ1VUFZWGtUc1NyclNsdHYrL28wWGNnVGxoODVWV1ZkL1BMVXVmZGZVNDV5aWJBOGlGR1YxYkY1WDFvdXRnZ3JhWDJ0aCtOVlpaMXVlc24xSWduQ1NsUmY2K0VmVmo0ZHV5cjdSRDRWVDdZSUt6bTJxcXRkbC9NOFR1ZTIvWC8rZE1MUktCWENTb2lycXF6VFRjODVPWTRPWVNYQmJWWDJEckg3aXc5Y0hVMkJzT1NjVjJYOS9OWjJ0d2QwaTdDMFJGWFpSNlloZjRkSVdFSzZxcXlPNXAzQmZzOURXQ3JxcXV4M2lHZjNidFVkUHgrRUpaRkFWZGFGenc2cFR4RVBZYm1YV0ZVaFgya1JsbU5KVm1YOSt0N2V4TTRWSFdHNWxIeFY5bzlXejVFRFNaNHhDc0p5eGt0VjFybVA5aVYvMHJFUmxoc2VxN0wvenhQYWN3ZkNjc0J2VmRidkgrL3llUGFSQ0N0ZklWUTFHTmJuQi8wT3VBbGg1U1dRcXV6dnRJTDZMUTFoeFJkT1ZWYjNvVTk4VDdpT3NHSUtyYXJRUGcwSks0NEFxN0tmaHVIY0d4Sld6c0tzeXVvKzJPSjd3aERDeWszSVZSbGplbzRmOVQxaENHSGw0SHpManU4ZVhCVnNWY2FZaTBkRHVURWtyS2pPdCt3NDB4amk3d2lHdTlMV0c4aGxGbUZGa29xcXJMNFRYL3VlWUFncmtoUlZOWGlaZGZTSTd3bUdzRzR0WFZVWlkvN0k3L1hTcmhEV1dGSlgxZUJsVnNkdnZpY1l3aHBMR3F1eWowbDlUekNFbFZWS3E3SkNlTlVSWVkwaTFWVVpZL3A3THZpZVFGZ2pwTDJxd2V2MzcxdDlUeUNzR3hWQVZZUFg3NzA5dmljUTFqQ0ZVVlVnQ0d0SUlWVVZ3cU1zd2pJRlZwVXg1cS9laTc0bkVGYkJWUldJOFI0V1ZZbU02N0NvU21kY2h3V2RjUjNXOUlZMU01dlgrRjVSbU1aMVdMU2xNOTdEb2kwUndqS0YxOWFFekJUZkV3anJINFhVMXVRNWMzeFBJS3hoQ3FrdDd3anJCb1hSVm5HbXpQY0V3aHFoQU5xYWZHZXQ3d21FTlpxMHQxVlVOdFgzQk1MS0l0VnRsZFl1OUQyQnNMSkxhVnNsZFZXK0p4akN1b1UwdGxWYy9SL2ZFd3hoM1ZycTJncmhJUlpoUlpLdXRzcm1ML0E5d1JCV1ZDbHFxM1RlUGI0bkdNTEtRU3JhS3E3SkZKVlgrbDVoQ0NzMzB4dlczUFhwcm9rVmszd1B5V3JLL0htK0p3d2hyTnlVMWk2OFk4Kzd3YlpWZHZkODN4T0dFRmJPUW02cmZIR0Q3d2xEQ0N1T01Oc3FxYXNLNUFLTHNPSUxzSzFwOXkvMlBlRTZ3b292dExiS0Z6M2tlOEoxaEpXWGNOb3FxYXY2OTIyaDNCSVNsZ09CdEJYVTV5Qmh1UkZDVzlNZVh1WHg3Q01SbGh0KzI4clUxNFp6UDJnUmxqTWUyNXJ4eVBMa1R6bzJ3bkxKUzF2Rk5abXlCZlZKbmpFS3duSXMrYmIrKzlTS3hNNFZIV0c1bDJSYnhUV1o2UTBoL3VhQ3NDUVNhMnZxQTR2VXA0aUhzRlFTYUd0aXhhU3FGUnQweDg4SFlRbXAyNnB1WEIzYVU0WnJDRXRMMTFhd1YxY1dZY21KMnZyL3MydmRIdEF0d2txQzg3YW0zRGU3Zk1uanJvNm1RRmdKY2R2V3JLWTNuUnhIaDdDUzQ2cXR5blZMZy9xRnpLZ0lLMUcyclh4ZXIxQlNWL1cvdFc4NEhTVkJXRWtyclYwNGQzZEw3TFptTmIzcWVwRUVZWGxRVkY0WnI2M3FsNWVIOElxaUtBakxqeGh0WmVwclp6enhvbktVUzRUbFRVNXRGZGRrYnQvMGpuNlVNNFRsVThTMkpsWk1tclAxN1dDL3ZSa1ZZWGtXcGEzcXh0VnB1YlM2aHJEOEc3dXR5blZMUS81T01CdkNDa0sydHNxWDNadUtwMVlqRVZZb1JyYVZxYStkL2ZvZXI2UGlJNnlBREcrcnBLNHFYYmVCTnlueVBTQ1NtcnhmMkZwUlVlRm9pNVp0NjB6enhwbU5XOUoxRzNpVGZ3ME1EUGplZ0FMRVJ5RWtDQXNTaEFVSndvSUVZVUdDc0NCQldKQWdMRWdRRmlRSUN4S0VCUW5DZ2dSaFFZS3dJRUZZa0NBc1NCQVdKQWdMRW9RRkNjS0NCR0ZCZ3JBZ1FWaVFJQ3hJRUJZa0NBc1NoQVVKd29JRVlVR0NzQ0JCV0pBZ0xFZ1FGaVFJQ3hLRUJRbkNnZ1JoUVlLd0lFRllrQ0FzU0JBV0pBZ0xFb1FGQ2NLQ0JHRkJnckFnUVZpUUlDeEkvQjBBQVAvL3VMSjl2RG42aW93QUFBQUFTVVZPUks1Q1lJST0iLCJtZWRpYXR5cGUiOiJpbWFnZS9wbmcifV0sImluc3RhbGwiOnsic3BlYyI6eyJjbHVzdGVyUGVybWlzc2lvbnMiOlt7InJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJjb25maWdtYXBzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiY29uZmlnbWFwcy9zdGF0dXMiXSwidmVyYnMiOlsiZGVsZXRlIiwiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJldmVudHMiXSwidmVyYnMiOlsiY3JlYXRlIiwicGF0Y2giXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZWNyZXRzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbInNlcnZpY2VhY2NvdW50cyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJnZXQiLCJsaXN0IiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZXJ2aWNlcyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJnZXQiLCJsaXN0IiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiYXBwcyJdLCJyZXNvdXJjZXMiOlsiZGVwbG95bWVudHMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiYXV0aGVudGljYXRpb24uazhzLmlvIl0sInJlc291cmNlcyI6WyJ0b2tlbnJldmlld3MiXSwidmVyYnMiOlsiY3JlYXRlIl19LHsiYXBpR3JvdXBzIjpbImF1dGhvcmluby5rdWFkcmFudC5pbyJdLCJyZXNvdXJjZXMiOlsiYXV0aGNvbmZpZ3MiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiYXV0aG9yaW5vLmt1YWRyYW50LmlvIl0sInJlc291cmNlcyI6WyJhdXRoY29uZmlncy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiYXV0aG9yaXphdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbInN1YmplY3RhY2Nlc3NyZXZpZXdzIl0sInZlcmJzIjpbImNyZWF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJjb29yZGluYXRpb24uazhzLmlvIl0sInJlc291cmNlcyI6WyJsZWFzZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZ2V0IiwibGlzdCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJvcGVyYXRvci5hdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhvcmlub3MiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsib3BlcmF0b3IuYXV0aG9yaW5vLmt1YWRyYW50LmlvIl0sInJlc291cmNlcyI6WyJhdXRob3Jpbm9zL2ZpbmFsaXplcnMiXSwidmVyYnMiOlsidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbIm9wZXJhdG9yLmF1dGhvcmluby5rdWFkcmFudC5pbyJdLCJyZXNvdXJjZXMiOlsiYXV0aG9yaW5vcy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsiY2x1c3RlcnJvbGViaW5kaW5ncyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJnZXQiLCJsaXN0IiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsiY2x1c3RlcnJvbGVzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCIsImxpc3QiLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIl0sInJlc291cmNlcyI6WyJyb2xlYmluZGluZ3MiXSwidmVyYnMiOlsiY3JlYXRlIiwiZ2V0IiwibGlzdCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbInJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbInJvbGVzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCIsImxpc3QiLCJ1cGRhdGUiLCJ3YXRjaCJdfV0sInNlcnZpY2VBY2NvdW50TmFtZSI6ImF1dGhvcmluby1vcGVyYXRvciJ9XSwiZGVwbG95bWVudHMiOlt7ImxhYmVsIjp7ImNvbnRyb2wtcGxhbmUiOiJhdXRob3Jpbm8tb3BlcmF0b3IifSwibmFtZSI6ImF1dGhvcmluby1vcGVyYXRvciIsInNwZWMiOnsicmVwbGljYXMiOjEsInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJhdXRob3Jpbm8tb3BlcmF0b3IifX0sInN0cmF0ZWd5Ijp7fSwidGVtcGxhdGUiOnsibWV0YWRhdGEiOnsibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJhdXRob3Jpbm8tb3BlcmF0b3IifX0sInNwZWMiOnsiY29udGFpbmVycyI6W3siYXJncyI6WyItLWxlYWRlci1lbGVjdCJdLCJjb21tYW5kIjpbIi9tYW5hZ2VyIl0sImVudiI6W3sibmFtZSI6IlJFTEFURURfSU1BR0VfQVVUSE9SSU5PIiwidmFsdWUiOiJyZWdpc3RyeS5yZWRoYXQuaW8vM3NjYWxlLXRlY2gtcHJldmlldy9hdXRob3Jpbm8tcmhlbDlAc2hhMjU2OjM2MTQwMzRjMTQ2MmM3NzZhZTQ5ZWY5MGI5MGY4ZjE1NjMxNTExYzUxNDI5NzMzODEwN2M2ZjU3MThmNTE5YWEifV0sImltYWdlIjoicmVnaXN0cnkucmVkaGF0LmlvLzNzY2FsZS10ZWNoLXByZXZpZXcvYXV0aG9yaW5vLXJoZWw5LW9wZXJhdG9yQHNoYTI1Njo5NGI1MTQ1NThiMDI4ZjMxNGM0MTdlZGU4YzIyZmIwZDc5Yzk4ZmI4ZDc3MjhmODNhNGMwOTQzMDliZWU4YThkIiwibGl2ZW5lc3NQcm9iZSI6eyJodHRwR2V0Ijp7InBhdGgiOiIvaGVhbHRoeiIsInBvcnQiOjgwODF9LCJpbml0aWFsRGVsYXlTZWNvbmRzIjoxNSwicGVyaW9kU2Vjb25kcyI6MjB9LCJuYW1lIjoibWFuYWdlciIsInBvcnRzIjpbeyJjb250YWluZXJQb3J0Ijo4MDgwLCJuYW1lIjoibWV0cmljcyJ9XSwicmVhZGluZXNzUHJvYmUiOnsiaHR0cEdldCI6eyJwYXRoIjoiL3JlYWR5eiIsInBvcnQiOjgwODF9LCJpbml0aWFsRGVsYXlTZWNvbmRzIjo1LCJwZXJpb2RTZWNvbmRzIjoxMH0sInJlc291cmNlcyI6eyJsaW1pdHMiOnsiY3B1IjoiMjAwbSIsIm1lbW9yeSI6IjMwME1pIn0sInJlcXVlc3RzIjp7ImNwdSI6IjIwMG0iLCJtZW1vcnkiOiIyMDBNaSJ9fSwic2VjdXJpdHlDb250ZXh0Ijp7ImFsbG93UHJpdmlsZWdlRXNjYWxhdGlvbiI6ZmFsc2UsImNhcGFiaWxpdGllcyI6eyJkcm9wIjpbIkFMTCJdfSwicmVhZE9ubHlSb290RmlsZXN5c3RlbSI6dHJ1ZSwic2VjY29tcFByb2ZpbGUiOnsidHlwZSI6IlJ1bnRpbWVEZWZhdWx0In19fV0sInNlY3VyaXR5Q29udGV4dCI6eyJydW5Bc05vblJvb3QiOnRydWV9LCJzZXJ2aWNlQWNjb3VudE5hbWUiOiJhdXRob3Jpbm8tb3BlcmF0b3IiLCJ0ZXJtaW5hdGlvbkdyYWNlUGVyaW9kU2Vjb25kcyI6MTB9fX19LHsibGFiZWwiOnsiYXBwIjoiYXV0aG9yaW5vIiwiYXV0aG9yaW5vLWNvbXBvbmVudCI6ImF1dGhvcmluby13ZWJob29rcyJ9LCJuYW1lIjoiYXV0aG9yaW5vLXdlYmhvb2tzIiwic3BlYyI6eyJzZWxlY3RvciI6eyJtYXRjaExhYmVscyI6eyJhcHAiOiJhdXRob3Jpbm8iLCJhdXRob3Jpbm8tY29tcG9uZW50IjoiYXV0aG9yaW5vLXdlYmhvb2tzIn19LCJzdHJhdGVneSI6e30sInRlbXBsYXRlIjp7Im1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAiOiJhdXRob3Jpbm8iLCJhdXRob3Jpbm8tY29tcG9uZW50IjoiYXV0aG9yaW5vLXdlYmhvb2tzIn19LCJzcGVjIjp7ImNvbnRhaW5lcnMiOlt7ImNvbW1hbmQiOlsiYXV0aG9yaW5vIiwid2ViaG9va3MiXSwiaW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vM3NjYWxlLXRlY2gtcHJldmlldy9hdXRob3Jpbm8tcmhlbDlAc2hhMjU2OjM2MTQwMzRjMTQ2MmM3NzZhZTQ5ZWY5MGI5MGY4ZjE1NjMxNTExYzUxNDI5NzMzODEwN2M2ZjU3MThmNTE5YWEiLCJuYW1lIjoid2ViaG9va3MiLCJwb3J0cyI6W3siY29udGFpbmVyUG9ydCI6OTQ0MywibmFtZSI6IndlYmhvb2tzIn0seyJjb250YWluZXJQb3J0Ijo4MDgwLCJuYW1lIjoibWV0cmljcyJ9LHsiY29udGFpbmVyUG9ydCI6ODA4MSwibmFtZSI6ImhlYWx0aHoifV0sInJlc291cmNlcyI6e30sInZvbHVtZU1vdW50cyI6W3sibW91bnRQYXRoIjoiL3RtcC9rOHMtd2ViaG9vay1zZXJ2ZXIvc2VydmluZy1jZXJ0cyIsIm5hbWUiOiJjZXJ0IiwicmVhZE9ubHkiOnRydWV9XX1dLCJ2b2x1bWVzIjpbeyJuYW1lIjoiY2VydCIsInNlY3JldCI6eyJkZWZhdWx0TW9kZSI6NDIwLCJzZWNyZXROYW1lIjoiYXV0aG9yaW5vLXdlYmhvb2stc2VydmVyLWNlcnQifX1dfX19fV0sInBlcm1pc3Npb25zIjpbeyJydWxlcyI6W3siYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiY29uZmlnbWFwcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giLCJjcmVhdGUiLCJ1cGRhdGUiLCJwYXRjaCIsImRlbGV0ZSJdfSx7ImFwaUdyb3VwcyI6WyJjb29yZGluYXRpb24uazhzLmlvIl0sInJlc291cmNlcyI6WyJsZWFzZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIiwiY3JlYXRlIiwidXBkYXRlIiwicGF0Y2giLCJkZWxldGUiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJldmVudHMiXSwidmVyYnMiOlsiY3JlYXRlIiwicGF0Y2giXX1dLCJzZXJ2aWNlQWNjb3VudE5hbWUiOiJhdXRob3Jpbm8tb3BlcmF0b3IifSx7InJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiYXV0aG9yaW5vLmt1YWRyYW50LmlvIl0sInJlc291cmNlcyI6WyJhdXRoY29uZmlncyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJjb29yZGluYXRpb24uazhzLmlvIl0sInJlc291cmNlcyI6WyJsZWFzZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZ2V0IiwibGlzdCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbImNvbmZpZ21hcHMiLCJldmVudHMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZ2V0IiwibGlzdCIsInVwZGF0ZSJdfV0sInNlcnZpY2VBY2NvdW50TmFtZSI6ImRlZmF1bHQifV19LCJzdHJhdGVneSI6ImRlcGxveW1lbnQifSwiaW5zdGFsbE1vZGVzIjpbeyJzdXBwb3J0ZWQiOmZhbHNlLCJ0eXBlIjoiT3duTmFtZXNwYWNlIn0seyJzdXBwb3J0ZWQiOmZhbHNlLCJ0eXBlIjoiU2luZ2xlTmFtZXNwYWNlIn0seyJzdXBwb3J0ZWQiOmZhbHNlLCJ0eXBlIjoiTXVsdGlOYW1lc3BhY2UifSx7InN1cHBvcnRlZCI6dHJ1ZSwidHlwZSI6IkFsbE5hbWVzcGFjZXMifV0sImtleXdvcmRzIjpbIkF1dGhvcmlubyIsIkF1dGhvcmlubyBPcGVyYXRvciIsIkt1YWRyYW50IiwiQXV0aG9yaXphdGlvbiIsIkF1dGhlbnRpY2F0aW9uIl0sImxpbmtzIjpbeyJuYW1lIjoiR2l0SHViIiwidXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL2t1YWRyYW50L2F1dGhvcmluby1vcGVyYXRvciJ9LHsibmFtZSI6IkRvY3VtZW50YXRpb24iLCJ1cmwiOiJodHRwczovL2RvY3Mua3VhZHJhbnQuaW8vYXV0aG9yaW5vIn1dLCJtYWludGFpbmVycyI6W3siZW1haWwiOiJkY2VzYXJlQHJlZGhhdC5jb20iLCJuYW1lIjoiRGlkaWVyIERpIENlc2FyZSJ9LHsiZW1haWwiOiJlYXN0aXpsZUByZWRoYXQuY29tIiwibmFtZSI6IkVndXpraSBBc3RpeiBMZXphdW4ifSx7ImVtYWlsIjoibWNhc3NvbGFAcmVkaGF0LmNvbSIsIm5hbWUiOiJHdWlsaGVybWUgQ2Fzc29sYXRvIn1dLCJtYXR1cml0eSI6ImFscGhhIiwibWluS3ViZVZlcnNpb24iOiIxLjI1LjAiLCJwcm92aWRlciI6eyJuYW1lIjoiUmVkIEhhdCJ9LCJyZWxhdGVkSW1hZ2VzIjpbeyJpbWFnZSI6InJlZ2lzdHJ5LnJlZGhhdC5pby8zc2NhbGUtdGVjaC1wcmV2aWV3L2F1dGhvcmluby1yaGVsOS1vcGVyYXRvckBzaGEyNTY6OTRiNTE0NTU4YjAyOGYzMTRjNDE3ZWRlOGMyMmZiMGQ3OWM5OGZiOGQ3NzI4ZjgzYTRjMDk0MzA5YmVlOGE4ZCIsIm5hbWUiOiJhdXRob3Jpbm8tcmhlbDktb3BlcmF0b3ItOTRiNTE0NTU4YjAyOGYzMTRjNDE3ZWRlOGMyMmZiMGQ3OWM5OGZiOGQ3NzI4ZjgzYTRjMDk0MzA5YmVlOGE4ZC1hbm5vdGF0aW9uIn0seyJpbWFnZSI6InJlZ2lzdHJ5LnJlZGhhdC5pby8zc2NhbGUtdGVjaC1wcmV2aWV3L2F1dGhvcmluby1yaGVsOS1vcGVyYXRvckBzaGEyNTY6OTRiNTE0NTU4YjAyOGYzMTRjNDE3ZWRlOGMyMmZiMGQ3OWM5OGZiOGQ3NzI4ZjgzYTRjMDk0MzA5YmVlOGE4ZCIsIm5hbWUiOiJtYW5hZ2VyIn0seyJpbWFnZSI6InJlZ2lzdHJ5LnJlZGhhdC5pby8zc2NhbGUtdGVjaC1wcmV2aWV3L2F1dGhvcmluby1yaGVsOUBzaGEyNTY6MzYxNDAzNGMxNDYyYzc3NmFlNDllZjkwYjkwZjhmMTU2MzE1MTFjNTE0Mjk3MzM4MTA3YzZmNTcxOGY1MTlhYSIsIm5hbWUiOiJ3ZWJob29rcyJ9LHsiaW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vM3NjYWxlLXRlY2gtcHJldmlldy9hdXRob3Jpbm8tcmhlbDlAc2hhMjU2OjM2MTQwMzRjMTQ2MmM3NzZhZTQ5ZWY5MGI5MGY4ZjE1NjMxNTExYzUxNDI5NzMzODEwN2M2ZjU3MThmNTE5YWEiLCJuYW1lIjoiYXV0aG9yaW5vIn1dLCJyZXBsYWNlcyI6ImF1dGhvcmluby1vcGVyYXRvci52MS4wLjIiLCJza2lwcyI6WyJhdXRob3Jpbm8tb3BlcmF0b3IudjEuMS4wIl0sInZlcnNpb24iOiIxLjEuMSIsIndlYmhvb2tkZWZpbml0aW9ucyI6W3siYWRtaXNzaW9uUmV2aWV3VmVyc2lvbnMiOlsidjFiZXRhMSIsInYxYmV0YTIiXSwiY29udGFpbmVyUG9ydCI6NDQzLCJjb252ZXJzaW9uQ1JEcyI6WyJhdXRoY29uZmlncy5hdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwiZGVwbG95bWVudE5hbWUiOiJhdXRob3Jpbm8td2ViaG9va3MiLCJnZW5lcmF0ZU5hbWUiOiJjYXV0aGNvbmZpZ3Mua2IuaW8iLCJzaWRlRWZmZWN0cyI6Ik5vbmUiLCJ0YXJnZXRQb3J0Ijo5NDQzLCJ0eXBlIjoiQ29udmVyc2lvbldlYmhvb2siLCJ3ZWJob29rUGF0aCI6Ii9jb252ZXJ0In1dfX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLW1hbmFnZXItazhzLWF1dGgtcm9sZSJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbImF1dGhlbnRpY2F0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsidG9rZW5yZXZpZXdzIl0sInZlcmJzIjpbImNyZWF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsic3ViamVjdGFjY2Vzc3Jldmlld3MiXSwidmVyYnMiOlsiY3JlYXRlIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLW1hbmFnZXItcm9sZSJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbImF1dGhvcmluby5rdWFkcmFudC5pbyJdLCJyZXNvdXJjZXMiOlsiYXV0aGNvbmZpZ3MiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiYXV0aG9yaW5vLmt1YWRyYW50LmlvIl0sInJlc291cmNlcyI6WyJhdXRoY29uZmlncy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCIsImxpc3QiLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZWNyZXRzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLWF1dGhjb25maWctZWRpdG9yLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLWF1dGhjb25maWctdmlld2VyLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogYWFjM2ExNWQuYXV0aG9yaW5vLmt1YWRyYW50LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJtYW5hZ2VyLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImF1dGhvcmluby1vcGVyYXRvciJ9LCJuYW1lIjoiYXV0aG9yaW5vLW9wZXJhdG9yLW1ldHJpY3MifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Im1ldHJpY3MiLCJwb3J0Ijo4MDgwLCJ0YXJnZXRQb3J0IjoibWV0cmljcyJ9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImF1dGhvcmluby1vcGVyYXRvciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoiYXV0aG9yaW5vIiwiYXV0aG9yaW5vLWNvbXBvbmVudCI6ImF1dGhvcmluby13ZWJob29rcyJ9LCJuYW1lIjoiYXV0aG9yaW5vLXdlYmhvb2tzIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImFwcCI6ImF1dGhvcmlubyIsImF1dGhvcmluby1jb21wb25lbnQiOiJhdXRob3Jpbm8td2ViaG9va3MifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
relatedImages:
  - image: registry.redhat.io/3scale-tech-preview/authorino-operator-bundle@sha256:75ef745eee540a43a00c49107c5cc9ed51c03ae1c5554de51ee798f1ac7d55f0
    name: ""
  - image: registry.redhat.io/3scale-tech-preview/authorino-rhel9-operator@sha256:94b514558b028f314c417ede8c22fb0d79c98fb8d7728f83a4c094309bee8a8d
    name: authorino-rhel9-operator-94b514558b028f314c417ede8c22fb0d79c98fb8d7728f83a4c094309bee8a8d-annotation
  - image: registry.redhat.io/3scale-tech-preview/authorino-rhel9-operator@sha256:94b514558b028f314c417ede8c22fb0d79c98fb8d7728f83a4c094309bee8a8d
    name: manager
  - image: registry.redhat.io/3scale-tech-preview/authorino-rhel9@sha256:3614034c1462c776ae49ef90b90f8f15631511c514297338107c6f5718f519aa
    name: webhooks
  - image: registry.redhat.io/3scale-tech-preview/authorino-rhel9@sha256:3614034c1462c776ae49ef90b90f8f15631511c514297338107c6f5718f519aa
    name: authorino
schema: olm.bundle
---
image: registry.redhat.io/3scale-tech-preview/authorino-operator-bundle@sha256:f1a2c63a9903c2dbf9b3bf1b3e200f85258d8d6f6518d9e48756126d8f37653c
name: authorino-operator.v1.1.2
package: authorino-operator
properties:
  - type: olm.gvk
    value:
      group: authorino.kuadrant.io
      kind: AuthConfig
      version: v1beta1
  - type: olm.gvk
    value:
      group: authorino.kuadrant.io
      kind: AuthConfig
      version: v1beta2
  - type: olm.gvk
    value:
      group: operator.authorino.kuadrant.io
      kind: Authorino
      version: v1beta1
  - type: olm.package
    value:
      packageName: authorino-operator
      version: 1.1.2
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLW1hbmFnZXItazhzLWF1dGgtcm9sZSJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbImF1dGhlbnRpY2F0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsidG9rZW5yZXZpZXdzIl0sInZlcmJzIjpbImNyZWF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsic3ViamVjdGFjY2Vzc3Jldmlld3MiXSwidmVyYnMiOlsiY3JlYXRlIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLW1hbmFnZXItcm9sZSJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbImF1dGhvcmluby5rdWFkcmFudC5pbyJdLCJyZXNvdXJjZXMiOlsiYXV0aGNvbmZpZ3MiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiYXV0aG9yaW5vLmt1YWRyYW50LmlvIl0sInJlc291cmNlcyI6WyJhdXRoY29uZmlncy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCIsImxpc3QiLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZWNyZXRzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLWF1dGhjb25maWctZWRpdG9yLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLWF1dGhjb25maWctdmlld2VyLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogYWFjM2ExNWQuYXV0aG9yaW5vLmt1YWRyYW50LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJtYW5hZ2VyLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImF1dGhvcmluby1vcGVyYXRvciJ9LCJuYW1lIjoiYXV0aG9yaW5vLW9wZXJhdG9yLW1ldHJpY3MifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Im1ldHJpY3MiLCJwb3J0Ijo4MDgwLCJ0YXJnZXRQb3J0IjoibWV0cmljcyJ9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImF1dGhvcmluby1vcGVyYXRvciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoiYXV0aG9yaW5vIiwiYXV0aG9yaW5vLWNvbXBvbmVudCI6ImF1dGhvcmluby13ZWJob29rcyJ9LCJuYW1lIjoiYXV0aG9yaW5vLXdlYmhvb2tzIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImFwcCI6ImF1dGhvcmlubyIsImF1dGhvcmluby1jb21wb25lbnQiOiJhdXRob3Jpbm8td2ViaG9va3MifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
relatedImages:
  - image: registry.redhat.io/3scale-tech-preview/authorino-operator-bundle@sha256:f1a2c63a9903c2dbf9b3bf1b3e200f85258d8d6f6518d9e48756126d8f37653c
    name: ""
  - image: registry.redhat.io/3scale-tech-preview/authorino-rhel9-operator@sha256:54f49eb217d888ac48882e3b333aeafa463f3cc9832050e29e17ec2116599690
    name: authorino-rhel9-operator-54f49eb217d888ac48882e3b333aeafa463f3cc9832050e29e17ec2116599690-annotation
  - image: registry.redhat.io/3scale-tech-preview/authorino-rhel9-operator@sha256:54f49eb217d888ac48882e3b333aeafa463f3cc9832050e29e17ec2116599690
    name: manager
  - image: registry.redhat.io/3scale-tech-preview/authorino-rhel9@sha256:da01e89508304fc08f4b189e700ab72a4c3d51c277928123eb19905e41282f9d
    name: webhooks
  - image: registry.redhat.io/3scale-tech-preview/authorino-rhel9@sha256:da01e89508304fc08f4b189e700ab72a4c3d51c277928123eb19905e41282f9d
    name: authorino
  - image: registry.redhat.io/openshift4/ose-cli-rhel9@sha256:585079437308204fb50649283b4b750026f723c90b8da883860d3076c2df6a8c
    name: migrator
schema: olm.bundle
---
image: registry.redhat.io/3scale-tech-preview/authorino-operator-bundle@sha256:75cb78f7a40d3daedbc11cbbb5505e029328b4120f0de11d4f6423de943e92d8
name: authorino-operator.v1.1.3
package: authorino-operator
properties:
  - type: olm.gvk
    value:
      group: authorino.kuadrant.io
      kind: AuthConfig
      version: v1beta1
  - type: olm.gvk
    value:
      group: authorino.kuadrant.io
      kind: AuthConfig
      version: v1beta2
  - type: olm.gvk
    value:
      group: operator.authorino.kuadrant.io
      kind: Authorino
      version: v1beta1
  - type: olm.package
    value:
      packageName: authorino-operator
      version: 1.1.3
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLW1hbmFnZXItazhzLWF1dGgtcm9sZSJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbImF1dGhlbnRpY2F0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsidG9rZW5yZXZpZXdzIl0sInZlcmJzIjpbImNyZWF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsic3ViamVjdGFjY2Vzc3Jldmlld3MiXSwidmVyYnMiOlsiY3JlYXRlIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLW1hbmFnZXItcm9sZSJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbImF1dGhvcmluby5rdWFkcmFudC5pbyJdLCJyZXNvdXJjZXMiOlsiYXV0aGNvbmZpZ3MiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiYXV0aG9yaW5vLmt1YWRyYW50LmlvIl0sInJlc291cmNlcyI6WyJhdXRoY29uZmlncy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCIsImxpc3QiLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZWNyZXRzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLWF1dGhjb25maWctZWRpdG9yLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLWF1dGhjb25maWctdmlld2VyLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogYWFjM2ExNWQuYXV0aG9yaW5vLmt1YWRyYW50LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJtYW5hZ2VyLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImF1dGhvcmluby1vcGVyYXRvciJ9LCJuYW1lIjoiYXV0aG9yaW5vLW9wZXJhdG9yLW1ldHJpY3MifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Im1ldHJpY3MiLCJwb3J0Ijo4MDgwLCJ0YXJnZXRQb3J0IjoibWV0cmljcyJ9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImF1dGhvcmluby1vcGVyYXRvciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoiYXV0aG9yaW5vIiwiYXV0aG9yaW5vLWNvbXBvbmVudCI6ImF1dGhvcmluby13ZWJob29rcyJ9LCJuYW1lIjoiYXV0aG9yaW5vLXdlYmhvb2tzIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImFwcCI6ImF1dGhvcmlubyIsImF1dGhvcmluby1jb21wb25lbnQiOiJhdXRob3Jpbm8td2ViaG9va3MifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
relatedImages:
  - image: registry.redhat.io/3scale-tech-preview/authorino-operator-bundle@sha256:75cb78f7a40d3daedbc11cbbb5505e029328b4120f0de11d4f6423de943e92d8
    name: ""
  - image: registry.redhat.io/3scale-tech-preview/authorino-rhel9-operator@sha256:eb574781cf39917f8f5d9e5c806f520534601f819ee1ebcbb751832da8938008
    name: authorino-rhel9-operator-eb574781cf39917f8f5d9e5c806f520534601f819ee1ebcbb751832da8938008-annotation
  - image: registry.redhat.io/3scale-tech-preview/authorino-rhel9-operator@sha256:eb574781cf39917f8f5d9e5c806f520534601f819ee1ebcbb751832da8938008
    name: manager
  - image: registry.redhat.io/3scale-tech-preview/authorino-rhel9@sha256:a473dae20e71e3e813ac30ba978f2ab3c5e19d7d39b501ae9103dca892107c87
    name: webhooks
  - image: registry.redhat.io/3scale-tech-preview/authorino-rhel9@sha256:a473dae20e71e3e813ac30ba978f2ab3c5e19d7d39b501ae9103dca892107c87
    name: authorino
  - image: registry.redhat.io/openshift4/ose-cli-rhel9@sha256:3a398158d10018bfac5df291d6998b513cf9a30e5477bcaefddcf66d229627c7
    name: migrator
schema: olm.bundle
---
image: registry.redhat.io/rhcl-1/authorino-operator-bundle@sha256:ca00981e52dbee8ce0551e4a4f6dec8275887b0c43eff4691662063630df6348
name: authorino-operator.v1.2.0
package: authorino-operator
properties:
  - type: olm.gvk
    value:
      group: authorino.kuadrant.io
      kind: AuthConfig
      version: v1beta2
  - type: olm.gvk
    value:
      group: authorino.kuadrant.io
      kind: AuthConfig
      version: v1beta3
  - type: olm.gvk
    value:
      group: operator.authorino.kuadrant.io
      kind: Authorino
      version: v1beta1
  - type: olm.package
    value:
      packageName: authorino-operator
      version: 1.2.0
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE1LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJhdXRoY29uZmlncy5hdXRob3Jpbm8ua3VhZHJhbnQuaW8ifSwic3BlYyI6eyJncm91cCI6ImF1dGhvcmluby5rdWFkcmFudC5pbyIsIm5hbWVzIjp7ImtpbmQiOiJBdXRoQ29uZmlnIiwibGlzdEtpbmQiOiJBdXRoQ29uZmlnTGlzdCIsInBsdXJhbCI6ImF1dGhjb25maWdzIiwic2luZ3VsYXIiOiJhdXRoY29uZmlnIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiUmVhZHkgZm9yIGFsbCBob3N0cyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdW1tYXJ5LnJlYWR5IiwibmFtZSI6IlJlYWR5IiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2YgaG9zdHMgcmVhZHkiLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3VtbWFyeS5udW1Ib3N0c1JlYWR5IiwibmFtZSI6Ikhvc3RzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2YgdHJ1c3RlZCBpZGVudGl0eSBzb3VyY2VzIiwianNvblBhdGgiOiIuc3RhdHVzLnN1bW1hcnkubnVtSWRlbnRpdHlTb3VyY2VzIiwibmFtZSI6IkF1dGhlbnRpY2F0aW9uIiwicHJpb3JpdHkiOjIsInR5cGUiOiJpbnRlZ2VyIn0seyJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiBleHRlcm5hbCBtZXRhZGF0YSBzb3VyY2VzIiwianNvblBhdGgiOiIuc3RhdHVzLnN1bW1hcnkubnVtTWV0YWRhdGFTb3VyY2VzIiwibmFtZSI6Ik1ldGFkYXRhIiwicHJpb3JpdHkiOjIsInR5cGUiOiJpbnRlZ2VyIn0seyJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiBhdXRob3JpemF0aW9uIHBvbGljaWVzIiwianNvblBhdGgiOiIuc3RhdHVzLnN1bW1hcnkubnVtQXV0aG9yaXphdGlvblBvbGljaWVzIiwibmFtZSI6IkF1dGhvcml6YXRpb24iLCJwcmlvcml0eSI6MiwidHlwZSI6ImludGVnZXIifSx7ImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIGl0ZW1zIGFkZGVkIHRvIHRoZSBhdXRob3JpemF0aW9uIHJlc3BvbnNlIiwianNvblBhdGgiOiIuc3RhdHVzLnN1bW1hcnkubnVtUmVzcG9uc2VJdGVtcyIsIm5hbWUiOiJSZXNwb25zZSIsInByaW9yaXR5IjoyLCJ0eXBlIjoiaW50ZWdlciJ9LHsiZGVzY3JpcHRpb24iOiJXaGV0aGVyIGlzc3VpbmcgRmVzdGl2YWwgV3Jpc3RiYW5kcyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdW1tYXJ5LmZlc3RpdmFsV3Jpc3RiYW5kRW5hYmxlZCIsIm5hbWUiOiJXcmlzdGJhbmQiLCJwcmlvcml0eSI6MiwidHlwZSI6ImJvb2xlYW4ifV0sIm5hbWUiOiJ2MWJldGEyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkF1dGhDb25maWcgaXMgdGhlIHNjaGVtYSBmb3IgQXV0aG9yaW5vJ3MgQXV0aENvbmZpZyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJTcGVjaWZpZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgdGhlIEF1dGhDb25maWcgcmVzb3VyY2UsIGkuZS4gdGhlIGF1dGhlbmNhdGlvbi9hdXRob3JpemF0aW9uIHNjaGVtZSB0byBiZSBhcHBsaWVkIHRvIHByb3RlY3QgdGhlIG1hdGNoaW5nIHNlcnZpY2UgaG9zdHMuIiwicHJvcGVydGllcyI6eyJhdXRoZW50aWNhdGlvbiI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJvbmVPZiI6W3sicHJvcGVydGllcyI6eyJjcmVkZW50aWFscyI6e30sIm9hdXRoMkludHJvc3BlY3Rpb24iOnt9fSwicmVxdWlyZWQiOlsib2F1dGgySW50cm9zcGVjdGlvbiJdfSx7InByb3BlcnRpZXMiOnsiY3JlZGVudGlhbHMiOnt9LCJqd3QiOnt9fSwicmVxdWlyZWQiOlsiand0Il19LHsicHJvcGVydGllcyI6eyJhcGlLZXkiOnt9LCJjcmVkZW50aWFscyI6e319LCJyZXF1aXJlZCI6WyJhcGlLZXkiXX0seyJwcm9wZXJ0aWVzIjp7ImNyZWRlbnRpYWxzIjp7fSwieDUwOSI6e319LCJyZXF1aXJlZCI6WyJ4NTA5Il19LHsicHJvcGVydGllcyI6eyJjcmVkZW50aWFscyI6e30sImt1YmVybmV0ZXNUb2tlblJldmlldyI6e319LCJyZXF1aXJlZCI6WyJrdWJlcm5ldGVzVG9rZW5SZXZpZXciXX0seyJwcm9wZXJ0aWVzIjp7ImFub255bW91cyI6e30sImNyZWRlbnRpYWxzIjp7fX0sInJlcXVpcmVkIjpbImFub255bW91cyJdfSx7InByb3BlcnRpZXMiOnsiY3JlZGVudGlhbHMiOnt9LCJwbGFpbiI6e319LCJyZXF1aXJlZCI6WyJwbGFpbiJdfV0sInByb3BlcnRpZXMiOnsiYW5vbnltb3VzIjp7ImRlc2NyaXB0aW9uIjoiQW5vbnltb3VzIGFjY2Vzcy4iLCJ0eXBlIjoib2JqZWN0In0sImFwaUtleSI6eyJkZXNjcmlwdGlvbiI6IkF1dGhlbnRpY2F0aW9uIGJhc2VkIG9uIEFQSSBrZXlzIHN0b3JlZCBpbiBLdWJlcm5ldGVzIHNlY3JldHMuIiwicHJvcGVydGllcyI6eyJhbGxOYW1lc3BhY2VzIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IldoZXRoZXIgQXV0aG9yaW5vIHNob3VsZCBsb29rIGZvciBBUEkga2V5IHNlY3JldHMgaW4gYWxsIG5hbWVzcGFjZXMgb3Igb25seSBpbiB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgdGhlIEF1dGhDb25maWcuXG5FbmFibGluZyB0aGlzIG9wdGlvbiBpbiBuYW1lc3BhY2VkIEF1dGhvcmlubyBpbnN0YW5jZXMgaGFzIG5vIGVmZmVjdC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkxhYmVsIHNlbGVjdG9yIHVzZWQgYnkgQXV0aG9yaW5vIHRvIG1hdGNoIHNlY3JldHMgZnJvbSB0aGUgY2x1c3RlciBzdG9yaW5nIHZhbGlkIGNyZWRlbnRpYWxzIHRvIGF1dGhlbnRpY2F0ZSB0byB0aGlzIHNlcnZpY2UiLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsic2VsZWN0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJjYWNoZSI6eyJkZXNjcmlwdGlvbiI6IkNhY2hpbmcgb3B0aW9ucyBmb3IgdGhlIHJlc29sdmVkIG9iamVjdCByZXR1cm5lZCB3aGVuIGFwcGx5aW5nIHRoaXMgY29uZmlnLlxuT21pdCBpdCB0byBhdm9pZCBjYWNoaW5nIG9iamVjdHMgZm9yIHRoaXMgY29uZmlnLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiS2V5IHVzZWQgdG8gc3RvcmUgdGhlIGVudHJ5IGluIHRoZSBjYWNoZS5cblRoZSByZXNvbHZlZCBrZXkgbXVzdCBiZSB1bmlxdWUgd2l0aGluIHRoZSBzY29wZSBvZiB0aGlzIHBhcnRpY3VsYXIgY29uZmlnLiIsInByb3BlcnRpZXMiOnsic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifSwidHRsIjp7ImRlZmF1bHQiOjYwLCJkZXNjcmlwdGlvbiI6IkR1cmF0aW9uIChpbiBzZWNvbmRzKSBvZiB0aGUgZXh0ZXJuYWwgZGF0YSBpbiB0aGUgY2FjaGUgYmVmb3JlIHB1bGxlZCBhZ2FpbiBmcm9tIHRoZSBzb3VyY2UuIiwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbImtleSJdLCJ0eXBlIjoib2JqZWN0In0sImNyZWRlbnRpYWxzIjp7ImRlc2NyaXB0aW9uIjoiRGVmaW5lcyB3aGVyZSBjcmVkZW50aWFscyBhcmUgcmVxdWlyZWQgdG8gYmUgcGFzc2VkIGluIHRoZSByZXF1ZXN0IGZvciBhdXRoZW50aWNhdGlvbiBiYXNlZCBvbiB0aGlzIGNvbmZpZy5cbklmIG9taXR0ZWQsIGl0IGRlZmF1bHRzIHRvIGNyZWRlbnRpYWxzIHBhc3NlZCBpbiB0aGUgSFRUUCBBdXRob3JpemF0aW9uIGhlYWRlciBhbmQgdGhlIFwiQmVhcmVyXCIgcHJlZml4IHByZXBlbmRlZCB0byB0aGUgc2VjcmV0IGNyZWRlbnRpYWwgdmFsdWUuIiwicHJvcGVydGllcyI6eyJhdXRob3JpemF0aW9uSGVhZGVyIjp7InByb3BlcnRpZXMiOnsicHJlZml4Ijp7InR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiY29va2llIjp7InByb3BlcnRpZXMiOnsibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwiY3VzdG9tSGVhZGVyIjp7InByb3BlcnRpZXMiOnsibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwicXVlcnlTdHJpbmciOnsicHJvcGVydGllcyI6eyJuYW1lIjp7InR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJkZWZhdWx0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJwcm9wZXJ0aWVzIjp7InNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiU2V0IGRlZmF1bHQgcHJvcGVydHkgdmFsdWVzIChjbGFpbXMpIGZvciB0aGUgcmVzb2x2ZWQgaWRlbnRpdHkgb2JqZWN0LCB0aGF0IGFyZSBzZXQgYmVmb3JlIGFwcGVuZGluZyB0aGUgb2JqZWN0IHRvXG50aGUgYXV0aG9yaXphdGlvbiBKU09OLiBJZiB0aGUgcHJvcGVydHkgaXMgYWxyZWFkeSBwcmVzZW50IGluIHRoZSByZXNvbHZlZCBpZGVudGl0eSBvYmplY3QsIHRoZSBkZWZhdWx0IHZhbHVlIGlzIGlnbm9yZWQuXG5JdCByZXF1aXJlcyB0aGUgcmVzb2x2ZWQgaWRlbnRpdHkgb2JqZWN0IHRvIGFsd2F5cyBiZSBhIEpTT04gb2JqZWN0LlxuRG8gbm90IHVzZSB0aGlzIG9wdGlvbiB3aXRoIGlkZW50aXR5IG9iamVjdHMgb2Ygb3RoZXIgSlNPTiB0eXBlcyAoYXJyYXksIHN0cmluZywgZXRjKS4iLCJ0eXBlIjoib2JqZWN0In0sImp3dCI6eyJkZXNjcmlwdGlvbiI6IkF1dGhlbnRpY2F0aW9uIGJhc2VkIG9uIEpXVCB0b2tlbnMuIiwicHJvcGVydGllcyI6eyJpc3N1ZXJVcmwiOnsiZGVzY3JpcHRpb24iOiJVUkwgb2YgdGhlIGlzc3VlciBvZiB0aGUgSldULlxuSWYgYGp3a3NVcmxgIGlzIG9taXR0ZWQsIEF1dGhvcmlubyB3aWxsIGFwcGVuZCB0aGUgcGF0aCB0byB0aGUgT3BlbklEIENvbm5lY3QgV2VsbC1Lbm93biBEaXNjb3ZlcnkgZW5kcG9pbnRcbihpLmUuIFwiLy53ZWxsLWtub3duL29wZW5pZC1jb25maWd1cmF0aW9uXCIpIHRvIHRoaXMgVVJMLCB0byBkaXNjb3ZlciB0aGUgT0lEQyBjb25maWd1cmF0aW9uIHdoZXJlIHRvIG9idGFpblxudGhlIFwiamt3c191cmlcIiBjbGFpbSBmcm9tLlxuVGhlIHZhbHVlIG11c3QgY29pbmNpZGUgd2l0aCB0aGUgdmFsdWUgb2YgIHRoZSBcImlzc1wiIChpc3N1ZXIpIGNsYWltIG9mIHRoZSBkaXNjb3ZlcmVkIE9wZW5JRCBDb25uZWN0IGNvbmZpZ3VyYXRpb24uIiwidHlwZSI6InN0cmluZyJ9LCJ0dGwiOnsiZGVzY3JpcHRpb24iOiJEZWNpZGVzIGhvdyBsb25nIHRvIHdhaXQgYmVmb3JlIHJlZnJlc2hpbmcgdGhlIEpXS1MgKGluIHNlY29uZHMpLlxuSWYgb21pdHRlZCwgQXV0aG9yaW5vIHdpbGwgbmV2ZXIgcmVmcmVzaCB0aGUgSldLUy4iLCJ0eXBlIjoiaW50ZWdlciJ9fSwidHlwZSI6Im9iamVjdCJ9LCJrdWJlcm5ldGVzVG9rZW5SZXZpZXciOnsiZGVzY3JpcHRpb24iOiJBdXRoZW50aWNhdGlvbiBieSBLdWJlcm5ldGVzIHRva2VuIHJldmlldy4iLCJwcm9wZXJ0aWVzIjp7ImF1ZGllbmNlcyI6eyJkZXNjcmlwdGlvbiI6IlRoZSBsaXN0IG9mIGF1ZGllbmNlcyAoc2NvcGVzKSB0aGF0IG11c3QgYmUgY2xhaW1lZCBpbiBhIEt1YmVybmV0ZXMgYXV0aGVudGljYXRpb24gdG9rZW4gc3VwcGxpZWQgaW4gdGhlIHJlcXVlc3QsIGFuZCByZXZpZXdlZCBieSBBdXRob3Jpbm8uXG5JZiBvbWl0dGVkLCBBdXRob3Jpbm8gd2lsbCByZXZpZXcgdG9rZW5zIGV4cGVjdGluZyB0aGUgaG9zdCBuYW1lIG9mIHRoZSByZXF1ZXN0ZWQgcHJvdGVjdGVkIHNlcnZpY2UgYW1vbmdzdCB0aGUgYXVkaWVuY2VzLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In0sIm1ldHJpY3MiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiV2hldGhlciB0aGlzIGNvbmZpZyBzaG91bGQgZ2VuZXJhdGUgaW5kaXZpZHVhbCBvYnNlcnZhYmlsaXR5IG1ldHJpY3MiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJvYXV0aDJJbnRyb3NwZWN0aW9uIjp7ImRlc2NyaXB0aW9uIjoiQXV0aGVudGljYXRpb24gYnkgT0F1dGgyIHRva2VuIGludHJvc3BlY3Rpb24uIiwicHJvcGVydGllcyI6eyJjcmVkZW50aWFsc1JlZiI6eyJkZXNjcmlwdGlvbiI6IlJlZmVyZW5jZSB0byBhIEt1YmVybmV0ZXMgc2VjcmV0IGluIHRoZSBzYW1lIG5hbWVzcGFjZSwgdGhhdCBzdG9yZXMgY2xpZW50IGNyZWRlbnRpYWxzIHRvIHRoZSBPQXV0aDIgc2VydmVyLiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHJlZmVyZW50LlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXNcblRPRE86IEFkZCBvdGhlciB1c2VmdWwgZmllbGRzLiBhcGlWZXJzaW9uLCBraW5kLCB1aWQ/IiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJlbmRwb2ludCI6eyJkZXNjcmlwdGlvbiI6IlRoZSBmdWxsIFVSTCBvZiB0aGUgdG9rZW4gaW50cm9zcGVjdGlvbiBlbmRwb2ludC4iLCJ0eXBlIjoic3RyaW5nIn0sInRva2VuVHlwZUhpbnQiOnsiZGVzY3JpcHRpb24iOiJUaGUgdG9rZW4gdHlwZSBoaW50IGZvciB0aGUgdG9rZW4gaW50cm9zcGVjdGlvbi5cbklmIG9taXR0ZWQsIGl0IGRlZmF1bHRzIHRvIFwiYWNjZXNzX3Rva2VuXCIuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiY3JlZGVudGlhbHNSZWYiLCJlbmRwb2ludCJdLCJ0eXBlIjoib2JqZWN0In0sIm92ZXJyaWRlcyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJwcm9wZXJ0aWVzIjp7InNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiT3ZlcnJpZGVzIHRoZSByZXNvbHZlZCBpZGVudGl0eSBvYmplY3QgYnkgc2V0dGluZyB0aGUgYWRkaXRpb25hbCBwcm9wZXJ0aWVzIChjbGFpbXMpIHNwZWNpZmllZCBpbiB0aGlzIGNvbmZpZyxcbmJlZm9yZSBhcHBlbmRpbmcgdGhlIG9iamVjdCB0byB0aGUgYXV0aG9yaXphdGlvbiBKU09OLlxuSXQgcmVxdWlyZXMgdGhlIHJlc29sdmVkIGlkZW50aXR5IG9iamVjdCB0byBhbHdheXMgYmUgYSBKU09OIG9iamVjdC5cbkRvIG5vdCB1c2UgdGhpcyBvcHRpb24gd2l0aCBpZGVudGl0eSBvYmplY3RzIG9mIG90aGVyIEpTT04gdHlwZXMgKGFycmF5LCBzdHJpbmcsIGV0YykuIiwidHlwZSI6Im9iamVjdCJ9LCJwbGFpbiI6eyJkZXNjcmlwdGlvbiI6IklkZW50aXR5IG9iamVjdCBleHRyYWN0ZWQgZnJvbSB0aGUgY29udGV4dC5cblVzZSB0aGlzIG1ldGhvZCB3aGVuIGF1dGhlbnRpY2F0aW9uIGlzIHBlcmZvcm1lZCBiZWZvcmVoYW5kIGJ5IGEgcHJveHkgYW5kIHRoZSByZXN1bHRpbmcgb2JqZWN0IHBhc3NlZCB0byBBdXRob3Jpbm8gYXMgSlNPTiBpbiB0aGUgYXV0aCByZXF1ZXN0LiIsInByb3BlcnRpZXMiOnsic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJzZWxlY3RvciJdLCJ0eXBlIjoib2JqZWN0In0sInByaW9yaXR5Ijp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiUHJpb3JpdHkgZ3JvdXAgb2YgdGhlIGNvbmZpZy5cbkFsbCBjb25maWdzIGluIHRoZSBzYW1lIHByaW9yaXR5IGdyb3VwIGFyZSBldmFsdWF0ZWQgY29uY3VycmVudGx5OyBjb25zZWN1dGl2ZSBwcmlvcml0eSBncm91cHMgYXJlIGV2YWx1YXRlZCBzZXF1ZW50aWFsbHkuIiwidHlwZSI6ImludGVnZXIifSwid2hlbiI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbnMgZm9yIEF1dGhvcmlubyB0byBlbmZvcmNlIHRoaXMgY29uZmlnLlxuSWYgb21pdHRlZCwgdGhlIGNvbmZpZyB3aWxsIGJlIGVuZm9yY2VkIGZvciBhbGwgcmVxdWVzdHMuXG5JZiBwcmVzZW50LCBhbGwgY29uZGl0aW9ucyBtdXN0IG1hdGNoIGZvciB0aGUgY29uZmlnIHRvIGJlIGVuZm9yY2VkOyBvdGhlcndpc2UsIHRoZSBjb25maWcgd2lsbCBiZSBza2lwcGVkLiIsIml0ZW1zIjp7Im9uZU9mIjpbeyJwcm9wZXJ0aWVzIjp7InBhdHRlcm5SZWYiOnt9fSwicmVxdWlyZWQiOlsicGF0dGVyblJlZiJdfSx7InByb3BlcnRpZXMiOnsib3BlcmF0b3IiOnt9LCJzZWxlY3RvciI6e30sInZhbHVlIjp7fX0sInJlcXVpcmVkIjpbIm9wZXJhdG9yIiwic2VsZWN0b3IiXX0seyJwcm9wZXJ0aWVzIjp7ImFsbCI6e319LCJyZXF1aXJlZCI6WyJhbGwiXX0seyJwcm9wZXJ0aWVzIjp7ImFueSI6e319LCJyZXF1aXJlZCI6WyJhbnkiXX1dLCJwcm9wZXJ0aWVzIjp7ImFsbCI6eyJkZXNjcmlwdGlvbiI6IkEgbGlzdCBvZiBwYXR0ZXJuIGV4cHJlc3Npb25zIHRvIGJlIGV2YWx1YXRlZCBhcyBhIGxvZ2ljYWwgQU5ELiIsIml0ZW1zIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJ0eXBlIjoiYXJyYXkifSwiYW55Ijp7ImRlc2NyaXB0aW9uIjoiQSBsaXN0IG9mIHBhdHRlcm4gZXhwcmVzc2lvbnMgdG8gYmUgZXZhbHVhdGVkIGFzIGEgbG9naWNhbCBPUi4iLCJpdGVtcyI6eyJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfSwidHlwZSI6ImFycmF5In0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGJpbmFyeSBvcGVyYXRvciB0byBiZSBhcHBsaWVkIHRvIHRoZSBjb250ZW50IGZldGNoZWQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OLCBmb3IgY29tcGFyaXNvbiB3aXRoIFwidmFsdWVcIi5cblBvc3NpYmxlIHZhbHVlcyBhcmU6IFwiZXFcIiAoZXF1YWwgdG8pLCBcIm5lcVwiIChub3QgZXF1YWwgdG8pLCBcImluY2xcIiAoaW5jbHVkZXM7IGZvciBhcnJheXMpLCBcImV4Y2xcIiAoZXhjbHVkZXM7IGZvciBhcnJheXMpLCBcIm1hdGNoZXNcIiAocmVnZXgpIiwiZW51bSI6WyJlcSIsIm5lcSIsImluY2wiLCJleGNsIiwibWF0Y2hlcyJdLCJ0eXBlIjoic3RyaW5nIn0sInBhdHRlcm5SZWYiOnsiZGVzY3JpcHRpb24iOiJSZWZlcmVuY2UgdG8gYSBuYW1lZCBzZXQgb2YgcGF0dGVybiBleHByZXNzaW9ucyIsInR5cGUiOiJzdHJpbmcifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJQYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5BdXRob3Jpbm8gY3VzdG9tIEpTT04gcGF0aCBtb2RpZmllcnMgYXJlIGFsc28gc3VwcG9ydGVkLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJUaGUgdmFsdWUgb2YgcmVmZXJlbmNlIGZvciB0aGUgY29tcGFyaXNvbiB3aXRoIHRoZSBjb250ZW50IGZldGNoZWQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OLlxuSWYgdXNlZCB3aXRoIHRoZSBcIm1hdGNoZXNcIiBvcGVyYXRvciwgdGhlIHZhbHVlIG11c3QgY29tcGlsZSB0byBhIHZhbGlkIEdvbGFuZyByZWdleC4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJ4NTA5Ijp7ImRlc2NyaXB0aW9uIjoiQXV0aGVudGljYXRpb24gYmFzZWQgb24gY2xpZW50IFguNTA5IGNlcnRpZmljYXRlcy5cblRoZSBjZXJ0aWZpY2F0ZXMgcHJlc2VudGVkIGJ5IHRoZSBjbGllbnRzIG11c3QgYmUgc2lnbmVkIGJ5IGEgdHJ1c3RlZCBDQSB3aG9zZSBjZXJ0aWZpY2F0ZXMgYXJlIHN0b3JlZCBpbiBLdWJlcm5ldGVzIHNlY3JldHMuIiwicHJvcGVydGllcyI6eyJhbGxOYW1lc3BhY2VzIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IldoZXRoZXIgQXV0aG9yaW5vIHNob3VsZCBsb29rIGZvciBUTFMgc2VjcmV0cyBpbiBhbGwgbmFtZXNwYWNlcyBvciBvbmx5IGluIHRoZSBzYW1lIG5hbWVzcGFjZSBhcyB0aGUgQXV0aENvbmZpZy5cbkVuYWJsaW5nIHRoaXMgb3B0aW9uIGluIG5hbWVzcGFjZWQgQXV0aG9yaW5vIGluc3RhbmNlcyBoYXMgbm8gZWZmZWN0LiIsInR5cGUiOiJib29sZWFuIn0sInNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiTGFiZWwgc2VsZWN0b3IgdXNlZCBieSBBdXRob3Jpbm8gdG8gbWF0Y2ggc2VjcmV0cyBmcm9tIHRoZSBjbHVzdGVyIHN0b3JpbmcgdHJ1c3RlZCBDQSBjZXJ0aWZpY2F0ZXMgdG8gdmFsaWRhdGVcbmNsaWVudHMgdHJ5aW5nIHRvIGF1dGhlbnRpY2F0ZSB0byB0aGlzIHNlcnZpY2UiLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsic2VsZWN0b3IiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJkZXNjcmlwdGlvbiI6IkF1dGhlbnRpY2F0aW9uIGNvbmZpZ3MuXG5BdCBsZWFzdCBvbmUgY29uZmlnIE1VU1QgZXZhbHVhdGUgdG8gYSB2YWxpZCBpZGVudGl0eSBvYmplY3QgZm9yIHRoZSBhdXRoIHJlcXVlc3QgdG8gYmUgc3VjY2Vzc2Z1bC4iLCJ0eXBlIjoib2JqZWN0In0sImF1dGhvcml6YXRpb24iOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsib25lT2YiOlt7InByb3BlcnRpZXMiOnsib3BhIjp7fX0sInJlcXVpcmVkIjpbIm9wYSJdfSx7InByb3BlcnRpZXMiOnsicGF0dGVybk1hdGNoaW5nIjp7fX0sInJlcXVpcmVkIjpbInBhdHRlcm5NYXRjaGluZyJdfSx7InByb3BlcnRpZXMiOnsia3ViZXJuZXRlc1N1YmplY3RBY2Nlc3NSZXZpZXciOnt9fSwicmVxdWlyZWQiOlsia3ViZXJuZXRlc1N1YmplY3RBY2Nlc3NSZXZpZXciXX0seyJwcm9wZXJ0aWVzIjp7InNwaWNlZGIiOnt9fSwicmVxdWlyZWQiOlsic3BpY2VkYiJdfV0sInByb3BlcnRpZXMiOnsiY2FjaGUiOnsiZGVzY3JpcHRpb24iOiJDYWNoaW5nIG9wdGlvbnMgZm9yIHRoZSByZXNvbHZlZCBvYmplY3QgcmV0dXJuZWQgd2hlbiBhcHBseWluZyB0aGlzIGNvbmZpZy5cbk9taXQgaXQgdG8gYXZvaWQgY2FjaGluZyBvYmplY3RzIGZvciB0aGlzIGNvbmZpZy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IktleSB1c2VkIHRvIHN0b3JlIHRoZSBlbnRyeSBpbiB0aGUgY2FjaGUuXG5UaGUgcmVzb2x2ZWQga2V5IG11c3QgYmUgdW5pcXVlIHdpdGhpbiB0aGUgc2NvcGUgb2YgdGhpcyBwYXJ0aWN1bGFyIGNvbmZpZy4iLCJwcm9wZXJ0aWVzIjp7InNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sInR0bCI6eyJkZWZhdWx0Ijo2MCwiZGVzY3JpcHRpb24iOiJEdXJhdGlvbiAoaW4gc2Vjb25kcykgb2YgdGhlIGV4dGVybmFsIGRhdGEgaW4gdGhlIGNhY2hlIGJlZm9yZSBwdWxsZWQgYWdhaW4gZnJvbSB0aGUgc291cmNlLiIsInR5cGUiOiJpbnRlZ2VyIn19LCJyZXF1aXJlZCI6WyJrZXkiXSwidHlwZSI6Im9iamVjdCJ9LCJrdWJlcm5ldGVzU3ViamVjdEFjY2Vzc1JldmlldyI6eyJkZXNjcmlwdGlvbiI6IkF1dGhvcml6YXRpb24gYnkgS3ViZXJuZXRlcyBTdWJqZWN0QWNjZXNzUmV2aWV3IiwicHJvcGVydGllcyI6eyJncm91cHMiOnsiZGVzY3JpcHRpb24iOiJHcm91cHMgdGhlIHVzZXIgbXVzdCBiZSBhIG1lbWJlciBvZiBvciwgaWYgYHVzZXJgIGlzIG9taXR0ZWQsIHRoZSBncm91cHMgdG8gY2hlY2sgZm9yIGF1dGhvcml6YXRpb24gaW4gdGhlIEt1YmVybmV0ZXMgUkJBQy4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJyZXNvdXJjZUF0dHJpYnV0ZXMiOnsiZGVzY3JpcHRpb24iOiJVc2UgcmVzb3VyY2VBdHRyaWJ1dGVzIHRvIGNoZWNrIHBlcm1pc3Npb25zIG9uIEt1YmVybmV0ZXMgcmVzb3VyY2VzLlxuSWYgb21pdHRlZCwgaXQgcGVyZm9ybXMgYSBub24tcmVzb3VyY2UgU3ViamVjdEFjY2Vzc1Jldmlldywgd2l0aCB2ZXJiIGFuZCBwYXRoIGluZmVycmVkIGZyb20gdGhlIHJlcXVlc3QuIiwicHJvcGVydGllcyI6eyJncm91cCI6eyJkZXNjcmlwdGlvbiI6IkFQSSBncm91cCBvZiB0aGUgcmVzb3VyY2UuXG5Vc2UgJyonIGZvciBhbGwgQVBJIGdyb3Vwcy4iLCJwcm9wZXJ0aWVzIjp7InNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZSBuYW1lXG5PbWl0IGl0IHRvIGNoZWNrIGZvciBhdXRob3JpemF0aW9uIG9uIGFsbCByZXNvdXJjZXMgb2YgdGhlIHNwZWNpZmllZCBraW5kLiIsInByb3BlcnRpZXMiOnsic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifSwibmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIHdoZXJlIHRoZSB1c2VyIG11c3QgaGF2ZSBwZXJtaXNzaW9ucyBvbiB0aGUgcmVzb3VyY2UuIiwicHJvcGVydGllcyI6eyJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlNpbXBsZSBwYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpIG9yIGEgc3RyaW5nIHRlbXBsYXRlIHdpdGggdmFyaWFibGVzIHRoYXQgcmVzb2x2ZSB0byBwYXR0ZXJucyAoZS5nLiBcIkhlbGxvLCB7YXV0aC5pZGVudGl0eS5uYW1lfSFcIikuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cblRoZSBmb2xsb3dpbmcgQXV0aG9yaW5vIGN1c3RvbSBtb2RpZmllcnMgYXJlIHN1cHBvcnRlZDogQGV4dHJhY3Q6e3NlcDpcIiBcIixwb3M6MH0sIEByZXBsYWNle29sZDpcIlwiLG5ldzpcIlwifSwgQGNhc2U6dXBwZXJ8bG93ZXIsIEBiYXNlNjQ6ZW5jb2RlfGRlY29kZSBhbmQgQHN0cmlwLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJTdGF0aWMgdmFsdWUiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9LCJyZXNvdXJjZSI6eyJkZXNjcmlwdGlvbiI6IlJlc291cmNlIGtpbmRcblVzZSAnKicgZm9yIGFsbCByZXNvdXJjZSBraW5kcy4iLCJwcm9wZXJ0aWVzIjp7InNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sInN1YnJlc291cmNlIjp7ImRlc2NyaXB0aW9uIjoiU3VicmVzb3VyY2Uga2luZCIsInByb3BlcnRpZXMiOnsic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifSwidmVyYiI6eyJkZXNjcmlwdGlvbiI6IlZlcmIgdG8gY2hlY2sgZm9yIGF1dGhvcml6YXRpb24gb24gdGhlIHJlc291cmNlLlxuVXNlICcqJyBmb3IgYWxsIHZlcmJzLiIsInByb3BlcnRpZXMiOnsic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwidXNlciI6eyJkZXNjcmlwdGlvbiI6IlVzZXIgdG8gY2hlY2sgZm9yIGF1dGhvcml6YXRpb24gaW4gdGhlIEt1YmVybmV0ZXMgUkJBQy5cbk9taXQgaXQgdG8gY2hlY2sgZm9yIGdyb3VwIGF1dGhvcml6YXRpb24gb25seS4iLCJwcm9wZXJ0aWVzIjp7InNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sIm1ldHJpY3MiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiV2hldGhlciB0aGlzIGNvbmZpZyBzaG91bGQgZ2VuZXJhdGUgaW5kaXZpZHVhbCBvYnNlcnZhYmlsaXR5IG1ldHJpY3MiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJvcGEiOnsiZGVzY3JpcHRpb24iOiJPcGVuIFBvbGljeSBBZ2VudCAoT1BBKSBSZWdvIHBvbGljeS4iLCJwcm9wZXJ0aWVzIjp7ImFsbFZhbHVlcyI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJSZXR1cm5zIHRoZSB2YWx1ZSBvZiBhbGwgUmVnbyBydWxlcyBpbiB0aGUgdmlydHVhbCBkb2N1bWVudC4gVmFsdWVzIGNhbiBiZSByZWFkIGluIHN1YnNlcXVlbnQgZXZhbHVhdG9ycy9waGFzZXMgb2YgdGhlIEF1dGggUGlwZWxpbmUuXG5PdGhlcndpc2UsIG9ubHkgdGhlIGRlZmF1bHQgYGFsbG93YCBydWxlIHdpbGwgYmUgZXhwb3NlZC5cblJldHVybmluZyBhbGwgUmVnbyBydWxlcyBjYW4gYWZmZWN0IHBlcmZvcm1hbmNlIG9mIE9QQSBwb2xpY2llcyBkdXJpbmcgcmVjb25jaWxpYXRpb24gKHBvbGljeSBwcmVjb21waWxlKSBhbmQgYXQgcnVudGltZS4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJleHRlcm5hbFBvbGljeSI6eyJkZXNjcmlwdGlvbiI6IlNldHRpbmdzIGZvciBmZXRjaGluZyB0aGUgT1BBIHBvbGljeSBmcm9tIGFuIGV4dGVybmFsIHJlZ2lzdHJ5LlxuVXNlIGl0IGFsdGVybmF0aXZlbHkgdG8gJ3JlZ28nLlxuRm9yIHRoZSBjb25maWd1cmF0aW9ucyBvZiB0aGUgSFRUUCByZXF1ZXN0LCB0aGUgZm9sbG93aW5nIG9wdGlvbnMgYXJlIG5vdCBpbXBsZW1lbnRlZDogJ21ldGhvZCcsICdib2R5JywgJ2JvZHlQYXJhbWV0ZXJzJyxcbidjb250ZW50VHlwZScsICdoZWFkZXJzJywgJ29hdXRoMicuIFVzZSBpdCBvbmx5IHdpdGg6ICd1cmwnLCAnc2hhcmVkU2VjcmV0JywgJ2NyZWRlbnRpYWxzJy4iLCJwcm9wZXJ0aWVzIjp7ImJvZHkiOnsiZGVzY3JpcHRpb24iOiJSYXcgYm9keSBvZiB0aGUgSFRUUCByZXF1ZXN0LlxuU3VwZXJzZWRlcyAnYm9keVBhcmFtZXRlcnMnOyB1c2UgZWl0aGVyIG9uZSBvciB0aGUgb3RoZXIuXG5Vc2UgaXQgd2l0aCBtZXRob2Q9UE9TVDsgZm9yIEdFVCByZXF1ZXN0cywgc2V0IHBhcmFtZXRlcnMgYXMgcXVlcnkgc3RyaW5nIGluIHRoZSAnZW5kcG9pbnQnIChwbGFjZWhvbGRlcnMgY2FuIGJlIHVzZWQpLiIsInByb3BlcnRpZXMiOnsic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifSwiYm9keVBhcmFtZXRlcnMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsicHJvcGVydGllcyI6eyJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlNpbXBsZSBwYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpIG9yIGEgc3RyaW5nIHRlbXBsYXRlIHdpdGggdmFyaWFibGVzIHRoYXQgcmVzb2x2ZSB0byBwYXR0ZXJucyAoZS5nLiBcIkhlbGxvLCB7YXV0aC5pZGVudGl0eS5uYW1lfSFcIikuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cblRoZSBmb2xsb3dpbmcgQXV0aG9yaW5vIGN1c3RvbSBtb2RpZmllcnMgYXJlIHN1cHBvcnRlZDogQGV4dHJhY3Q6e3NlcDpcIiBcIixwb3M6MH0sIEByZXBsYWNle29sZDpcIlwiLG5ldzpcIlwifSwgQGNhc2U6dXBwZXJ8bG93ZXIsIEBiYXNlNjQ6ZW5jb2RlfGRlY29kZSBhbmQgQHN0cmlwLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJTdGF0aWMgdmFsdWUiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9LCJkZXNjcmlwdGlvbiI6IkN1c3RvbSBwYXJhbWV0ZXJzIHRvIGVuY29kZSBpbiB0aGUgYm9keSBvZiB0aGUgSFRUUCByZXF1ZXN0LlxuU3VwZXJzZWRlZCBieSAnYm9keSc7IHVzZSBlaXRoZXIgb25lIG9yIHRoZSBvdGhlci5cblVzZSBpdCB3aXRoIG1ldGhvZD1QT1NUOyBmb3IgR0VUIHJlcXVlc3RzLCBzZXQgcGFyYW1ldGVycyBhcyBxdWVyeSBzdHJpbmcgaW4gdGhlICdlbmRwb2ludCcgKHBsYWNlaG9sZGVycyBjYW4gYmUgdXNlZCkuIiwidHlwZSI6Im9iamVjdCJ9LCJjb250ZW50VHlwZSI6eyJkZWZhdWx0IjoiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIiwiZGVzY3JpcHRpb24iOiJDb250ZW50LVR5cGUgb2YgdGhlIHJlcXVlc3QgYm9keS4gU2hhcGVzIGhvdyAnYm9keVBhcmFtZXRlcnMnIGFyZSBlbmNvZGVkLlxuVXNlIGl0IHdpdGggbWV0aG9kPVBPU1Q7IGZvciBHRVQgcmVxdWVzdHMsIENvbnRlbnQtVHlwZSBpcyBhdXRvbWF0aWNhbGx5IHNldCB0byAndGV4dC9wbGFpbicuIiwiZW51bSI6WyJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQiLCJhcHBsaWNhdGlvbi9qc29uIl0sInR5cGUiOiJzdHJpbmcifSwiY3JlZGVudGlhbHMiOnsiZGVzY3JpcHRpb24iOiJEZWZpbmVzIHdoZXJlIGNsaWVudCBjcmVkZW50aWFscyB3aWxsIGJlIHBhc3NlZCBpbiB0aGUgcmVxdWVzdCB0byB0aGUgc2VydmljZS5cbklmIG9taXR0ZWQsIGl0IGRlZmF1bHRzIHRvIGNsaWVudCBjcmVkZW50aWFscyBwYXNzZWQgaW4gdGhlIEhUVFAgQXV0aG9yaXphdGlvbiBoZWFkZXIgYW5kIHRoZSBcIkJlYXJlclwiIHByZWZpeCBleHBlY3RlZCBwcmVwZW5kZWQgdG8gdGhlIHNlY3JldCB2YWx1ZS4iLCJwcm9wZXJ0aWVzIjp7ImF1dGhvcml6YXRpb25IZWFkZXIiOnsicHJvcGVydGllcyI6eyJwcmVmaXgiOnsidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJjb29raWUiOnsicHJvcGVydGllcyI6eyJuYW1lIjp7InR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJjdXN0b21IZWFkZXIiOnsicHJvcGVydGllcyI6eyJuYW1lIjp7InR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJxdWVyeVN0cmluZyI6eyJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sImhlYWRlcnMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsicHJvcGVydGllcyI6eyJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlNpbXBsZSBwYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpIG9yIGEgc3RyaW5nIHRlbXBsYXRlIHdpdGggdmFyaWFibGVzIHRoYXQgcmVzb2x2ZSB0byBwYXR0ZXJucyAoZS5nLiBcIkhlbGxvLCB7YXV0aC5pZGVudGl0eS5uYW1lfSFcIikuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cblRoZSBmb2xsb3dpbmcgQXV0aG9yaW5vIGN1c3RvbSBtb2RpZmllcnMgYXJlIHN1cHBvcnRlZDogQGV4dHJhY3Q6e3NlcDpcIiBcIixwb3M6MH0sIEByZXBsYWNle29sZDpcIlwiLG5ldzpcIlwifSwgQGNhc2U6dXBwZXJ8bG93ZXIsIEBiYXNlNjQ6ZW5jb2RlfGRlY29kZSBhbmQgQHN0cmlwLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJTdGF0aWMgdmFsdWUiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9LCJkZXNjcmlwdGlvbiI6IkN1c3RvbSBoZWFkZXJzIGluIHRoZSBIVFRQIHJlcXVlc3QuIiwidHlwZSI6Im9iamVjdCJ9LCJtZXRob2QiOnsiZGVmYXVsdCI6IkdFVCIsImRlc2NyaXB0aW9uIjoiSFRUUCB2ZXJiIHVzZWQgaW4gdGhlIHJlcXVlc3QgdG8gdGhlIHNlcnZpY2UuIEFjY2VwdGVkIHZhbHVlczogR0VUIChkZWZhdWx0KSwgUE9TVC5cbldoZW4gdGhlIHJlcXVlc3QgbWV0aG9kIGlzIFBPU1QsIHRoZSBhdXRob3JpemF0aW9uIEpTT04gaXMgcGFzc2VkIGluIHRoZSBib2R5IG9mIHRoZSByZXF1ZXN0LiIsImVudW0iOlsiR0VUIiwiUE9TVCIsIlBVVCIsIlBBVENIIiwiREVMRVRFIiwiSEVBRCIsIk9QVElPTlMiLCJDT05ORUNUIiwiVFJBQ0UiXSwidHlwZSI6InN0cmluZyJ9LCJvYXV0aDIiOnsiZGVzY3JpcHRpb24iOiJBdXRoZW50aWNhdGlvbiB3aXRoIHRoZSBIVFRQIHNlcnZpY2UgYnkgT0F1dGgyIENsaWVudCBDcmVkZW50aWFscyBncmFudC4iLCJwcm9wZXJ0aWVzIjp7ImNhY2hlIjp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoiQ2FjaGVzIGFuZCByZXVzZXMgdGhlIHRva2VuIHVudGlsIGV4cGlyZWQuXG5TZXQgaXQgdG8gZmFsc2UgdG8gZm9yY2UgZmV0Y2ggdGhlIHRva2VuIGF0IGV2ZXJ5IGF1dGhvcml6YXRpb24gcmVxdWVzdCByZWdhcmRsZXNzIG9mIGV4cGlyYXRpb24uIiwidHlwZSI6ImJvb2xlYW4ifSwiY2xpZW50SWQiOnsiZGVzY3JpcHRpb24iOiJPQXV0aDIgQ2xpZW50IElELiIsInR5cGUiOiJzdHJpbmcifSwiY2xpZW50U2VjcmV0UmVmIjp7ImRlc2NyaXB0aW9uIjoiUmVmZXJlbmNlIHRvIGEgS3ViZXJlbnRlcyBTZWNyZXQga2V5IHRoYXQgc3RvcmVzIHRoYXQgT0F1dGgyIENsaWVudCBTZWNyZXQuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUga2V5IG9mIHRoZSBzZWNyZXQgdG8gc2VsZWN0IGZyb20uICBNdXN0IGJlIGEgdmFsaWQgc2VjcmV0IGtleS4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJUaGUgbmFtZSBvZiB0aGUgc2VjcmV0IGluIHRoZSBBdXRob3Jpbm8ncyBuYW1lc3BhY2UgdG8gc2VsZWN0IGZyb20uIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsia2V5IiwibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sImV4dHJhUGFyYW1zIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJPcHRpb25hbCBleHRyYSBwYXJhbWV0ZXJzIGZvciB0aGUgcmVxdWVzdHMgdG8gdGhlIHRva2VuIFVSTC4iLCJ0eXBlIjoib2JqZWN0In0sInNjb3BlcyI6eyJkZXNjcmlwdGlvbiI6Ik9wdGlvbmFsIHNjb3BlcyBmb3IgdGhlIGNsaWVudCBjcmVkZW50aWFscyBncmFudCwgaWYgc3VwcG9ydGVkIGJ5IGhlIE9BdXRoMiBzZXJ2ZXIuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwidG9rZW5VcmwiOnsiZGVzY3JpcHRpb24iOiJUb2tlbiBlbmRwb2ludCBVUkwgb2YgdGhlIE9BdXRoMiByZXNvdXJjZSBzZXJ2ZXIuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiY2xpZW50SWQiLCJjbGllbnRTZWNyZXRSZWYiLCJ0b2tlblVybCJdLCJ0eXBlIjoib2JqZWN0In0sInNoYXJlZFNlY3JldFJlZiI6eyJkZXNjcmlwdGlvbiI6IlJlZmVyZW5jZSB0byBhIFNlY3JldCBrZXkgd2hvc2UgdmFsdWUgd2lsbCBiZSBwYXNzZWQgYnkgQXV0aG9yaW5vIGluIHRoZSByZXF1ZXN0LlxuVGhlIEhUVFAgc2VydmljZSBjYW4gdXNlIHRoZSBzaGFyZWQgc2VjcmV0IHRvIGF1dGhlbnRpY2F0ZSB0aGUgb3JpZ2luIG9mIHRoZSByZXF1ZXN0LlxuSWdub3JlZCBpZiB1c2VkIHRvZ2V0aGVyIHdpdGggb2F1dGgyLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGtleSBvZiB0aGUgc2VjcmV0IHRvIHNlbGVjdCBmcm9tLiAgTXVzdCBiZSBhIHZhbGlkIHNlY3JldCBrZXkuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiVGhlIG5hbWUgb2YgdGhlIHNlY3JldCBpbiB0aGUgQXV0aG9yaW5vJ3MgbmFtZXNwYWNlIHRvIHNlbGVjdCBmcm9tLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImtleSIsIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0dGwiOnsiZGVzY3JpcHRpb24iOiJEdXJhdGlvbiAoaW4gc2Vjb25kcykgb2YgdGhlIGV4dGVybmFsIGRhdGEgaW4gdGhlIGNhY2hlIGJlZm9yZSBwdWxsZWQgYWdhaW4gZnJvbSB0aGUgc291cmNlLiIsInR5cGUiOiJpbnRlZ2VyIn0sInVybCI6eyJkZXNjcmlwdGlvbiI6IkVuZHBvaW50IFVSTCBvZiB0aGUgSFRUUCBzZXJ2aWNlLlxuVGhlIHZhbHVlIGNhbiBpbmNsdWRlIHZhcmlhYmxlIHBsYWNlaG9sZGVycyBpbiB0aGUgZm9ybWF0IFwie3NlbGVjdG9yfVwiLCB3aGVyZSBcInNlbGVjdG9yXCIgaXMgYW55IHBhdHRlcm4gc3VwcG9ydGVkXG5ieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGFuZCBzZWxlY3RzIHZhbHVlIGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTi5cbkUuZy4gaHR0cHM6Ly9leHQtYXV0aC1zZXJ2ZXIuaW8vbWV0YWRhdGE/cD17cmVxdWVzdC5wYXRofSIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInVybCJdLCJ0eXBlIjoib2JqZWN0In0sInJlZ28iOnsiZGVzY3JpcHRpb24iOiJBdXRob3JpemF0aW9uIHBvbGljeSBhcyBhIFJlZ28gbGFuZ3VhZ2UgZG9jdW1lbnQuXG5UaGUgUmVnbyBkb2N1bWVudCBtdXN0IGluY2x1ZGUgdGhlIFwiYWxsb3dcIiBjb25kaXRpb24sIHNldCBieSBBdXRob3Jpbm8gdG8gXCJmYWxzZVwiIGJ5IGRlZmF1bHQgKGkuZS4gcmVxdWVzdHMgYXJlIHVuYXV0aG9yaXplZCB1bmxlc3MgY2hhbmdlZCkuXG5UaGUgUmVnbyBkb2N1bWVudCBtdXN0IE5PVCBpbmNsdWRlIHRoZSBcInBhY2thZ2VcIiBkZWNsYXJhdGlvbiBpbiBsaW5lIDEuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJwYXR0ZXJuTWF0Y2hpbmciOnsiZGVzY3JpcHRpb24iOiJQYXR0ZXJuLW1hdGNoaW5nIGF1dGhvcml6YXRpb24gcnVsZXMuIiwicHJvcGVydGllcyI6eyJwYXR0ZXJucyI6eyJpdGVtcyI6eyJvbmVPZiI6W3sicHJvcGVydGllcyI6eyJwYXR0ZXJuUmVmIjp7fX0sInJlcXVpcmVkIjpbInBhdHRlcm5SZWYiXX0seyJwcm9wZXJ0aWVzIjp7Im9wZXJhdG9yIjp7fSwic2VsZWN0b3IiOnt9LCJ2YWx1ZSI6e319LCJyZXF1aXJlZCI6WyJvcGVyYXRvciIsInNlbGVjdG9yIl19LHsicHJvcGVydGllcyI6eyJhbGwiOnt9fSwicmVxdWlyZWQiOlsiYWxsIl19LHsicHJvcGVydGllcyI6eyJhbnkiOnt9fSwicmVxdWlyZWQiOlsiYW55Il19XSwicHJvcGVydGllcyI6eyJhbGwiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2YgcGF0dGVybiBleHByZXNzaW9ucyB0byBiZSBldmFsdWF0ZWQgYXMgYSBsb2dpY2FsIEFORC4iLCJpdGVtcyI6eyJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfSwidHlwZSI6ImFycmF5In0sImFueSI6eyJkZXNjcmlwdGlvbiI6IkEgbGlzdCBvZiBwYXR0ZXJuIGV4cHJlc3Npb25zIHRvIGJlIGV2YWx1YXRlZCBhcyBhIGxvZ2ljYWwgT1IuIiwiaXRlbXMiOnsidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sInR5cGUiOiJhcnJheSJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6IlRoZSBiaW5hcnkgb3BlcmF0b3IgdG8gYmUgYXBwbGllZCB0byB0aGUgY29udGVudCBmZXRjaGVkIGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiwgZm9yIGNvbXBhcmlzb24gd2l0aCBcInZhbHVlXCIuXG5Qb3NzaWJsZSB2YWx1ZXMgYXJlOiBcImVxXCIgKGVxdWFsIHRvKSwgXCJuZXFcIiAobm90IGVxdWFsIHRvKSwgXCJpbmNsXCIgKGluY2x1ZGVzOyBmb3IgYXJyYXlzKSwgXCJleGNsXCIgKGV4Y2x1ZGVzOyBmb3IgYXJyYXlzKSwgXCJtYXRjaGVzXCIgKHJlZ2V4KSIsImVudW0iOlsiZXEiLCJuZXEiLCJpbmNsIiwiZXhjbCIsIm1hdGNoZXMiXSwidHlwZSI6InN0cmluZyJ9LCJwYXR0ZXJuUmVmIjp7ImRlc2NyaXB0aW9uIjoiUmVmZXJlbmNlIHRvIGEgbmFtZWQgc2V0IG9mIHBhdHRlcm4gZXhwcmVzc2lvbnMiLCJ0eXBlIjoic3RyaW5nIn0sInNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiUGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuQXV0aG9yaW5vIGN1c3RvbSBKU09OIHBhdGggbW9kaWZpZXJzIGFyZSBhbHNvIHN1cHBvcnRlZC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiVGhlIHZhbHVlIG9mIHJlZmVyZW5jZSBmb3IgdGhlIGNvbXBhcmlzb24gd2l0aCB0aGUgY29udGVudCBmZXRjaGVkIGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTi5cbklmIHVzZWQgd2l0aCB0aGUgXCJtYXRjaGVzXCIgb3BlcmF0b3IsIHRoZSB2YWx1ZSBtdXN0IGNvbXBpbGUgdG8gYSB2YWxpZCBHb2xhbmcgcmVnZXguIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbInBhdHRlcm5zIl0sInR5cGUiOiJvYmplY3QifSwicHJpb3JpdHkiOnsiZGVmYXVsdCI6MCwiZGVzY3JpcHRpb24iOiJQcmlvcml0eSBncm91cCBvZiB0aGUgY29uZmlnLlxuQWxsIGNvbmZpZ3MgaW4gdGhlIHNhbWUgcHJpb3JpdHkgZ3JvdXAgYXJlIGV2YWx1YXRlZCBjb25jdXJyZW50bHk7IGNvbnNlY3V0aXZlIHByaW9yaXR5IGdyb3VwcyBhcmUgZXZhbHVhdGVkIHNlcXVlbnRpYWxseS4iLCJ0eXBlIjoiaW50ZWdlciJ9LCJzcGljZWRiIjp7ImRlc2NyaXB0aW9uIjoiQXV0aG9yaXphdGlvbiBkZWNpc2lvbiBkZWxlZ2F0ZWQgdG8gZXh0ZXJuYWwgQXV0aHplZC9TcGljZURCIHNlcnZlci4iLCJwcm9wZXJ0aWVzIjp7ImVuZHBvaW50Ijp7ImRlc2NyaXB0aW9uIjoiSG9zdG5hbWUgYW5kIHBvcnQgbnVtYmVyIHRvIHRoZSBHUlBDIGludGVyZmFjZSBvZiB0aGUgU3BpY2VEQiBzZXJ2ZXIgKGUuZy4gc3BpY2VkYjo1MDA1MSkuIiwidHlwZSI6InN0cmluZyJ9LCJpbnNlY3VyZSI6eyJkZXNjcmlwdGlvbiI6Ikluc2VjdXJlIEhUVFAgY29ubmVjdGlvbiAoaS5lLiBkaXNhYmxlcyBUTFMgdmVyaWZpY2F0aW9uKSIsInR5cGUiOiJib29sZWFuIn0sInBlcm1pc3Npb24iOnsiZGVzY3JpcHRpb24iOiJUaGUgbmFtZSBvZiB0aGUgcGVybWlzc2lvbiAob3IgcmVsYXRpb24pIG9uIHdoaWNoIHRvIGV4ZWN1dGUgdGhlIGNoZWNrLiIsInByb3BlcnRpZXMiOnsic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifSwicmVzb3VyY2UiOnsiZGVzY3JpcHRpb24iOiJUaGUgcmVzb3VyY2Ugb24gd2hpY2ggdG8gY2hlY2sgdGhlIHBlcm1pc3Npb24gb3IgcmVsYXRpb24uIiwicHJvcGVydGllcyI6eyJraW5kIjp7InByb3BlcnRpZXMiOnsic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifSwibmFtZSI6eyJwcm9wZXJ0aWVzIjp7InNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sInNoYXJlZFNlY3JldFJlZiI6eyJkZXNjcmlwdGlvbiI6IlJlZmVyZW5jZSB0byBhIFNlY3JldCBrZXkgd2hvc2UgdmFsdWUgd2lsbCBiZSB1c2VkIGJ5IEF1dGhvcmlubyB0byBhdXRoZW50aWNhdGUgd2l0aCB0aGUgQXV0aHplZCBzZXJ2aWNlLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGtleSBvZiB0aGUgc2VjcmV0IHRvIHNlbGVjdCBmcm9tLiAgTXVzdCBiZSBhIHZhbGlkIHNlY3JldCBrZXkuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiVGhlIG5hbWUgb2YgdGhlIHNlY3JldCBpbiB0aGUgQXV0aG9yaW5vJ3MgbmFtZXNwYWNlIHRvIHNlbGVjdCBmcm9tLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImtleSIsIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdWJqZWN0Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIHN1YmplY3QgdGhhdCB3aWxsIGJlIGNoZWNrZWQgZm9yIHRoZSBwZXJtaXNzaW9uIG9yIHJlbGF0aW9uLiIsInByb3BlcnRpZXMiOnsia2luZCI6eyJwcm9wZXJ0aWVzIjp7InNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sIm5hbWUiOnsicHJvcGVydGllcyI6eyJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlNpbXBsZSBwYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpIG9yIGEgc3RyaW5nIHRlbXBsYXRlIHdpdGggdmFyaWFibGVzIHRoYXQgcmVzb2x2ZSB0byBwYXR0ZXJucyAoZS5nLiBcIkhlbGxvLCB7YXV0aC5pZGVudGl0eS5uYW1lfSFcIikuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cblRoZSBmb2xsb3dpbmcgQXV0aG9yaW5vIGN1c3RvbSBtb2RpZmllcnMgYXJlIHN1cHBvcnRlZDogQGV4dHJhY3Q6e3NlcDpcIiBcIixwb3M6MH0sIEByZXBsYWNle29sZDpcIlwiLG5ldzpcIlwifSwgQGNhc2U6dXBwZXJ8bG93ZXIsIEBiYXNlNjQ6ZW5jb2RlfGRlY29kZSBhbmQgQHN0cmlwLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJTdGF0aWMgdmFsdWUiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsiZW5kcG9pbnQiXSwidHlwZSI6Im9iamVjdCJ9LCJ3aGVuIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9ucyBmb3IgQXV0aG9yaW5vIHRvIGVuZm9yY2UgdGhpcyBjb25maWcuXG5JZiBvbWl0dGVkLCB0aGUgY29uZmlnIHdpbGwgYmUgZW5mb3JjZWQgZm9yIGFsbCByZXF1ZXN0cy5cbklmIHByZXNlbnQsIGFsbCBjb25kaXRpb25zIG11c3QgbWF0Y2ggZm9yIHRoZSBjb25maWcgdG8gYmUgZW5mb3JjZWQ7IG90aGVyd2lzZSwgdGhlIGNvbmZpZyB3aWxsIGJlIHNraXBwZWQuIiwiaXRlbXMiOnsib25lT2YiOlt7InByb3BlcnRpZXMiOnsicGF0dGVyblJlZiI6e319LCJyZXF1aXJlZCI6WyJwYXR0ZXJuUmVmIl19LHsicHJvcGVydGllcyI6eyJvcGVyYXRvciI6e30sInNlbGVjdG9yIjp7fSwidmFsdWUiOnt9fSwicmVxdWlyZWQiOlsib3BlcmF0b3IiLCJzZWxlY3RvciJdfSx7InByb3BlcnRpZXMiOnsiYWxsIjp7fX0sInJlcXVpcmVkIjpbImFsbCJdfSx7InByb3BlcnRpZXMiOnsiYW55Ijp7fX0sInJlcXVpcmVkIjpbImFueSJdfV0sInByb3BlcnRpZXMiOnsiYWxsIjp7ImRlc2NyaXB0aW9uIjoiQSBsaXN0IG9mIHBhdHRlcm4gZXhwcmVzc2lvbnMgdG8gYmUgZXZhbHVhdGVkIGFzIGEgbG9naWNhbCBBTkQuIiwiaXRlbXMiOnsidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sInR5cGUiOiJhcnJheSJ9LCJhbnkiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2YgcGF0dGVybiBleHByZXNzaW9ucyB0byBiZSBldmFsdWF0ZWQgYXMgYSBsb2dpY2FsIE9SLiIsIml0ZW1zIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJ0eXBlIjoiYXJyYXkifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJUaGUgYmluYXJ5IG9wZXJhdG9yIHRvIGJlIGFwcGxpZWQgdG8gdGhlIGNvbnRlbnQgZmV0Y2hlZCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04sIGZvciBjb21wYXJpc29uIHdpdGggXCJ2YWx1ZVwiLlxuUG9zc2libGUgdmFsdWVzIGFyZTogXCJlcVwiIChlcXVhbCB0byksIFwibmVxXCIgKG5vdCBlcXVhbCB0byksIFwiaW5jbFwiIChpbmNsdWRlczsgZm9yIGFycmF5cyksIFwiZXhjbFwiIChleGNsdWRlczsgZm9yIGFycmF5cyksIFwibWF0Y2hlc1wiIChyZWdleCkiLCJlbnVtIjpbImVxIiwibmVxIiwiaW5jbCIsImV4Y2wiLCJtYXRjaGVzIl0sInR5cGUiOiJzdHJpbmcifSwicGF0dGVyblJlZiI6eyJkZXNjcmlwdGlvbiI6IlJlZmVyZW5jZSB0byBhIG5hbWVkIHNldCBvZiBwYXR0ZXJuIGV4cHJlc3Npb25zIiwidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cbkF1dGhvcmlubyBjdXN0b20gSlNPTiBwYXRoIG1vZGlmaWVycyBhcmUgYWxzbyBzdXBwb3J0ZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSB2YWx1ZSBvZiByZWZlcmVuY2UgZm9yIHRoZSBjb21wYXJpc29uIHdpdGggdGhlIGNvbnRlbnQgZmV0Y2hlZCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04uXG5JZiB1c2VkIHdpdGggdGhlIFwibWF0Y2hlc1wiIG9wZXJhdG9yLCB0aGUgdmFsdWUgbXVzdCBjb21waWxlIHRvIGEgdmFsaWQgR29sYW5nIHJlZ2V4LiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiQXV0aG9yaXphdGlvbiBwb2xpY2llcy5cbkFsbCBwb2xpY2llcyBNVVNUIGV2YWx1YXRlIHRvIFwiYWxsb3dlZCA9IHRydWVcIiBmb3IgdGhlIGF1dGggcmVxdWVzdCBiZSBzdWNjZXNzZnVsLiIsInR5cGUiOiJvYmplY3QifSwiY2FsbGJhY2tzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InByb3BlcnRpZXMiOnsiY2FjaGUiOnsiZGVzY3JpcHRpb24iOiJDYWNoaW5nIG9wdGlvbnMgZm9yIHRoZSByZXNvbHZlZCBvYmplY3QgcmV0dXJuZWQgd2hlbiBhcHBseWluZyB0aGlzIGNvbmZpZy5cbk9taXQgaXQgdG8gYXZvaWQgY2FjaGluZyBvYmplY3RzIGZvciB0aGlzIGNvbmZpZy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IktleSB1c2VkIHRvIHN0b3JlIHRoZSBlbnRyeSBpbiB0aGUgY2FjaGUuXG5UaGUgcmVzb2x2ZWQga2V5IG11c3QgYmUgdW5pcXVlIHdpdGhpbiB0aGUgc2NvcGUgb2YgdGhpcyBwYXJ0aWN1bGFyIGNvbmZpZy4iLCJwcm9wZXJ0aWVzIjp7InNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sInR0bCI6eyJkZWZhdWx0Ijo2MCwiZGVzY3JpcHRpb24iOiJEdXJhdGlvbiAoaW4gc2Vjb25kcykgb2YgdGhlIGV4dGVybmFsIGRhdGEgaW4gdGhlIGNhY2hlIGJlZm9yZSBwdWxsZWQgYWdhaW4gZnJvbSB0aGUgc291cmNlLiIsInR5cGUiOiJpbnRlZ2VyIn19LCJyZXF1aXJlZCI6WyJrZXkiXSwidHlwZSI6Im9iamVjdCJ9LCJodHRwIjp7ImRlc2NyaXB0aW9uIjoiU2V0dGluZ3Mgb2YgdGhlIGV4dGVybmFsIEhUVFAgcmVxdWVzdCIsInByb3BlcnRpZXMiOnsiYm9keSI6eyJkZXNjcmlwdGlvbiI6IlJhdyBib2R5IG9mIHRoZSBIVFRQIHJlcXVlc3QuXG5TdXBlcnNlZGVzICdib2R5UGFyYW1ldGVycyc7IHVzZSBlaXRoZXIgb25lIG9yIHRoZSBvdGhlci5cblVzZSBpdCB3aXRoIG1ldGhvZD1QT1NUOyBmb3IgR0VUIHJlcXVlc3RzLCBzZXQgcGFyYW1ldGVycyBhcyBxdWVyeSBzdHJpbmcgaW4gdGhlICdlbmRwb2ludCcgKHBsYWNlaG9sZGVycyBjYW4gYmUgdXNlZCkuIiwicHJvcGVydGllcyI6eyJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlNpbXBsZSBwYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpIG9yIGEgc3RyaW5nIHRlbXBsYXRlIHdpdGggdmFyaWFibGVzIHRoYXQgcmVzb2x2ZSB0byBwYXR0ZXJucyAoZS5nLiBcIkhlbGxvLCB7YXV0aC5pZGVudGl0eS5uYW1lfSFcIikuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cblRoZSBmb2xsb3dpbmcgQXV0aG9yaW5vIGN1c3RvbSBtb2RpZmllcnMgYXJlIHN1cHBvcnRlZDogQGV4dHJhY3Q6e3NlcDpcIiBcIixwb3M6MH0sIEByZXBsYWNle29sZDpcIlwiLG5ldzpcIlwifSwgQGNhc2U6dXBwZXJ8bG93ZXIsIEBiYXNlNjQ6ZW5jb2RlfGRlY29kZSBhbmQgQHN0cmlwLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJTdGF0aWMgdmFsdWUiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9LCJib2R5UGFyYW1ldGVycyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJwcm9wZXJ0aWVzIjp7InNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiQ3VzdG9tIHBhcmFtZXRlcnMgdG8gZW5jb2RlIGluIHRoZSBib2R5IG9mIHRoZSBIVFRQIHJlcXVlc3QuXG5TdXBlcnNlZGVkIGJ5ICdib2R5JzsgdXNlIGVpdGhlciBvbmUgb3IgdGhlIG90aGVyLlxuVXNlIGl0IHdpdGggbWV0aG9kPVBPU1Q7IGZvciBHRVQgcmVxdWVzdHMsIHNldCBwYXJhbWV0ZXJzIGFzIHF1ZXJ5IHN0cmluZyBpbiB0aGUgJ2VuZHBvaW50JyAocGxhY2Vob2xkZXJzIGNhbiBiZSB1c2VkKS4iLCJ0eXBlIjoib2JqZWN0In0sImNvbnRlbnRUeXBlIjp7ImRlZmF1bHQiOiJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQiLCJkZXNjcmlwdGlvbiI6IkNvbnRlbnQtVHlwZSBvZiB0aGUgcmVxdWVzdCBib2R5LiBTaGFwZXMgaG93ICdib2R5UGFyYW1ldGVycycgYXJlIGVuY29kZWQuXG5Vc2UgaXQgd2l0aCBtZXRob2Q9UE9TVDsgZm9yIEdFVCByZXF1ZXN0cywgQ29udGVudC1UeXBlIGlzIGF1dG9tYXRpY2FsbHkgc2V0IHRvICd0ZXh0L3BsYWluJy4iLCJlbnVtIjpbImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIsImFwcGxpY2F0aW9uL2pzb24iXSwidHlwZSI6InN0cmluZyJ9LCJjcmVkZW50aWFscyI6eyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgd2hlcmUgY2xpZW50IGNyZWRlbnRpYWxzIHdpbGwgYmUgcGFzc2VkIGluIHRoZSByZXF1ZXN0IHRvIHRoZSBzZXJ2aWNlLlxuSWYgb21pdHRlZCwgaXQgZGVmYXVsdHMgdG8gY2xpZW50IGNyZWRlbnRpYWxzIHBhc3NlZCBpbiB0aGUgSFRUUCBBdXRob3JpemF0aW9uIGhlYWRlciBhbmQgdGhlIFwiQmVhcmVyXCIgcHJlZml4IGV4cGVjdGVkIHByZXBlbmRlZCB0byB0aGUgc2VjcmV0IHZhbHVlLiIsInByb3BlcnRpZXMiOnsiYXV0aG9yaXphdGlvbkhlYWRlciI6eyJwcm9wZXJ0aWVzIjp7InByZWZpeCI6eyJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImNvb2tpZSI6eyJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sImN1c3RvbUhlYWRlciI6eyJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInF1ZXJ5U3RyaW5nIjp7InByb3BlcnRpZXMiOnsibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwiaGVhZGVycyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJwcm9wZXJ0aWVzIjp7InNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiQ3VzdG9tIGhlYWRlcnMgaW4gdGhlIEhUVFAgcmVxdWVzdC4iLCJ0eXBlIjoib2JqZWN0In0sIm1ldGhvZCI6eyJkZWZhdWx0IjoiR0VUIiwiZGVzY3JpcHRpb24iOiJIVFRQIHZlcmIgdXNlZCBpbiB0aGUgcmVxdWVzdCB0byB0aGUgc2VydmljZS4gQWNjZXB0ZWQgdmFsdWVzOiBHRVQgKGRlZmF1bHQpLCBQT1NULlxuV2hlbiB0aGUgcmVxdWVzdCBtZXRob2QgaXMgUE9TVCwgdGhlIGF1dGhvcml6YXRpb24gSlNPTiBpcyBwYXNzZWQgaW4gdGhlIGJvZHkgb2YgdGhlIHJlcXVlc3QuIiwiZW51bSI6WyJHRVQiLCJQT1NUIiwiUFVUIiwiUEFUQ0giLCJERUxFVEUiLCJIRUFEIiwiT1BUSU9OUyIsIkNPTk5FQ1QiLCJUUkFDRSJdLCJ0eXBlIjoic3RyaW5nIn0sIm9hdXRoMiI6eyJkZXNjcmlwdGlvbiI6IkF1dGhlbnRpY2F0aW9uIHdpdGggdGhlIEhUVFAgc2VydmljZSBieSBPQXV0aDIgQ2xpZW50IENyZWRlbnRpYWxzIGdyYW50LiIsInByb3BlcnRpZXMiOnsiY2FjaGUiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJDYWNoZXMgYW5kIHJldXNlcyB0aGUgdG9rZW4gdW50aWwgZXhwaXJlZC5cblNldCBpdCB0byBmYWxzZSB0byBmb3JjZSBmZXRjaCB0aGUgdG9rZW4gYXQgZXZlcnkgYXV0aG9yaXphdGlvbiByZXF1ZXN0IHJlZ2FyZGxlc3Mgb2YgZXhwaXJhdGlvbi4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJjbGllbnRJZCI6eyJkZXNjcmlwdGlvbiI6Ik9BdXRoMiBDbGllbnQgSUQuIiwidHlwZSI6InN0cmluZyJ9LCJjbGllbnRTZWNyZXRSZWYiOnsiZGVzY3JpcHRpb24iOiJSZWZlcmVuY2UgdG8gYSBLdWJlcmVudGVzIFNlY3JldCBrZXkgdGhhdCBzdG9yZXMgdGhhdCBPQXV0aDIgQ2xpZW50IFNlY3JldC4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBrZXkgb2YgdGhlIHNlY3JldCB0byBzZWxlY3QgZnJvbS4gIE11c3QgYmUgYSB2YWxpZCBzZWNyZXQga2V5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBuYW1lIG9mIHRoZSBzZWNyZXQgaW4gdGhlIEF1dGhvcmlubydzIG5hbWVzcGFjZSB0byBzZWxlY3QgZnJvbS4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwiZXh0cmFQYXJhbXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Ik9wdGlvbmFsIGV4dHJhIHBhcmFtZXRlcnMgZm9yIHRoZSByZXF1ZXN0cyB0byB0aGUgdG9rZW4gVVJMLiIsInR5cGUiOiJvYmplY3QifSwic2NvcGVzIjp7ImRlc2NyaXB0aW9uIjoiT3B0aW9uYWwgc2NvcGVzIGZvciB0aGUgY2xpZW50IGNyZWRlbnRpYWxzIGdyYW50LCBpZiBzdXBwb3J0ZWQgYnkgaGUgT0F1dGgyIHNlcnZlci4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJ0b2tlblVybCI6eyJkZXNjcmlwdGlvbiI6IlRva2VuIGVuZHBvaW50IFVSTCBvZiB0aGUgT0F1dGgyIHJlc291cmNlIHNlcnZlci4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJjbGllbnRJZCIsImNsaWVudFNlY3JldFJlZiIsInRva2VuVXJsIl0sInR5cGUiOiJvYmplY3QifSwic2hhcmVkU2VjcmV0UmVmIjp7ImRlc2NyaXB0aW9uIjoiUmVmZXJlbmNlIHRvIGEgU2VjcmV0IGtleSB3aG9zZSB2YWx1ZSB3aWxsIGJlIHBhc3NlZCBieSBBdXRob3Jpbm8gaW4gdGhlIHJlcXVlc3QuXG5UaGUgSFRUUCBzZXJ2aWNlIGNhbiB1c2UgdGhlIHNoYXJlZCBzZWNyZXQgdG8gYXV0aGVudGljYXRlIHRoZSBvcmlnaW4gb2YgdGhlIHJlcXVlc3QuXG5JZ25vcmVkIGlmIHVzZWQgdG9nZXRoZXIgd2l0aCBvYXV0aDIuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUga2V5IG9mIHRoZSBzZWNyZXQgdG8gc2VsZWN0IGZyb20uICBNdXN0IGJlIGEgdmFsaWQgc2VjcmV0IGtleS4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJUaGUgbmFtZSBvZiB0aGUgc2VjcmV0IGluIHRoZSBBdXRob3Jpbm8ncyBuYW1lc3BhY2UgdG8gc2VsZWN0IGZyb20uIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsia2V5IiwibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInVybCI6eyJkZXNjcmlwdGlvbiI6IkVuZHBvaW50IFVSTCBvZiB0aGUgSFRUUCBzZXJ2aWNlLlxuVGhlIHZhbHVlIGNhbiBpbmNsdWRlIHZhcmlhYmxlIHBsYWNlaG9sZGVycyBpbiB0aGUgZm9ybWF0IFwie3NlbGVjdG9yfVwiLCB3aGVyZSBcInNlbGVjdG9yXCIgaXMgYW55IHBhdHRlcm4gc3VwcG9ydGVkXG5ieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGFuZCBzZWxlY3RzIHZhbHVlIGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTi5cbkUuZy4gaHR0cHM6Ly9leHQtYXV0aC1zZXJ2ZXIuaW8vbWV0YWRhdGE/cD17cmVxdWVzdC5wYXRofSIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInVybCJdLCJ0eXBlIjoib2JqZWN0In0sIm1ldHJpY3MiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiV2hldGhlciB0aGlzIGNvbmZpZyBzaG91bGQgZ2VuZXJhdGUgaW5kaXZpZHVhbCBvYnNlcnZhYmlsaXR5IG1ldHJpY3MiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJwcmlvcml0eSI6eyJkZWZhdWx0IjowLCJkZXNjcmlwdGlvbiI6IlByaW9yaXR5IGdyb3VwIG9mIHRoZSBjb25maWcuXG5BbGwgY29uZmlncyBpbiB0aGUgc2FtZSBwcmlvcml0eSBncm91cCBhcmUgZXZhbHVhdGVkIGNvbmN1cnJlbnRseTsgY29uc2VjdXRpdmUgcHJpb3JpdHkgZ3JvdXBzIGFyZSBldmFsdWF0ZWQgc2VxdWVudGlhbGx5LiIsInR5cGUiOiJpbnRlZ2VyIn0sIndoZW4iOnsiZGVzY3JpcHRpb24iOiJDb25kaXRpb25zIGZvciBBdXRob3Jpbm8gdG8gZW5mb3JjZSB0aGlzIGNvbmZpZy5cbklmIG9taXR0ZWQsIHRoZSBjb25maWcgd2lsbCBiZSBlbmZvcmNlZCBmb3IgYWxsIHJlcXVlc3RzLlxuSWYgcHJlc2VudCwgYWxsIGNvbmRpdGlvbnMgbXVzdCBtYXRjaCBmb3IgdGhlIGNvbmZpZyB0byBiZSBlbmZvcmNlZDsgb3RoZXJ3aXNlLCB0aGUgY29uZmlnIHdpbGwgYmUgc2tpcHBlZC4iLCJpdGVtcyI6eyJwcm9wZXJ0aWVzIjp7ImFsbCI6eyJkZXNjcmlwdGlvbiI6IkEgbGlzdCBvZiBwYXR0ZXJuIGV4cHJlc3Npb25zIHRvIGJlIGV2YWx1YXRlZCBhcyBhIGxvZ2ljYWwgQU5ELiIsIml0ZW1zIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJ0eXBlIjoiYXJyYXkifSwiYW55Ijp7ImRlc2NyaXB0aW9uIjoiQSBsaXN0IG9mIHBhdHRlcm4gZXhwcmVzc2lvbnMgdG8gYmUgZXZhbHVhdGVkIGFzIGEgbG9naWNhbCBPUi4iLCJpdGVtcyI6eyJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfSwidHlwZSI6ImFycmF5In0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGJpbmFyeSBvcGVyYXRvciB0byBiZSBhcHBsaWVkIHRvIHRoZSBjb250ZW50IGZldGNoZWQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OLCBmb3IgY29tcGFyaXNvbiB3aXRoIFwidmFsdWVcIi5cblBvc3NpYmxlIHZhbHVlcyBhcmU6IFwiZXFcIiAoZXF1YWwgdG8pLCBcIm5lcVwiIChub3QgZXF1YWwgdG8pLCBcImluY2xcIiAoaW5jbHVkZXM7IGZvciBhcnJheXMpLCBcImV4Y2xcIiAoZXhjbHVkZXM7IGZvciBhcnJheXMpLCBcIm1hdGNoZXNcIiAocmVnZXgpIiwiZW51bSI6WyJlcSIsIm5lcSIsImluY2wiLCJleGNsIiwibWF0Y2hlcyJdLCJ0eXBlIjoic3RyaW5nIn0sInBhdHRlcm5SZWYiOnsiZGVzY3JpcHRpb24iOiJSZWZlcmVuY2UgdG8gYSBuYW1lZCBzZXQgb2YgcGF0dGVybiBleHByZXNzaW9ucyIsInR5cGUiOiJzdHJpbmcifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJQYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5BdXRob3Jpbm8gY3VzdG9tIEpTT04gcGF0aCBtb2RpZmllcnMgYXJlIGFsc28gc3VwcG9ydGVkLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJUaGUgdmFsdWUgb2YgcmVmZXJlbmNlIGZvciB0aGUgY29tcGFyaXNvbiB3aXRoIHRoZSBjb250ZW50IGZldGNoZWQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OLlxuSWYgdXNlZCB3aXRoIHRoZSBcIm1hdGNoZXNcIiBvcGVyYXRvciwgdGhlIHZhbHVlIG11c3QgY29tcGlsZSB0byBhIHZhbGlkIEdvbGFuZyByZWdleC4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsiaHR0cCJdLCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiQ2FsbGJhY2sgZnVuY3Rpb25zLlxuQXV0aG9yaW5vIHNlbmRzIGNhbGxiYWNrcyBhdCB0aGUgZW5kIG9mIHRoZSBhdXRoIHBpcGVsaW5lIHRvIHRoZSBlbmRwb2ludHMgc3BlY2lmaWVkIGluIHRoaXMgY29uZmlnLiIsInR5cGUiOiJvYmplY3QifSwiaG9zdHMiOnsiZGVzY3JpcHRpb24iOiJUaGUgbGlzdCBvZiBwdWJsaWMgaG9zdCBuYW1lcyBvZiB0aGUgc2VydmljZXMgcHJvdGVjdGVkIGJ5IHRoaXMgYXV0aGVudGljYXRpb24vYXV0aG9yaXphdGlvbiBzY2hlbWUuXG5BdXRob3Jpbm8gdXNlcyB0aGUgcmVxdWVzdGVkIGhvc3QgdG8gbG9va3VwIGZvciB0aGUgY29ycmVzcG9uZGluZyBhdXRoZW50aWNhdGlvbi9hdXRob3JpemF0aW9uIGNvbmZpZ3MgdG8gZW5mb3JjZS4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJtZXRhZGF0YSI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJvbmVPZiI6W3sicHJvcGVydGllcyI6eyJ1c2VySW5mbyI6e319LCJyZXF1aXJlZCI6WyJ1c2VySW5mbyJdfSx7InByb3BlcnRpZXMiOnsidW1hIjp7fX0sInJlcXVpcmVkIjpbInVtYSJdfSx7InByb3BlcnRpZXMiOnsiaHR0cCI6e319LCJyZXF1aXJlZCI6WyJodHRwIl19XSwicHJvcGVydGllcyI6eyJjYWNoZSI6eyJkZXNjcmlwdGlvbiI6IkNhY2hpbmcgb3B0aW9ucyBmb3IgdGhlIHJlc29sdmVkIG9iamVjdCByZXR1cm5lZCB3aGVuIGFwcGx5aW5nIHRoaXMgY29uZmlnLlxuT21pdCBpdCB0byBhdm9pZCBjYWNoaW5nIG9iamVjdHMgZm9yIHRoaXMgY29uZmlnLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiS2V5IHVzZWQgdG8gc3RvcmUgdGhlIGVudHJ5IGluIHRoZSBjYWNoZS5cblRoZSByZXNvbHZlZCBrZXkgbXVzdCBiZSB1bmlxdWUgd2l0aGluIHRoZSBzY29wZSBvZiB0aGlzIHBhcnRpY3VsYXIgY29uZmlnLiIsInByb3BlcnRpZXMiOnsic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifSwidHRsIjp7ImRlZmF1bHQiOjYwLCJkZXNjcmlwdGlvbiI6IkR1cmF0aW9uIChpbiBzZWNvbmRzKSBvZiB0aGUgZXh0ZXJuYWwgZGF0YSBpbiB0aGUgY2FjaGUgYmVmb3JlIHB1bGxlZCBhZ2FpbiBmcm9tIHRoZSBzb3VyY2UuIiwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbImtleSJdLCJ0eXBlIjoib2JqZWN0In0sImh0dHAiOnsiZGVzY3JpcHRpb24iOiJFeHRlcm5hbCBzb3VyY2Ugb2YgYXV0aCBtZXRhZGF0YSB2aWEgSFRUUCByZXF1ZXN0IiwicHJvcGVydGllcyI6eyJib2R5Ijp7ImRlc2NyaXB0aW9uIjoiUmF3IGJvZHkgb2YgdGhlIEhUVFAgcmVxdWVzdC5cblN1cGVyc2VkZXMgJ2JvZHlQYXJhbWV0ZXJzJzsgdXNlIGVpdGhlciBvbmUgb3IgdGhlIG90aGVyLlxuVXNlIGl0IHdpdGggbWV0aG9kPVBPU1Q7IGZvciBHRVQgcmVxdWVzdHMsIHNldCBwYXJhbWV0ZXJzIGFzIHF1ZXJ5IHN0cmluZyBpbiB0aGUgJ2VuZHBvaW50JyAocGxhY2Vob2xkZXJzIGNhbiBiZSB1c2VkKS4iLCJwcm9wZXJ0aWVzIjp7InNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sImJvZHlQYXJhbWV0ZXJzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InByb3BlcnRpZXMiOnsic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifSwiZGVzY3JpcHRpb24iOiJDdXN0b20gcGFyYW1ldGVycyB0byBlbmNvZGUgaW4gdGhlIGJvZHkgb2YgdGhlIEhUVFAgcmVxdWVzdC5cblN1cGVyc2VkZWQgYnkgJ2JvZHknOyB1c2UgZWl0aGVyIG9uZSBvciB0aGUgb3RoZXIuXG5Vc2UgaXQgd2l0aCBtZXRob2Q9UE9TVDsgZm9yIEdFVCByZXF1ZXN0cywgc2V0IHBhcmFtZXRlcnMgYXMgcXVlcnkgc3RyaW5nIGluIHRoZSAnZW5kcG9pbnQnIChwbGFjZWhvbGRlcnMgY2FuIGJlIHVzZWQpLiIsInR5cGUiOiJvYmplY3QifSwiY29udGVudFR5cGUiOnsiZGVmYXVsdCI6ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIsImRlc2NyaXB0aW9uIjoiQ29udGVudC1UeXBlIG9mIHRoZSByZXF1ZXN0IGJvZHkuIFNoYXBlcyBob3cgJ2JvZHlQYXJhbWV0ZXJzJyBhcmUgZW5jb2RlZC5cblVzZSBpdCB3aXRoIG1ldGhvZD1QT1NUOyBmb3IgR0VUIHJlcXVlc3RzLCBDb250ZW50LVR5cGUgaXMgYXV0b21hdGljYWxseSBzZXQgdG8gJ3RleHQvcGxhaW4nLiIsImVudW0iOlsiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIiwiYXBwbGljYXRpb24vanNvbiJdLCJ0eXBlIjoic3RyaW5nIn0sImNyZWRlbnRpYWxzIjp7ImRlc2NyaXB0aW9uIjoiRGVmaW5lcyB3aGVyZSBjbGllbnQgY3JlZGVudGlhbHMgd2lsbCBiZSBwYXNzZWQgaW4gdGhlIHJlcXVlc3QgdG8gdGhlIHNlcnZpY2UuXG5JZiBvbWl0dGVkLCBpdCBkZWZhdWx0cyB0byBjbGllbnQgY3JlZGVudGlhbHMgcGFzc2VkIGluIHRoZSBIVFRQIEF1dGhvcml6YXRpb24gaGVhZGVyIGFuZCB0aGUgXCJCZWFyZXJcIiBwcmVmaXggZXhwZWN0ZWQgcHJlcGVuZGVkIHRvIHRoZSBzZWNyZXQgdmFsdWUuIiwicHJvcGVydGllcyI6eyJhdXRob3JpemF0aW9uSGVhZGVyIjp7InByb3BlcnRpZXMiOnsicHJlZml4Ijp7InR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiY29va2llIjp7InByb3BlcnRpZXMiOnsibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwiY3VzdG9tSGVhZGVyIjp7InByb3BlcnRpZXMiOnsibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwicXVlcnlTdHJpbmciOnsicHJvcGVydGllcyI6eyJuYW1lIjp7InR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJoZWFkZXJzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InByb3BlcnRpZXMiOnsic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifSwiZGVzY3JpcHRpb24iOiJDdXN0b20gaGVhZGVycyBpbiB0aGUgSFRUUCByZXF1ZXN0LiIsInR5cGUiOiJvYmplY3QifSwibWV0aG9kIjp7ImRlZmF1bHQiOiJHRVQiLCJkZXNjcmlwdGlvbiI6IkhUVFAgdmVyYiB1c2VkIGluIHRoZSByZXF1ZXN0IHRvIHRoZSBzZXJ2aWNlLiBBY2NlcHRlZCB2YWx1ZXM6IEdFVCAoZGVmYXVsdCksIFBPU1QuXG5XaGVuIHRoZSByZXF1ZXN0IG1ldGhvZCBpcyBQT1NULCB0aGUgYXV0aG9yaXphdGlvbiBKU09OIGlzIHBhc3NlZCBpbiB0aGUgYm9keSBvZiB0aGUgcmVxdWVzdC4iLCJlbnVtIjpbIkdFVCIsIlBPU1QiLCJQVVQiLCJQQVRDSCIsIkRFTEVURSIsIkhFQUQiLCJPUFRJT05TIiwiQ09OTkVDVCIsIlRSQUNFIl0sInR5cGUiOiJzdHJpbmcifSwib2F1dGgyIjp7ImRlc2NyaXB0aW9uIjoiQXV0aGVudGljYXRpb24gd2l0aCB0aGUgSFRUUCBzZXJ2aWNlIGJ5IE9BdXRoMiBDbGllbnQgQ3JlZGVudGlhbHMgZ3JhbnQuIiwicHJvcGVydGllcyI6eyJjYWNoZSI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6IkNhY2hlcyBhbmQgcmV1c2VzIHRoZSB0b2tlbiB1bnRpbCBleHBpcmVkLlxuU2V0IGl0IHRvIGZhbHNlIHRvIGZvcmNlIGZldGNoIHRoZSB0b2tlbiBhdCBldmVyeSBhdXRob3JpemF0aW9uIHJlcXVlc3QgcmVnYXJkbGVzcyBvZiBleHBpcmF0aW9uLiIsInR5cGUiOiJib29sZWFuIn0sImNsaWVudElkIjp7ImRlc2NyaXB0aW9uIjoiT0F1dGgyIENsaWVudCBJRC4iLCJ0eXBlIjoic3RyaW5nIn0sImNsaWVudFNlY3JldFJlZiI6eyJkZXNjcmlwdGlvbiI6IlJlZmVyZW5jZSB0byBhIEt1YmVyZW50ZXMgU2VjcmV0IGtleSB0aGF0IHN0b3JlcyB0aGF0IE9BdXRoMiBDbGllbnQgU2VjcmV0LiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGtleSBvZiB0aGUgc2VjcmV0IHRvIHNlbGVjdCBmcm9tLiAgTXVzdCBiZSBhIHZhbGlkIHNlY3JldCBrZXkuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiVGhlIG5hbWUgb2YgdGhlIHNlY3JldCBpbiB0aGUgQXV0aG9yaW5vJ3MgbmFtZXNwYWNlIHRvIHNlbGVjdCBmcm9tLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImtleSIsIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJleHRyYVBhcmFtcyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiT3B0aW9uYWwgZXh0cmEgcGFyYW1ldGVycyBmb3IgdGhlIHJlcXVlc3RzIHRvIHRoZSB0b2tlbiBVUkwuIiwidHlwZSI6Im9iamVjdCJ9LCJzY29wZXMiOnsiZGVzY3JpcHRpb24iOiJPcHRpb25hbCBzY29wZXMgZm9yIHRoZSBjbGllbnQgY3JlZGVudGlhbHMgZ3JhbnQsIGlmIHN1cHBvcnRlZCBieSBoZSBPQXV0aDIgc2VydmVyLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sInRva2VuVXJsIjp7ImRlc2NyaXB0aW9uIjoiVG9rZW4gZW5kcG9pbnQgVVJMIG9mIHRoZSBPQXV0aDIgcmVzb3VyY2Ugc2VydmVyLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImNsaWVudElkIiwiY2xpZW50U2VjcmV0UmVmIiwidG9rZW5VcmwiXSwidHlwZSI6Im9iamVjdCJ9LCJzaGFyZWRTZWNyZXRSZWYiOnsiZGVzY3JpcHRpb24iOiJSZWZlcmVuY2UgdG8gYSBTZWNyZXQga2V5IHdob3NlIHZhbHVlIHdpbGwgYmUgcGFzc2VkIGJ5IEF1dGhvcmlubyBpbiB0aGUgcmVxdWVzdC5cblRoZSBIVFRQIHNlcnZpY2UgY2FuIHVzZSB0aGUgc2hhcmVkIHNlY3JldCB0byBhdXRoZW50aWNhdGUgdGhlIG9yaWdpbiBvZiB0aGUgcmVxdWVzdC5cbklnbm9yZWQgaWYgdXNlZCB0b2dldGhlciB3aXRoIG9hdXRoMi4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBrZXkgb2YgdGhlIHNlY3JldCB0byBzZWxlY3QgZnJvbS4gIE11c3QgYmUgYSB2YWxpZCBzZWNyZXQga2V5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBuYW1lIG9mIHRoZSBzZWNyZXQgaW4gdGhlIEF1dGhvcmlubydzIG5hbWVzcGFjZSB0byBzZWxlY3QgZnJvbS4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidXJsIjp7ImRlc2NyaXB0aW9uIjoiRW5kcG9pbnQgVVJMIG9mIHRoZSBIVFRQIHNlcnZpY2UuXG5UaGUgdmFsdWUgY2FuIGluY2x1ZGUgdmFyaWFibGUgcGxhY2Vob2xkZXJzIGluIHRoZSBmb3JtYXQgXCJ7c2VsZWN0b3J9XCIsIHdoZXJlIFwic2VsZWN0b3JcIiBpcyBhbnkgcGF0dGVybiBzdXBwb3J0ZWRcbmJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gYW5kIHNlbGVjdHMgdmFsdWUgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OLlxuRS5nLiBodHRwczovL2V4dC1hdXRoLXNlcnZlci5pby9tZXRhZGF0YT9wPXtyZXF1ZXN0LnBhdGh9IiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsidXJsIl0sInR5cGUiOiJvYmplY3QifSwibWV0cmljcyI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJXaGV0aGVyIHRoaXMgY29uZmlnIHNob3VsZCBnZW5lcmF0ZSBpbmRpdmlkdWFsIG9ic2VydmFiaWxpdHkgbWV0cmljcyIsInR5cGUiOiJib29sZWFuIn0sInByaW9yaXR5Ijp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiUHJpb3JpdHkgZ3JvdXAgb2YgdGhlIGNvbmZpZy5cbkFsbCBjb25maWdzIGluIHRoZSBzYW1lIHByaW9yaXR5IGdyb3VwIGFyZSBldmFsdWF0ZWQgY29uY3VycmVudGx5OyBjb25zZWN1dGl2ZSBwcmlvcml0eSBncm91cHMgYXJlIGV2YWx1YXRlZCBzZXF1ZW50aWFsbHkuIiwidHlwZSI6ImludGVnZXIifSwidW1hIjp7ImRlc2NyaXB0aW9uIjoiVXNlci1NYW5hZ2VkIEFjY2VzcyAoVU1BKSBzb3VyY2Ugb2YgcmVzb3VyY2UgZGF0YS4iLCJwcm9wZXJ0aWVzIjp7ImNyZWRlbnRpYWxzUmVmIjp7ImRlc2NyaXB0aW9uIjoiUmVmZXJlbmNlIHRvIGEgS3ViZXJuZXRlcyBzZWNyZXQgaW4gdGhlIHNhbWUgbmFtZXNwYWNlLCB0aGF0IHN0b3JlcyBjbGllbnQgY3JlZGVudGlhbHMgdG8gdGhlIHJlc291cmNlIHJlZ2lzdHJhdGlvbiBBUEkgb2YgdGhlIFVNQSBzZXJ2ZXIuIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbnQuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL292ZXJ2aWV3L3dvcmtpbmctd2l0aC1vYmplY3RzL25hbWVzLyNuYW1lc1xuVE9ETzogQWRkIG90aGVyIHVzZWZ1bCBmaWVsZHMuIGFwaVZlcnNpb24sIGtpbmQsIHVpZD8iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sImVuZHBvaW50Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGVuZHBvaW50IG9mIHRoZSBVTUEgc2VydmVyLlxuVGhlIHZhbHVlIG11c3QgY29pbmNpZGUgd2l0aCB0aGUgXCJpc3N1ZXJcIiBjbGFpbSBvZiB0aGUgVU1BIGNvbmZpZyBkaXNjb3ZlcmVkIGZyb20gdGhlIHdlbGwta25vd24gdW1hIGNvbmZpZ3VyYXRpb24gZW5kcG9pbnQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiY3JlZGVudGlhbHNSZWYiLCJlbmRwb2ludCJdLCJ0eXBlIjoib2JqZWN0In0sInVzZXJJbmZvIjp7ImRlc2NyaXB0aW9uIjoiT3BlbmRJRCBDb25uZWN0IFVzZXJJbmZvIGxpbmtlZCB0byBhbiBPSURDIGF1dGhlbnRpY2F0aW9uIGNvbmZpZyBzcGVjaWZpZWQgaW4gdGhpcyBzYW1lIEF1dGhDb25maWcuIiwicHJvcGVydGllcyI6eyJpZGVudGl0eVNvdXJjZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBuYW1lIG9mIGFuIE9JREMtZW5hYmxlZCBKV1QgYXV0aGVudGljYXRpb24gY29uZmlnIHdob3NlIE9wZW5JRCBDb25uZWN0IGNvbmZpZ3VyYXRpb24gZGlzY292ZXJlZCBpbmNsdWRlcyB0aGUgT0lEQyBcInVzZXJpbmZvX2VuZHBvaW50XCIgY2xhaW0uIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaWRlbnRpdHlTb3VyY2UiXSwidHlwZSI6Im9iamVjdCJ9LCJ3aGVuIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9ucyBmb3IgQXV0aG9yaW5vIHRvIGVuZm9yY2UgdGhpcyBjb25maWcuXG5JZiBvbWl0dGVkLCB0aGUgY29uZmlnIHdpbGwgYmUgZW5mb3JjZWQgZm9yIGFsbCByZXF1ZXN0cy5cbklmIHByZXNlbnQsIGFsbCBjb25kaXRpb25zIG11c3QgbWF0Y2ggZm9yIHRoZSBjb25maWcgdG8gYmUgZW5mb3JjZWQ7IG90aGVyd2lzZSwgdGhlIGNvbmZpZyB3aWxsIGJlIHNraXBwZWQuIiwiaXRlbXMiOnsib25lT2YiOlt7InByb3BlcnRpZXMiOnsicGF0dGVyblJlZiI6e319LCJyZXF1aXJlZCI6WyJwYXR0ZXJuUmVmIl19LHsicHJvcGVydGllcyI6eyJvcGVyYXRvciI6e30sInNlbGVjdG9yIjp7fSwidmFsdWUiOnt9fSwicmVxdWlyZWQiOlsib3BlcmF0b3IiLCJzZWxlY3RvciJdfSx7InByb3BlcnRpZXMiOnsiYWxsIjp7fX0sInJlcXVpcmVkIjpbImFsbCJdfSx7InByb3BlcnRpZXMiOnsiYW55Ijp7fX0sInJlcXVpcmVkIjpbImFueSJdfV0sInByb3BlcnRpZXMiOnsiYWxsIjp7ImRlc2NyaXB0aW9uIjoiQSBsaXN0IG9mIHBhdHRlcm4gZXhwcmVzc2lvbnMgdG8gYmUgZXZhbHVhdGVkIGFzIGEgbG9naWNhbCBBTkQuIiwiaXRlbXMiOnsidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sInR5cGUiOiJhcnJheSJ9LCJhbnkiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2YgcGF0dGVybiBleHByZXNzaW9ucyB0byBiZSBldmFsdWF0ZWQgYXMgYSBsb2dpY2FsIE9SLiIsIml0ZW1zIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJ0eXBlIjoiYXJyYXkifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJUaGUgYmluYXJ5IG9wZXJhdG9yIHRvIGJlIGFwcGxpZWQgdG8gdGhlIGNvbnRlbnQgZmV0Y2hlZCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04sIGZvciBjb21wYXJpc29uIHdpdGggXCJ2YWx1ZVwiLlxuUG9zc2libGUgdmFsdWVzIGFyZTogXCJlcVwiIChlcXVhbCB0byksIFwibmVxXCIgKG5vdCBlcXVhbCB0byksIFwiaW5jbFwiIChpbmNsdWRlczsgZm9yIGFycmF5cyksIFwiZXhjbFwiIChleGNsdWRlczsgZm9yIGFycmF5cyksIFwibWF0Y2hlc1wiIChyZWdleCkiLCJlbnVtIjpbImVxIiwibmVxIiwiaW5jbCIsImV4Y2wiLCJtYXRjaGVzIl0sInR5cGUiOiJzdHJpbmcifSwicGF0dGVyblJlZiI6eyJkZXNjcmlwdGlvbiI6IlJlZmVyZW5jZSB0byBhIG5hbWVkIHNldCBvZiBwYXR0ZXJuIGV4cHJlc3Npb25zIiwidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cbkF1dGhvcmlubyBjdXN0b20gSlNPTiBwYXRoIG1vZGlmaWVycyBhcmUgYWxzbyBzdXBwb3J0ZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSB2YWx1ZSBvZiByZWZlcmVuY2UgZm9yIHRoZSBjb21wYXJpc29uIHdpdGggdGhlIGNvbnRlbnQgZmV0Y2hlZCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04uXG5JZiB1c2VkIHdpdGggdGhlIFwibWF0Y2hlc1wiIG9wZXJhdG9yLCB0aGUgdmFsdWUgbXVzdCBjb21waWxlIHRvIGEgdmFsaWQgR29sYW5nIHJlZ2V4LiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiTWV0YWRhdGEgc291cmNlcy5cbkF1dGhvcmlubyBmZXRjaGVzIGF1dGggbWV0YWRhdGEgYXMgSlNPTiBmcm9tIHNvdXJjZXMgc3BlY2lmaWVkIGluIHRoaXMgY29uZmlnLiIsInR5cGUiOiJvYmplY3QifSwicGF0dGVybnMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiaXRlbXMiOnsicHJvcGVydGllcyI6eyJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6IlRoZSBiaW5hcnkgb3BlcmF0b3IgdG8gYmUgYXBwbGllZCB0byB0aGUgY29udGVudCBmZXRjaGVkIGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiwgZm9yIGNvbXBhcmlzb24gd2l0aCBcInZhbHVlXCIuXG5Qb3NzaWJsZSB2YWx1ZXMgYXJlOiBcImVxXCIgKGVxdWFsIHRvKSwgXCJuZXFcIiAobm90IGVxdWFsIHRvKSwgXCJpbmNsXCIgKGluY2x1ZGVzOyBmb3IgYXJyYXlzKSwgXCJleGNsXCIgKGV4Y2x1ZGVzOyBmb3IgYXJyYXlzKSwgXCJtYXRjaGVzXCIgKHJlZ2V4KSIsImVudW0iOlsiZXEiLCJuZXEiLCJpbmNsIiwiZXhjbCIsIm1hdGNoZXMiXSwidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cbkF1dGhvcmlubyBjdXN0b20gSlNPTiBwYXRoIG1vZGlmaWVycyBhcmUgYWxzbyBzdXBwb3J0ZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSB2YWx1ZSBvZiByZWZlcmVuY2UgZm9yIHRoZSBjb21wYXJpc29uIHdpdGggdGhlIGNvbnRlbnQgZmV0Y2hlZCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04uXG5JZiB1c2VkIHdpdGggdGhlIFwibWF0Y2hlc1wiIG9wZXJhdG9yLCB0aGUgdmFsdWUgbXVzdCBjb21waWxlIHRvIGEgdmFsaWQgR29sYW5nIHJlZ2V4LiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sImRlc2NyaXB0aW9uIjoiTmFtZWQgc2V0cyBvZiBwYXR0ZXJucyB0aGF0IGNhbiBiZSByZWZlcnJlZCBpbiBgd2hlbmAgY29uZGl0aW9ucyBhbmQgaW4gcGF0dGVybi1tYXRjaGluZyBhdXRob3JpemF0aW9uIHBvbGljeSBydWxlcy4iLCJ0eXBlIjoib2JqZWN0In0sInJlc3BvbnNlIjp7ImRlc2NyaXB0aW9uIjoiUmVzcG9uc2UgaXRlbXMuXG5BdXRob3Jpbm8gYnVpbGRzIGN1c3RvbSByZXNwb25zZXMgdG8gdGhlIGNsaWVudCBvZiB0aGUgYXV0aCByZXF1ZXN0LiIsInByb3BlcnRpZXMiOnsic3VjY2VzcyI6eyJkZXNjcmlwdGlvbiI6IlJlc3BvbnNlIGl0ZW1zIHRvIGJlIGluY2x1ZGVkIGluIHRoZSBhdXRoIHJlc3BvbnNlIHdoZW4gdGhlIHJlcXVlc3QgaXMgYXV0aGVudGljYXRlZCBhbmQgYXV0aG9yaXplZC5cbkZvciBpbnRlZ3JhdGlvbiBvZiBBdXRob3Jpbm8gdmlhIHByb3h5LCB0aGUgcHJveHkgbXVzdCB1c2UgdGhlc2Ugc2V0dGluZ3MgdG8gcHJvcGFnYXRlIGR5bmFtaWMgbWV0YWRhdGEgYW5kL29yIGluamVjdCBkYXRhIGluIHRoZSByZXF1ZXN0LiIsInByb3BlcnRpZXMiOnsiZHluYW1pY01ldGFkYXRhIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImRlc2NyaXB0aW9uIjoiU2V0dGluZ3Mgb2YgdGhlIHN1Y2Nlc3MgY3VzdG9tIHJlc3BvbnNlIGl0ZW0uIiwib25lT2YiOlt7InByb3BlcnRpZXMiOnsid3Jpc3RiYW5kIjp7fX0sInJlcXVpcmVkIjpbIndyaXN0YmFuZCJdfSx7InByb3BlcnRpZXMiOnsianNvbiI6e319LCJyZXF1aXJlZCI6WyJqc29uIl19LHsicHJvcGVydGllcyI6eyJwbGFpbiI6e319LCJyZXF1aXJlZCI6WyJwbGFpbiJdfV0sInByb3BlcnRpZXMiOnsiY2FjaGUiOnsiZGVzY3JpcHRpb24iOiJDYWNoaW5nIG9wdGlvbnMgZm9yIHRoZSByZXNvbHZlZCBvYmplY3QgcmV0dXJuZWQgd2hlbiBhcHBseWluZyB0aGlzIGNvbmZpZy5cbk9taXQgaXQgdG8gYXZvaWQgY2FjaGluZyBvYmplY3RzIGZvciB0aGlzIGNvbmZpZy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IktleSB1c2VkIHRvIHN0b3JlIHRoZSBlbnRyeSBpbiB0aGUgY2FjaGUuXG5UaGUgcmVzb2x2ZWQga2V5IG11c3QgYmUgdW5pcXVlIHdpdGhpbiB0aGUgc2NvcGUgb2YgdGhpcyBwYXJ0aWN1bGFyIGNvbmZpZy4iLCJwcm9wZXJ0aWVzIjp7InNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sInR0bCI6eyJkZWZhdWx0Ijo2MCwiZGVzY3JpcHRpb24iOiJEdXJhdGlvbiAoaW4gc2Vjb25kcykgb2YgdGhlIGV4dGVybmFsIGRhdGEgaW4gdGhlIGNhY2hlIGJlZm9yZSBwdWxsZWQgYWdhaW4gZnJvbSB0aGUgc291cmNlLiIsInR5cGUiOiJpbnRlZ2VyIn19LCJyZXF1aXJlZCI6WyJrZXkiXSwidHlwZSI6Im9iamVjdCJ9LCJqc29uIjp7ImRlc2NyaXB0aW9uIjoiSlNPTiBvYmplY3RcblNwZWNpZnkgaXQgYXMgdGhlIGxpc3Qgb2YgcHJvcGVydGllcyBvZiB0aGUgb2JqZWN0LCB3aG9zZSB2YWx1ZXMgY2FuIGNvbWJpbmUgc3RhdGljIHZhbHVlcyBhbmQgdmFsdWVzIHNlbGVjdGVkIGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTi4iLCJwcm9wZXJ0aWVzIjp7InByb3BlcnRpZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsicHJvcGVydGllcyI6eyJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlNpbXBsZSBwYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpIG9yIGEgc3RyaW5nIHRlbXBsYXRlIHdpdGggdmFyaWFibGVzIHRoYXQgcmVzb2x2ZSB0byBwYXR0ZXJucyAoZS5nLiBcIkhlbGxvLCB7YXV0aC5pZGVudGl0eS5uYW1lfSFcIikuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cblRoZSBmb2xsb3dpbmcgQXV0aG9yaW5vIGN1c3RvbSBtb2RpZmllcnMgYXJlIHN1cHBvcnRlZDogQGV4dHJhY3Q6e3NlcDpcIiBcIixwb3M6MH0sIEByZXBsYWNle29sZDpcIlwiLG5ldzpcIlwifSwgQGNhc2U6dXBwZXJ8bG93ZXIsIEBiYXNlNjQ6ZW5jb2RlfGRlY29kZSBhbmQgQHN0cmlwLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJTdGF0aWMgdmFsdWUiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJwcm9wZXJ0aWVzIl0sInR5cGUiOiJvYmplY3QifSwia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGtleSB1c2VkIHRvIGFkZCB0aGUgY3VzdG9tIHJlc3BvbnNlIGl0ZW0gKG5hbWUgb2YgdGhlIEhUVFAgaGVhZGVyIG9yIHJvb3QgcHJvcGVydHkgb2YgdGhlIER5bmFtaWMgTWV0YWRhdGEgb2JqZWN0KS5cbklmIG9taXR0ZWQsIGl0IHdpbGwgYmUgc2V0IHRvIHRoZSBuYW1lIG9mIHRoZSByZXNwb25zZSBjb25maWcuIiwidHlwZSI6InN0cmluZyJ9LCJtZXRyaWNzIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IldoZXRoZXIgdGhpcyBjb25maWcgc2hvdWxkIGdlbmVyYXRlIGluZGl2aWR1YWwgb2JzZXJ2YWJpbGl0eSBtZXRyaWNzIiwidHlwZSI6ImJvb2xlYW4ifSwicGxhaW4iOnsiZGVzY3JpcHRpb24iOiJQbGFpbiB0ZXh0IGNvbnRlbnQiLCJwcm9wZXJ0aWVzIjp7InNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sInByaW9yaXR5Ijp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiUHJpb3JpdHkgZ3JvdXAgb2YgdGhlIGNvbmZpZy5cbkFsbCBjb25maWdzIGluIHRoZSBzYW1lIHByaW9yaXR5IGdyb3VwIGFyZSBldmFsdWF0ZWQgY29uY3VycmVudGx5OyBjb25zZWN1dGl2ZSBwcmlvcml0eSBncm91cHMgYXJlIGV2YWx1YXRlZCBzZXF1ZW50aWFsbHkuIiwidHlwZSI6ImludGVnZXIifSwid2hlbiI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbnMgZm9yIEF1dGhvcmlubyB0byBlbmZvcmNlIHRoaXMgY29uZmlnLlxuSWYgb21pdHRlZCwgdGhlIGNvbmZpZyB3aWxsIGJlIGVuZm9yY2VkIGZvciBhbGwgcmVxdWVzdHMuXG5JZiBwcmVzZW50LCBhbGwgY29uZGl0aW9ucyBtdXN0IG1hdGNoIGZvciB0aGUgY29uZmlnIHRvIGJlIGVuZm9yY2VkOyBvdGhlcndpc2UsIHRoZSBjb25maWcgd2lsbCBiZSBza2lwcGVkLiIsIml0ZW1zIjp7Im9uZU9mIjpbeyJwcm9wZXJ0aWVzIjp7InBhdHRlcm5SZWYiOnt9fSwicmVxdWlyZWQiOlsicGF0dGVyblJlZiJdfSx7InByb3BlcnRpZXMiOnsib3BlcmF0b3IiOnt9LCJzZWxlY3RvciI6e30sInZhbHVlIjp7fX0sInJlcXVpcmVkIjpbIm9wZXJhdG9yIiwic2VsZWN0b3IiXX0seyJwcm9wZXJ0aWVzIjp7ImFsbCI6e319LCJyZXF1aXJlZCI6WyJhbGwiXX0seyJwcm9wZXJ0aWVzIjp7ImFueSI6e319LCJyZXF1aXJlZCI6WyJhbnkiXX1dLCJwcm9wZXJ0aWVzIjp7ImFsbCI6eyJkZXNjcmlwdGlvbiI6IkEgbGlzdCBvZiBwYXR0ZXJuIGV4cHJlc3Npb25zIHRvIGJlIGV2YWx1YXRlZCBhcyBhIGxvZ2ljYWwgQU5ELiIsIml0ZW1zIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJ0eXBlIjoiYXJyYXkifSwiYW55Ijp7ImRlc2NyaXB0aW9uIjoiQSBsaXN0IG9mIHBhdHRlcm4gZXhwcmVzc2lvbnMgdG8gYmUgZXZhbHVhdGVkIGFzIGEgbG9naWNhbCBPUi4iLCJpdGVtcyI6eyJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfSwidHlwZSI6ImFycmF5In0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGJpbmFyeSBvcGVyYXRvciB0byBiZSBhcHBsaWVkIHRvIHRoZSBjb250ZW50IGZldGNoZWQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OLCBmb3IgY29tcGFyaXNvbiB3aXRoIFwidmFsdWVcIi5cblBvc3NpYmxlIHZhbHVlcyBhcmU6IFwiZXFcIiAoZXF1YWwgdG8pLCBcIm5lcVwiIChub3QgZXF1YWwgdG8pLCBcImluY2xcIiAoaW5jbHVkZXM7IGZvciBhcnJheXMpLCBcImV4Y2xcIiAoZXhjbHVkZXM7IGZvciBhcnJheXMpLCBcIm1hdGNoZXNcIiAocmVnZXgpIiwiZW51bSI6WyJlcSIsIm5lcSIsImluY2wiLCJleGNsIiwibWF0Y2hlcyJdLCJ0eXBlIjoic3RyaW5nIn0sInBhdHRlcm5SZWYiOnsiZGVzY3JpcHRpb24iOiJSZWZlcmVuY2UgdG8gYSBuYW1lZCBzZXQgb2YgcGF0dGVybiBleHByZXNzaW9ucyIsInR5cGUiOiJzdHJpbmcifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJQYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5BdXRob3Jpbm8gY3VzdG9tIEpTT04gcGF0aCBtb2RpZmllcnMgYXJlIGFsc28gc3VwcG9ydGVkLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJUaGUgdmFsdWUgb2YgcmVmZXJlbmNlIGZvciB0aGUgY29tcGFyaXNvbiB3aXRoIHRoZSBjb250ZW50IGZldGNoZWQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OLlxuSWYgdXNlZCB3aXRoIHRoZSBcIm1hdGNoZXNcIiBvcGVyYXRvciwgdGhlIHZhbHVlIG11c3QgY29tcGlsZSB0byBhIHZhbGlkIEdvbGFuZyByZWdleC4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJ3cmlzdGJhbmQiOnsiZGVzY3JpcHRpb24iOiJBdXRob3Jpbm8gRmVzdGl2YWwgV3Jpc3RiYW5kIHRva2VuIiwicHJvcGVydGllcyI6eyJjdXN0b21DbGFpbXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsicHJvcGVydGllcyI6eyJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlNpbXBsZSBwYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpIG9yIGEgc3RyaW5nIHRlbXBsYXRlIHdpdGggdmFyaWFibGVzIHRoYXQgcmVzb2x2ZSB0byBwYXR0ZXJucyAoZS5nLiBcIkhlbGxvLCB7YXV0aC5pZGVudGl0eS5uYW1lfSFcIikuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cblRoZSBmb2xsb3dpbmcgQXV0aG9yaW5vIGN1c3RvbSBtb2RpZmllcnMgYXJlIHN1cHBvcnRlZDogQGV4dHJhY3Q6e3NlcDpcIiBcIixwb3M6MH0sIEByZXBsYWNle29sZDpcIlwiLG5ldzpcIlwifSwgQGNhc2U6dXBwZXJ8bG93ZXIsIEBiYXNlNjQ6ZW5jb2RlfGRlY29kZSBhbmQgQHN0cmlwLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJTdGF0aWMgdmFsdWUiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9LCJkZXNjcmlwdGlvbiI6IkFueSBjbGFpbXMgdG8gYmUgYWRkZWQgdG8gdGhlIHdyaXN0YmFuZCB0b2tlbiBhcGFydCBmcm9tIHRoZSBzdGFuZGFyZCBKV1QgY2xhaW1zIChpc3MsIGlhdCwgZXhwKSBhZGRlZCBieSBkZWZhdWx0LiIsInR5cGUiOiJvYmplY3QifSwiaXNzdWVyIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGVuZHBvaW50IHRvIHRoZSBBdXRob3Jpbm8gc2VydmljZSB0aGF0IGlzc3VlcyB0aGUgd3Jpc3RiYW5kIChmb3JtYXQ6IFx1MDAzY3NjaGVtZVx1MDAzZTovL1x1MDAzY2hvc3RcdTAwM2U6XHUwMDNjcG9ydFx1MDAzZS9cdTAwM2NyZWFsbVx1MDAzZSwgd2hlcmUgXHUwMDNjcmVhbG1cdTAwM2UgPSBcdTAwM2NuYW1lc3BhY2VcdTAwM2UvXHUwMDNjYXV0aG9yaW5vLWF1dGgtY29uZmlnLXJlc291cmNlLW5hbWUvd3Jpc3RiYW5kLWNvbmZpZy1uYW1lKSIsInR5cGUiOiJzdHJpbmcifSwic2lnbmluZ0tleVJlZnMiOnsiZGVzY3JpcHRpb24iOiJSZWZlcmVuY2UgYnkgbmFtZSB0byBLdWJlcm5ldGVzIHNlY3JldHMgYW5kIGNvcnJlc3BvbmRpbmcgc2lnbmluZyBhbGdvcml0aG1zLlxuVGhlIHNlY3JldHMgbXVzdCBjb250YWluIGEgYGtleS5wZW1gIGVudHJ5IHdob3NlIHZhbHVlIGlzIHRoZSBzaWduaW5nIGtleSBmb3JtYXR0ZWQgYXMgUEVNLiIsIml0ZW1zIjp7InByb3BlcnRpZXMiOnsiYWxnb3JpdGhtIjp7ImRlc2NyaXB0aW9uIjoiQWxnb3JpdGhtIHRvIHNpZ24gdGhlIHdyaXN0YmFuZCB0b2tlbiB1c2luZyB0aGUgc2lnbmluZyBrZXkgcHJvdmlkZWQiLCJlbnVtIjpbIkVTMjU2IiwiRVMzODQiLCJFUzUxMiIsIlJTMjU2IiwiUlMzODQiLCJSUzUxMiJdLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBzaWduaW5nIGtleS5cblRoZSB2YWx1ZSBpcyB1c2VkIHRvIHJlZmVyZW5jZSB0aGUgS3ViZXJuZXRlcyBzZWNyZXQgdGhhdCBzdG9yZXMgdGhlIGtleSBhbmQgaW4gdGhlIGBraWRgIGNsYWltIG9mIHRoZSB3cmlzdGJhbmQgdG9rZW4gaGVhZGVyLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImFsZ29yaXRobSIsIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwidG9rZW5EdXJhdGlvbiI6eyJkZXNjcmlwdGlvbiI6IlRpbWUgc3BhbiBvZiB0aGUgd3Jpc3RiYW5kIHRva2VuLCBpbiBzZWNvbmRzLiIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbImlzc3VlciIsInNpZ25pbmdLZXlSZWZzIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwiZGVzY3JpcHRpb24iOiJDdXN0b20gc3VjY2VzcyByZXNwb25zZSBpdGVtcyB3cmFwcGVkIGFzIEhUVFAgaGVhZGVycy5cbkZvciBpbnRlZ3JhdGlvbiBvZiBBdXRob3Jpbm8gdmlhIHByb3h5LCB0aGUgcHJveHkgbXVzdCB1c2UgdGhlc2Ugc2V0dGluZ3MgdG8gcHJvcGFnYXRlIGR5bmFtaWMgbWV0YWRhdGEuXG5TZWUgaHR0cHM6Ly93d3cuZW52b3lwcm94eS5pby9kb2NzL2Vudm95L2xhdGVzdC9jb25maWd1cmF0aW9uL2FkdmFuY2VkL3dlbGxfa25vd25fZHluYW1pY19tZXRhZGF0YSIsInR5cGUiOiJvYmplY3QifSwiaGVhZGVycyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJvbmVPZiI6W3sicHJvcGVydGllcyI6eyJ3cmlzdGJhbmQiOnt9fSwicmVxdWlyZWQiOlsid3Jpc3RiYW5kIl19LHsicHJvcGVydGllcyI6eyJqc29uIjp7fX0sInJlcXVpcmVkIjpbImpzb24iXX0seyJwcm9wZXJ0aWVzIjp7InBsYWluIjp7fX0sInJlcXVpcmVkIjpbInBsYWluIl19XSwicHJvcGVydGllcyI6eyJjYWNoZSI6eyJkZXNjcmlwdGlvbiI6IkNhY2hpbmcgb3B0aW9ucyBmb3IgdGhlIHJlc29sdmVkIG9iamVjdCByZXR1cm5lZCB3aGVuIGFwcGx5aW5nIHRoaXMgY29uZmlnLlxuT21pdCBpdCB0byBhdm9pZCBjYWNoaW5nIG9iamVjdHMgZm9yIHRoaXMgY29uZmlnLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiS2V5IHVzZWQgdG8gc3RvcmUgdGhlIGVudHJ5IGluIHRoZSBjYWNoZS5cblRoZSByZXNvbHZlZCBrZXkgbXVzdCBiZSB1bmlxdWUgd2l0aGluIHRoZSBzY29wZSBvZiB0aGlzIHBhcnRpY3VsYXIgY29uZmlnLiIsInByb3BlcnRpZXMiOnsic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifSwidHRsIjp7ImRlZmF1bHQiOjYwLCJkZXNjcmlwdGlvbiI6IkR1cmF0aW9uIChpbiBzZWNvbmRzKSBvZiB0aGUgZXh0ZXJuYWwgZGF0YSBpbiB0aGUgY2FjaGUgYmVmb3JlIHB1bGxlZCBhZ2FpbiBmcm9tIHRoZSBzb3VyY2UuIiwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbImtleSJdLCJ0eXBlIjoib2JqZWN0In0sImpzb24iOnsiZGVzY3JpcHRpb24iOiJKU09OIG9iamVjdFxuU3BlY2lmeSBpdCBhcyB0aGUgbGlzdCBvZiBwcm9wZXJ0aWVzIG9mIHRoZSBvYmplY3QsIHdob3NlIHZhbHVlcyBjYW4gY29tYmluZSBzdGF0aWMgdmFsdWVzIGFuZCB2YWx1ZXMgc2VsZWN0ZWQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OLiIsInByb3BlcnRpZXMiOnsicHJvcGVydGllcyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJwcm9wZXJ0aWVzIjp7InNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInByb3BlcnRpZXMiXSwidHlwZSI6Im9iamVjdCJ9LCJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUga2V5IHVzZWQgdG8gYWRkIHRoZSBjdXN0b20gcmVzcG9uc2UgaXRlbSAobmFtZSBvZiB0aGUgSFRUUCBoZWFkZXIgb3Igcm9vdCBwcm9wZXJ0eSBvZiB0aGUgRHluYW1pYyBNZXRhZGF0YSBvYmplY3QpLlxuSWYgb21pdHRlZCwgaXQgd2lsbCBiZSBzZXQgdG8gdGhlIG5hbWUgb2YgdGhlIHJlc3BvbnNlIGNvbmZpZy4iLCJ0eXBlIjoic3RyaW5nIn0sIm1ldHJpY3MiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiV2hldGhlciB0aGlzIGNvbmZpZyBzaG91bGQgZ2VuZXJhdGUgaW5kaXZpZHVhbCBvYnNlcnZhYmlsaXR5IG1ldHJpY3MiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJwbGFpbiI6eyJkZXNjcmlwdGlvbiI6IlBsYWluIHRleHQgY29udGVudCIsInByb3BlcnRpZXMiOnsic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifSwicHJpb3JpdHkiOnsiZGVmYXVsdCI6MCwiZGVzY3JpcHRpb24iOiJQcmlvcml0eSBncm91cCBvZiB0aGUgY29uZmlnLlxuQWxsIGNvbmZpZ3MgaW4gdGhlIHNhbWUgcHJpb3JpdHkgZ3JvdXAgYXJlIGV2YWx1YXRlZCBjb25jdXJyZW50bHk7IGNvbnNlY3V0aXZlIHByaW9yaXR5IGdyb3VwcyBhcmUgZXZhbHVhdGVkIHNlcXVlbnRpYWxseS4iLCJ0eXBlIjoiaW50ZWdlciJ9LCJ3aGVuIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9ucyBmb3IgQXV0aG9yaW5vIHRvIGVuZm9yY2UgdGhpcyBjb25maWcuXG5JZiBvbWl0dGVkLCB0aGUgY29uZmlnIHdpbGwgYmUgZW5mb3JjZWQgZm9yIGFsbCByZXF1ZXN0cy5cbklmIHByZXNlbnQsIGFsbCBjb25kaXRpb25zIG11c3QgbWF0Y2ggZm9yIHRoZSBjb25maWcgdG8gYmUgZW5mb3JjZWQ7IG90aGVyd2lzZSwgdGhlIGNvbmZpZyB3aWxsIGJlIHNraXBwZWQuIiwiaXRlbXMiOnsib25lT2YiOlt7InByb3BlcnRpZXMiOnsicGF0dGVyblJlZiI6e319LCJyZXF1aXJlZCI6WyJwYXR0ZXJuUmVmIl19LHsicHJvcGVydGllcyI6eyJvcGVyYXRvciI6e30sInNlbGVjdG9yIjp7fSwidmFsdWUiOnt9fSwicmVxdWlyZWQiOlsib3BlcmF0b3IiLCJzZWxlY3RvciJdfSx7InByb3BlcnRpZXMiOnsiYWxsIjp7fX0sInJlcXVpcmVkIjpbImFsbCJdfSx7InByb3BlcnRpZXMiOnsiYW55Ijp7fX0sInJlcXVpcmVkIjpbImFueSJdfV0sInByb3BlcnRpZXMiOnsiYWxsIjp7ImRlc2NyaXB0aW9uIjoiQSBsaXN0IG9mIHBhdHRlcm4gZXhwcmVzc2lvbnMgdG8gYmUgZXZhbHVhdGVkIGFzIGEgbG9naWNhbCBBTkQuIiwiaXRlbXMiOnsidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sInR5cGUiOiJhcnJheSJ9LCJhbnkiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2YgcGF0dGVybiBleHByZXNzaW9ucyB0byBiZSBldmFsdWF0ZWQgYXMgYSBsb2dpY2FsIE9SLiIsIml0ZW1zIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJ0eXBlIjoiYXJyYXkifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJUaGUgYmluYXJ5IG9wZXJhdG9yIHRvIGJlIGFwcGxpZWQgdG8gdGhlIGNvbnRlbnQgZmV0Y2hlZCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04sIGZvciBjb21wYXJpc29uIHdpdGggXCJ2YWx1ZVwiLlxuUG9zc2libGUgdmFsdWVzIGFyZTogXCJlcVwiIChlcXVhbCB0byksIFwibmVxXCIgKG5vdCBlcXVhbCB0byksIFwiaW5jbFwiIChpbmNsdWRlczsgZm9yIGFycmF5cyksIFwiZXhjbFwiIChleGNsdWRlczsgZm9yIGFycmF5cyksIFwibWF0Y2hlc1wiIChyZWdleCkiLCJlbnVtIjpbImVxIiwibmVxIiwiaW5jbCIsImV4Y2wiLCJtYXRjaGVzIl0sInR5cGUiOiJzdHJpbmcifSwicGF0dGVyblJlZiI6eyJkZXNjcmlwdGlvbiI6IlJlZmVyZW5jZSB0byBhIG5hbWVkIHNldCBvZiBwYXR0ZXJuIGV4cHJlc3Npb25zIiwidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cbkF1dGhvcmlubyBjdXN0b20gSlNPTiBwYXRoIG1vZGlmaWVycyBhcmUgYWxzbyBzdXBwb3J0ZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSB2YWx1ZSBvZiByZWZlcmVuY2UgZm9yIHRoZSBjb21wYXJpc29uIHdpdGggdGhlIGNvbnRlbnQgZmV0Y2hlZCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04uXG5JZiB1c2VkIHdpdGggdGhlIFwibWF0Y2hlc1wiIG9wZXJhdG9yLCB0aGUgdmFsdWUgbXVzdCBjb21waWxlIHRvIGEgdmFsaWQgR29sYW5nIHJlZ2V4LiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIndyaXN0YmFuZCI6eyJkZXNjcmlwdGlvbiI6IkF1dGhvcmlubyBGZXN0aXZhbCBXcmlzdGJhbmQgdG9rZW4iLCJwcm9wZXJ0aWVzIjp7ImN1c3RvbUNsYWltcyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJwcm9wZXJ0aWVzIjp7InNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiQW55IGNsYWltcyB0byBiZSBhZGRlZCB0byB0aGUgd3Jpc3RiYW5kIHRva2VuIGFwYXJ0IGZyb20gdGhlIHN0YW5kYXJkIEpXVCBjbGFpbXMgKGlzcywgaWF0LCBleHApIGFkZGVkIGJ5IGRlZmF1bHQuIiwidHlwZSI6Im9iamVjdCJ9LCJpc3N1ZXIiOnsiZGVzY3JpcHRpb24iOiJUaGUgZW5kcG9pbnQgdG8gdGhlIEF1dGhvcmlubyBzZXJ2aWNlIHRoYXQgaXNzdWVzIHRoZSB3cmlzdGJhbmQgKGZvcm1hdDogXHUwMDNjc2NoZW1lXHUwMDNlOi8vXHUwMDNjaG9zdFx1MDAzZTpcdTAwM2Nwb3J0XHUwMDNlL1x1MDAzY3JlYWxtXHUwMDNlLCB3aGVyZSBcdTAwM2NyZWFsbVx1MDAzZSA9IFx1MDAzY25hbWVzcGFjZVx1MDAzZS9cdTAwM2NhdXRob3Jpbm8tYXV0aC1jb25maWctcmVzb3VyY2UtbmFtZS93cmlzdGJhbmQtY29uZmlnLW5hbWUpIiwidHlwZSI6InN0cmluZyJ9LCJzaWduaW5nS2V5UmVmcyI6eyJkZXNjcmlwdGlvbiI6IlJlZmVyZW5jZSBieSBuYW1lIHRvIEt1YmVybmV0ZXMgc2VjcmV0cyBhbmQgY29ycmVzcG9uZGluZyBzaWduaW5nIGFsZ29yaXRobXMuXG5UaGUgc2VjcmV0cyBtdXN0IGNvbnRhaW4gYSBga2V5LnBlbWAgZW50cnkgd2hvc2UgdmFsdWUgaXMgdGhlIHNpZ25pbmcga2V5IGZvcm1hdHRlZCBhcyBQRU0uIiwiaXRlbXMiOnsicHJvcGVydGllcyI6eyJhbGdvcml0aG0iOnsiZGVzY3JpcHRpb24iOiJBbGdvcml0aG0gdG8gc2lnbiB0aGUgd3Jpc3RiYW5kIHRva2VuIHVzaW5nIHRoZSBzaWduaW5nIGtleSBwcm92aWRlZCIsImVudW0iOlsiRVMyNTYiLCJFUzM4NCIsIkVTNTEyIiwiUlMyNTYiLCJSUzM4NCIsIlJTNTEyIl0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHNpZ25pbmcga2V5LlxuVGhlIHZhbHVlIGlzIHVzZWQgdG8gcmVmZXJlbmNlIHRoZSBLdWJlcm5ldGVzIHNlY3JldCB0aGF0IHN0b3JlcyB0aGUga2V5IGFuZCBpbiB0aGUgYGtpZGAgY2xhaW0gb2YgdGhlIHdyaXN0YmFuZCB0b2tlbiBoZWFkZXIuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiYWxnb3JpdGhtIiwibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJ0b2tlbkR1cmF0aW9uIjp7ImRlc2NyaXB0aW9uIjoiVGltZSBzcGFuIG9mIHRoZSB3cmlzdGJhbmQgdG9rZW4sIGluIHNlY29uZHMuIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9fSwicmVxdWlyZWQiOlsiaXNzdWVyIiwic2lnbmluZ0tleVJlZnMiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJkZXNjcmlwdGlvbiI6IkN1c3RvbSBzdWNjZXNzIHJlc3BvbnNlIGl0ZW1zIHdyYXBwZWQgYXMgSFRUUCBoZWFkZXJzLlxuRm9yIGludGVncmF0aW9uIG9mIEF1dGhvcmlubyB2aWEgcHJveHksIHRoZSBwcm94eSBtdXN0IHVzZSB0aGVzZSBzZXR0aW5ncyB0byBpbmplY3QgZGF0YSBpbiB0aGUgcmVxdWVzdC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sInVuYXV0aGVudGljYXRlZCI6eyJkZXNjcmlwdGlvbiI6IkN1c3RvbWl6YXRpb25zIG9uIHRoZSBkZW5pYWwgc3RhdHVzIGF0dHJpYnV0ZXMgd2hlbiB0aGUgcmVxdWVzdCBpcyB1bmF1dGhlbnRpY2F0ZWQuXG5Gb3IgaW50ZWdyYXRpb24gb2YgQXV0aG9yaW5vIHZpYSBwcm94eSwgdGhlIHByb3h5IG11c3QgaG9ub3VyIHRoZSByZXNwb25zZSBzdGF0dXMgYXR0cmlidXRlcyBzcGVjaWZpZWQgaW4gdGhpcyBjb25maWcuXG5EZWZhdWx0OiA0MDEgVW5hdXRob3JpemVkIiwicHJvcGVydGllcyI6eyJib2R5Ijp7ImRlc2NyaXB0aW9uIjoiSFRUUCByZXNwb25zZSBib2R5IHRvIG92ZXJyaWRlIHRoZSBkZWZhdWx0IGRlbmlhbCBib2R5LiIsInByb3BlcnRpZXMiOnsic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifSwiY29kZSI6eyJkZXNjcmlwdGlvbiI6IkhUVFAgc3RhdHVzIGNvZGUgdG8gb3ZlcnJpZGUgdGhlIGRlZmF1bHQgZGVuaWFsIHN0YXR1cyBjb2RlLiIsImZvcm1hdCI6ImludDY0IiwibWF4aW11bSI6NTk5LCJtaW5pbXVtIjozMDAsInR5cGUiOiJpbnRlZ2VyIn0sImhlYWRlcnMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsicHJvcGVydGllcyI6eyJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlNpbXBsZSBwYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpIG9yIGEgc3RyaW5nIHRlbXBsYXRlIHdpdGggdmFyaWFibGVzIHRoYXQgcmVzb2x2ZSB0byBwYXR0ZXJucyAoZS5nLiBcIkhlbGxvLCB7YXV0aC5pZGVudGl0eS5uYW1lfSFcIikuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cblRoZSBmb2xsb3dpbmcgQXV0aG9yaW5vIGN1c3RvbSBtb2RpZmllcnMgYXJlIHN1cHBvcnRlZDogQGV4dHJhY3Q6e3NlcDpcIiBcIixwb3M6MH0sIEByZXBsYWNle29sZDpcIlwiLG5ldzpcIlwifSwgQGNhc2U6dXBwZXJ8bG93ZXIsIEBiYXNlNjQ6ZW5jb2RlfGRlY29kZSBhbmQgQHN0cmlwLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJTdGF0aWMgdmFsdWUiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9LCJkZXNjcmlwdGlvbiI6IkhUVFAgcmVzcG9uc2UgaGVhZGVycyB0byBvdmVycmlkZSB0aGUgZGVmYXVsdCBkZW5pYWwgaGVhZGVycy4iLCJ0eXBlIjoib2JqZWN0In0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJIVFRQIG1lc3NhZ2UgdG8gb3ZlcnJpZGUgdGhlIGRlZmF1bHQgZGVuaWFsIG1lc3NhZ2UuIiwicHJvcGVydGllcyI6eyJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlNpbXBsZSBwYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpIG9yIGEgc3RyaW5nIHRlbXBsYXRlIHdpdGggdmFyaWFibGVzIHRoYXQgcmVzb2x2ZSB0byBwYXR0ZXJucyAoZS5nLiBcIkhlbGxvLCB7YXV0aC5pZGVudGl0eS5uYW1lfSFcIikuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cblRoZSBmb2xsb3dpbmcgQXV0aG9yaW5vIGN1c3RvbSBtb2RpZmllcnMgYXJlIHN1cHBvcnRlZDogQGV4dHJhY3Q6e3NlcDpcIiBcIixwb3M6MH0sIEByZXBsYWNle29sZDpcIlwiLG5ldzpcIlwifSwgQGNhc2U6dXBwZXJ8bG93ZXIsIEBiYXNlNjQ6ZW5jb2RlfGRlY29kZSBhbmQgQHN0cmlwLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJTdGF0aWMgdmFsdWUiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ1bmF1dGhvcml6ZWQiOnsiZGVzY3JpcHRpb24iOiJDdXN0b21pemF0aW9ucyBvbiB0aGUgZGVuaWFsIHN0YXR1cyBhdHRyaWJ1dGVzIHdoZW4gdGhlIHJlcXVlc3QgaXMgdW5hdXRob3JpemVkLlxuRm9yIGludGVncmF0aW9uIG9mIEF1dGhvcmlubyB2aWEgcHJveHksIHRoZSBwcm94eSBtdXN0IGhvbm91ciB0aGUgcmVzcG9uc2Ugc3RhdHVzIGF0dHJpYnV0ZXMgc3BlY2lmaWVkIGluIHRoaXMgY29uZmlnLlxuRGVmYXVsdDogNDAzIEZvcmJpZGRlbiIsInByb3BlcnRpZXMiOnsiYm9keSI6eyJkZXNjcmlwdGlvbiI6IkhUVFAgcmVzcG9uc2UgYm9keSB0byBvdmVycmlkZSB0aGUgZGVmYXVsdCBkZW5pYWwgYm9keS4iLCJwcm9wZXJ0aWVzIjp7InNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sImNvZGUiOnsiZGVzY3JpcHRpb24iOiJIVFRQIHN0YXR1cyBjb2RlIHRvIG92ZXJyaWRlIHRoZSBkZWZhdWx0IGRlbmlhbCBzdGF0dXMgY29kZS4iLCJmb3JtYXQiOiJpbnQ2NCIsIm1heGltdW0iOjU5OSwibWluaW11bSI6MzAwLCJ0eXBlIjoiaW50ZWdlciJ9LCJoZWFkZXJzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InByb3BlcnRpZXMiOnsic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifSwiZGVzY3JpcHRpb24iOiJIVFRQIHJlc3BvbnNlIGhlYWRlcnMgdG8gb3ZlcnJpZGUgdGhlIGRlZmF1bHQgZGVuaWFsIGhlYWRlcnMuIiwidHlwZSI6Im9iamVjdCJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiSFRUUCBtZXNzYWdlIHRvIG92ZXJyaWRlIHRoZSBkZWZhdWx0IGRlbmlhbCBtZXNzYWdlLiIsInByb3BlcnRpZXMiOnsic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwid2hlbiI6eyJkZXNjcmlwdGlvbiI6Ik92ZXJhbGwgY29uZGl0aW9ucyBmb3IgdGhlIEF1dGhDb25maWcgdG8gYmUgZW5mb3JjZWQuXG5JZiBvbWl0dGVkLCB0aGUgQXV0aENvbmZpZyB3aWxsIGJlIGVuZm9yY2VkIGF0IGFsbCByZXF1ZXN0cy5cbklmIHByZXNlbnQsIGFsbCBjb25kaXRpb25zIG11c3QgbWF0Y2ggZm9yIHRoZSBBdXRoQ29uZmlnIHRvIGJlIGVuZm9yY2VkOyBvdGhlcndpc2UsIEF1dGhvcmlubyBza2lwcyB0aGUgQXV0aENvbmZpZyBhbmQgcmV0dXJucyB0byB0aGUgYXV0aCByZXF1ZXN0IHdpdGggc3RhdHVzIE9LLiIsIml0ZW1zIjp7Im9uZU9mIjpbeyJwcm9wZXJ0aWVzIjp7InBhdHRlcm5SZWYiOnt9fSwicmVxdWlyZWQiOlsicGF0dGVyblJlZiJdfSx7InByb3BlcnRpZXMiOnsib3BlcmF0b3IiOnt9LCJzZWxlY3RvciI6e30sInZhbHVlIjp7fX0sInJlcXVpcmVkIjpbIm9wZXJhdG9yIiwic2VsZWN0b3IiXX0seyJwcm9wZXJ0aWVzIjp7ImFsbCI6e319LCJyZXF1aXJlZCI6WyJhbGwiXX0seyJwcm9wZXJ0aWVzIjp7ImFueSI6e319LCJyZXF1aXJlZCI6WyJhbnkiXX1dLCJwcm9wZXJ0aWVzIjp7ImFsbCI6eyJkZXNjcmlwdGlvbiI6IkEgbGlzdCBvZiBwYXR0ZXJuIGV4cHJlc3Npb25zIHRvIGJlIGV2YWx1YXRlZCBhcyBhIGxvZ2ljYWwgQU5ELiIsIml0ZW1zIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJ0eXBlIjoiYXJyYXkifSwiYW55Ijp7ImRlc2NyaXB0aW9uIjoiQSBsaXN0IG9mIHBhdHRlcm4gZXhwcmVzc2lvbnMgdG8gYmUgZXZhbHVhdGVkIGFzIGEgbG9naWNhbCBPUi4iLCJpdGVtcyI6eyJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfSwidHlwZSI6ImFycmF5In0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGJpbmFyeSBvcGVyYXRvciB0byBiZSBhcHBsaWVkIHRvIHRoZSBjb250ZW50IGZldGNoZWQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OLCBmb3IgY29tcGFyaXNvbiB3aXRoIFwidmFsdWVcIi5cblBvc3NpYmxlIHZhbHVlcyBhcmU6IFwiZXFcIiAoZXF1YWwgdG8pLCBcIm5lcVwiIChub3QgZXF1YWwgdG8pLCBcImluY2xcIiAoaW5jbHVkZXM7IGZvciBhcnJheXMpLCBcImV4Y2xcIiAoZXhjbHVkZXM7IGZvciBhcnJheXMpLCBcIm1hdGNoZXNcIiAocmVnZXgpIiwiZW51bSI6WyJlcSIsIm5lcSIsImluY2wiLCJleGNsIiwibWF0Y2hlcyJdLCJ0eXBlIjoic3RyaW5nIn0sInBhdHRlcm5SZWYiOnsiZGVzY3JpcHRpb24iOiJSZWZlcmVuY2UgdG8gYSBuYW1lZCBzZXQgb2YgcGF0dGVybiBleHByZXNzaW9ucyIsInR5cGUiOiJzdHJpbmcifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJQYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5BdXRob3Jpbm8gY3VzdG9tIEpTT04gcGF0aCBtb2RpZmllcnMgYXJlIGFsc28gc3VwcG9ydGVkLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJUaGUgdmFsdWUgb2YgcmVmZXJlbmNlIGZvciB0aGUgY29tcGFyaXNvbiB3aXRoIHRoZSBjb250ZW50IGZldGNoZWQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OLlxuSWYgdXNlZCB3aXRoIHRoZSBcIm1hdGNoZXNcIiBvcGVyYXRvciwgdGhlIHZhbHVlIG11c3QgY29tcGlsZSB0byBhIHZhbGlkIEdvbGFuZyByZWdleC4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsiaG9zdHMiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJBdXRoQ29uZmlnU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIEF1dGhDb25maWciLCJwcm9wZXJ0aWVzIjp7ImNvbmRpdGlvbnMiOnsiaXRlbXMiOnsicHJvcGVydGllcyI6eyJsYXN0VHJhbnNpdGlvblRpbWUiOnsiZGVzY3JpcHRpb24iOiJMYXN0IHRpbWUgdGhlIGNvbmRpdGlvbiB0cmFuc2l0IGZyb20gb25lIHN0YXR1cyB0byBhbm90aGVyLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibGFzdFVwZGF0ZWRUaW1lIjp7ImRlc2NyaXB0aW9uIjoiTGFzdCB0aW1lIHRoZSBjb25kaXRpb24gd2FzIHVwZGF0ZWQiLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJIdW1hbiByZWFkYWJsZSBtZXNzYWdlIGluZGljYXRpbmcgZGV0YWlscyBhYm91dCBsYXN0IHRyYW5zaXRpb24uIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiIoYnJpZWYpIHJlYXNvbiBmb3IgdGhlIGNvbmRpdGlvbidzIGxhc3QgdHJhbnNpdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlN0YXR1cyBvZiB0aGUgY29uZGl0aW9uLCBvbmUgb2YgVHJ1ZSwgRmFsc2UsIFVua25vd24uIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBvZiBjb25kaXRpb24iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJzdGF0dXMiLCJ0eXBlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sInN1bW1hcnkiOnsicHJvcGVydGllcyI6eyJmZXN0aXZhbFdyaXN0YmFuZEVuYWJsZWQiOnsiZGVzY3JpcHRpb24iOiJJbmRpY2F0b3Igb2Ygd2hldGhlciB0aGUgQXV0aENvbmZpZyBpc3N1ZXMgRmVzdGl2YWwgV3Jpc3RiYW5kIHRva2VucyBvbiBzdWNjZXNzZnVsIGV2YWx1YXRpb24gb2YgdGhlIEF1dGhDb25maWcgKGFjY2VzcyBncmFudGVkKSIsInR5cGUiOiJib29sZWFuIn0sImhvc3RzUmVhZHkiOnsiZGVzY3JpcHRpb24iOiJMaXN0cyB0aGUgaG9zdHMgZnJvbSBzcGVjLmhvc3RzIGxpbmtlZCB0byB0aGUgcmVzb3VyY2UgaW4gdGhlIGluZGV4IiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwibnVtQXV0aG9yaXphdGlvblBvbGljaWVzIjp7ImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIGF1dGhvcml6YXRpb24gcG9saWNpZXMgaW4gdGhlIEF1dGhDb25maWciLCJmb3JtYXQiOiJpbnQ2NCIsInR5cGUiOiJpbnRlZ2VyIn0sIm51bUhvc3RzUmVhZHkiOnsiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2YgaG9zdHMgZnJvbSBzcGVjLmhvc3RzIGxpbmtlZCB0byB0aGUgcmVzb3VyY2UgaW4gdGhlIGluZGV4LCBjb21wYXJlZCB0byB0aGUgdG90YWwgbnVtYmVyIG9mIGhvc3RzIGluIHNwZWMuaG9zdHMiLCJ0eXBlIjoic3RyaW5nIn0sIm51bUlkZW50aXR5U291cmNlcyI6eyJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiB0cnVzdGVkIHNvdXJjZXMgb2YgaWRlbnRpdHkgZm9yIGF1dGhlbnRpY2F0aW9uIGluIHRoZSBBdXRoQ29uZmlnIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJudW1NZXRhZGF0YVNvdXJjZXMiOnsiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2Ygc291cmNlcyBvZiBleHRlcm5hbCBtZXRhZGF0YSBpbiB0aGUgQXV0aENvbmZpZyIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwibnVtUmVzcG9uc2VJdGVtcyI6eyJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiBjdXN0b20gYXV0aG9yaXphdGlvbiByZXNwb25zZSBpdGVtcyBpbiB0aGUgQXV0aENvbmZpZyIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwicmVhZHkiOnsiZGVzY3JpcHRpb24iOiJXaGV0aGVyIGFsbCBob3N0cyBmcm9tIHNwZWMuaG9zdHMgaGF2ZSBiZWVuIGxpbmtlZCB0byB0aGUgcmVzb3VyY2UgaW4gdGhlIGluZGV4IiwidHlwZSI6ImJvb2xlYW4ifX0sInJlcXVpcmVkIjpbImZlc3RpdmFsV3Jpc3RiYW5kRW5hYmxlZCIsImhvc3RzUmVhZHkiLCJudW1BdXRob3JpemF0aW9uUG9saWNpZXMiLCJudW1Ib3N0c1JlYWR5IiwibnVtSWRlbnRpdHlTb3VyY2VzIiwibnVtTWV0YWRhdGFTb3VyY2VzIiwibnVtUmVzcG9uc2VJdGVtcyIsInJlYWR5Il0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6ZmFsc2UsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX0seyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiUmVhZHkgZm9yIGFsbCBob3N0cyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdW1tYXJ5LnJlYWR5IiwibmFtZSI6IlJlYWR5IiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2YgaG9zdHMgcmVhZHkiLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3VtbWFyeS5udW1Ib3N0c1JlYWR5IiwibmFtZSI6Ikhvc3RzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2YgdHJ1c3RlZCBpZGVudGl0eSBzb3VyY2VzIiwianNvblBhdGgiOiIuc3RhdHVzLnN1bW1hcnkubnVtSWRlbnRpdHlTb3VyY2VzIiwibmFtZSI6IkF1dGhlbnRpY2F0aW9uIiwicHJpb3JpdHkiOjIsInR5cGUiOiJpbnRlZ2VyIn0seyJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiBleHRlcm5hbCBtZXRhZGF0YSBzb3VyY2VzIiwianNvblBhdGgiOiIuc3RhdHVzLnN1bW1hcnkubnVtTWV0YWRhdGFTb3VyY2VzIiwibmFtZSI6Ik1ldGFkYXRhIiwicHJpb3JpdHkiOjIsInR5cGUiOiJpbnRlZ2VyIn0seyJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiBhdXRob3JpemF0aW9uIHBvbGljaWVzIiwianNvblBhdGgiOiIuc3RhdHVzLnN1bW1hcnkubnVtQXV0aG9yaXphdGlvblBvbGljaWVzIiwibmFtZSI6IkF1dGhvcml6YXRpb24iLCJwcmlvcml0eSI6MiwidHlwZSI6ImludGVnZXIifSx7ImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIGl0ZW1zIGFkZGVkIHRvIHRoZSBhdXRob3JpemF0aW9uIHJlc3BvbnNlIiwianNvblBhdGgiOiIuc3RhdHVzLnN1bW1hcnkubnVtUmVzcG9uc2VJdGVtcyIsIm5hbWUiOiJSZXNwb25zZSIsInByaW9yaXR5IjoyLCJ0eXBlIjoiaW50ZWdlciJ9LHsiZGVzY3JpcHRpb24iOiJXaGV0aGVyIGlzc3VpbmcgRmVzdGl2YWwgV3Jpc3RiYW5kcyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdW1tYXJ5LmZlc3RpdmFsV3Jpc3RiYW5kRW5hYmxlZCIsIm5hbWUiOiJXcmlzdGJhbmQiLCJwcmlvcml0eSI6MiwidHlwZSI6ImJvb2xlYW4ifV0sIm5hbWUiOiJ2MWJldGEzIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkF1dGhDb25maWcgaXMgdGhlIHNjaGVtYSBmb3IgQXV0aG9yaW5vJ3MgQXV0aENvbmZpZyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJTcGVjaWZpZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgdGhlIEF1dGhDb25maWcgcmVzb3VyY2UsIGkuZS4gdGhlIGF1dGhlbmNhdGlvbi9hdXRob3JpemF0aW9uIHNjaGVtZSB0byBiZSBhcHBsaWVkIHRvIHByb3RlY3QgdGhlIG1hdGNoaW5nIHNlcnZpY2UgaG9zdHMuIiwicHJvcGVydGllcyI6eyJhdXRoZW50aWNhdGlvbiI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJvbmVPZiI6W3sicHJvcGVydGllcyI6eyJjcmVkZW50aWFscyI6e30sIm9hdXRoMkludHJvc3BlY3Rpb24iOnt9fSwicmVxdWlyZWQiOlsib2F1dGgySW50cm9zcGVjdGlvbiJdfSx7InByb3BlcnRpZXMiOnsiY3JlZGVudGlhbHMiOnt9LCJqd3QiOnt9fSwicmVxdWlyZWQiOlsiand0Il19LHsicHJvcGVydGllcyI6eyJhcGlLZXkiOnt9LCJjcmVkZW50aWFscyI6e319LCJyZXF1aXJlZCI6WyJhcGlLZXkiXX0seyJwcm9wZXJ0aWVzIjp7ImNyZWRlbnRpYWxzIjp7fSwieDUwOSI6e319LCJyZXF1aXJlZCI6WyJ4NTA5Il19LHsicHJvcGVydGllcyI6eyJjcmVkZW50aWFscyI6e30sImt1YmVybmV0ZXNUb2tlblJldmlldyI6e319LCJyZXF1aXJlZCI6WyJrdWJlcm5ldGVzVG9rZW5SZXZpZXciXX0seyJwcm9wZXJ0aWVzIjp7ImFub255bW91cyI6e30sImNyZWRlbnRpYWxzIjp7fX0sInJlcXVpcmVkIjpbImFub255bW91cyJdfSx7InByb3BlcnRpZXMiOnsiY3JlZGVudGlhbHMiOnt9LCJwbGFpbiI6e319LCJyZXF1aXJlZCI6WyJwbGFpbiJdfV0sInByb3BlcnRpZXMiOnsiYW5vbnltb3VzIjp7ImRlc2NyaXB0aW9uIjoiQW5vbnltb3VzIGFjY2Vzcy4iLCJ0eXBlIjoib2JqZWN0In0sImFwaUtleSI6eyJkZXNjcmlwdGlvbiI6IkF1dGhlbnRpY2F0aW9uIGJhc2VkIG9uIEFQSSBrZXlzIHN0b3JlZCBpbiBLdWJlcm5ldGVzIHNlY3JldHMuIiwicHJvcGVydGllcyI6eyJhbGxOYW1lc3BhY2VzIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IldoZXRoZXIgQXV0aG9yaW5vIHNob3VsZCBsb29rIGZvciBBUEkga2V5IHNlY3JldHMgaW4gYWxsIG5hbWVzcGFjZXMgb3Igb25seSBpbiB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgdGhlIEF1dGhDb25maWcuXG5FbmFibGluZyB0aGlzIG9wdGlvbiBpbiBuYW1lc3BhY2VkIEF1dGhvcmlubyBpbnN0YW5jZXMgaGFzIG5vIGVmZmVjdC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkxhYmVsIHNlbGVjdG9yIHVzZWQgYnkgQXV0aG9yaW5vIHRvIG1hdGNoIHNlY3JldHMgZnJvbSB0aGUgY2x1c3RlciBzdG9yaW5nIHZhbGlkIGNyZWRlbnRpYWxzIHRvIGF1dGhlbnRpY2F0ZSB0byB0aGlzIHNlcnZpY2UiLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsic2VsZWN0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJjYWNoZSI6eyJkZXNjcmlwdGlvbiI6IkNhY2hpbmcgb3B0aW9ucyBmb3IgdGhlIHJlc29sdmVkIG9iamVjdCByZXR1cm5lZCB3aGVuIGFwcGx5aW5nIHRoaXMgY29uZmlnLlxuT21pdCBpdCB0byBhdm9pZCBjYWNoaW5nIG9iamVjdHMgZm9yIHRoaXMgY29uZmlnLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiS2V5IHVzZWQgdG8gc3RvcmUgdGhlIGVudHJ5IGluIHRoZSBjYWNoZS5cblRoZSByZXNvbHZlZCBrZXkgbXVzdCBiZSB1bmlxdWUgd2l0aGluIHRoZSBzY29wZSBvZiB0aGlzIHBhcnRpY3VsYXIgY29uZmlnLiIsInByb3BlcnRpZXMiOnsiZXhwcmVzc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkEgQ29tbW9uIEV4cHJlc3Npb24gTGFuZ3VhZ2UgKENFTCkgZXhwcmVzc2lvbiB0aGF0IGV2YWx1YXRlcyB0byBhIHZhbHVlLlxuU3RyaW5nIGV4cHJlc3Npb25zIGFyZSBzdXBwb3J0ZWQgKGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL2dvb2dsZS9jZWwtZ28vZXh0I1N0cmluZ3MpLiIsInR5cGUiOiJzdHJpbmcifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifSwidHRsIjp7ImRlZmF1bHQiOjYwLCJkZXNjcmlwdGlvbiI6IkR1cmF0aW9uIChpbiBzZWNvbmRzKSBvZiB0aGUgZXh0ZXJuYWwgZGF0YSBpbiB0aGUgY2FjaGUgYmVmb3JlIHB1bGxlZCBhZ2FpbiBmcm9tIHRoZSBzb3VyY2UuIiwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbImtleSJdLCJ0eXBlIjoib2JqZWN0In0sImNyZWRlbnRpYWxzIjp7ImRlc2NyaXB0aW9uIjoiRGVmaW5lcyB3aGVyZSBjcmVkZW50aWFscyBhcmUgcmVxdWlyZWQgdG8gYmUgcGFzc2VkIGluIHRoZSByZXF1ZXN0IGZvciBhdXRoZW50aWNhdGlvbiBiYXNlZCBvbiB0aGlzIGNvbmZpZy5cbklmIG9taXR0ZWQsIGl0IGRlZmF1bHRzIHRvIGNyZWRlbnRpYWxzIHBhc3NlZCBpbiB0aGUgSFRUUCBBdXRob3JpemF0aW9uIGhlYWRlciBhbmQgdGhlIFwiQmVhcmVyXCIgcHJlZml4IHByZXBlbmRlZCB0byB0aGUgc2VjcmV0IGNyZWRlbnRpYWwgdmFsdWUuIiwicHJvcGVydGllcyI6eyJhdXRob3JpemF0aW9uSGVhZGVyIjp7InByb3BlcnRpZXMiOnsicHJlZml4Ijp7InR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiY29va2llIjp7InByb3BlcnRpZXMiOnsibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwiY3VzdG9tSGVhZGVyIjp7InByb3BlcnRpZXMiOnsibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwicXVlcnlTdHJpbmciOnsicHJvcGVydGllcyI6eyJuYW1lIjp7InR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJkZWZhdWx0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJwcm9wZXJ0aWVzIjp7ImV4cHJlc3Npb24iOnsiZGVzY3JpcHRpb24iOiJBIENvbW1vbiBFeHByZXNzaW9uIExhbmd1YWdlIChDRUwpIGV4cHJlc3Npb24gdGhhdCBldmFsdWF0ZXMgdG8gYSB2YWx1ZS5cblN0cmluZyBleHByZXNzaW9ucyBhcmUgc3VwcG9ydGVkIChodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS9nb29nbGUvY2VsLWdvL2V4dCNTdHJpbmdzKS4iLCJ0eXBlIjoic3RyaW5nIn0sInNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiU2V0IGRlZmF1bHQgcHJvcGVydHkgdmFsdWVzIChjbGFpbXMpIGZvciB0aGUgcmVzb2x2ZWQgaWRlbnRpdHkgb2JqZWN0LCB0aGF0IGFyZSBzZXQgYmVmb3JlIGFwcGVuZGluZyB0aGUgb2JqZWN0IHRvXG50aGUgYXV0aG9yaXphdGlvbiBKU09OLiBJZiB0aGUgcHJvcGVydHkgaXMgYWxyZWFkeSBwcmVzZW50IGluIHRoZSByZXNvbHZlZCBpZGVudGl0eSBvYmplY3QsIHRoZSBkZWZhdWx0IHZhbHVlIGlzIGlnbm9yZWQuXG5JdCByZXF1aXJlcyB0aGUgcmVzb2x2ZWQgaWRlbnRpdHkgb2JqZWN0IHRvIGFsd2F5cyBiZSBhIEpTT04gb2JqZWN0LlxuRG8gbm90IHVzZSB0aGlzIG9wdGlvbiB3aXRoIGlkZW50aXR5IG9iamVjdHMgb2Ygb3RoZXIgSlNPTiB0eXBlcyAoYXJyYXksIHN0cmluZywgZXRjKS4iLCJ0eXBlIjoib2JqZWN0In0sImp3dCI6eyJkZXNjcmlwdGlvbiI6IkF1dGhlbnRpY2F0aW9uIGJhc2VkIG9uIEpXVCB0b2tlbnMuIiwicHJvcGVydGllcyI6eyJpc3N1ZXJVcmwiOnsiZGVzY3JpcHRpb24iOiJVUkwgb2YgdGhlIGlzc3VlciBvZiB0aGUgSldULlxuSWYgYGp3a3NVcmxgIGlzIG9taXR0ZWQsIEF1dGhvcmlubyB3aWxsIGFwcGVuZCB0aGUgcGF0aCB0byB0aGUgT3BlbklEIENvbm5lY3QgV2VsbC1Lbm93biBEaXNjb3ZlcnkgZW5kcG9pbnRcbihpLmUuIFwiLy53ZWxsLWtub3duL29wZW5pZC1jb25maWd1cmF0aW9uXCIpIHRvIHRoaXMgVVJMLCB0byBkaXNjb3ZlciB0aGUgT0lEQyBjb25maWd1cmF0aW9uIHdoZXJlIHRvIG9idGFpblxudGhlIFwiamt3c191cmlcIiBjbGFpbSBmcm9tLlxuVGhlIHZhbHVlIG11c3QgY29pbmNpZGUgd2l0aCB0aGUgdmFsdWUgb2YgIHRoZSBcImlzc1wiIChpc3N1ZXIpIGNsYWltIG9mIHRoZSBkaXNjb3ZlcmVkIE9wZW5JRCBDb25uZWN0IGNvbmZpZ3VyYXRpb24uIiwidHlwZSI6InN0cmluZyJ9LCJ0dGwiOnsiZGVzY3JpcHRpb24iOiJEZWNpZGVzIGhvdyBsb25nIHRvIHdhaXQgYmVmb3JlIHJlZnJlc2hpbmcgdGhlIEpXS1MgKGluIHNlY29uZHMpLlxuSWYgb21pdHRlZCwgQXV0aG9yaW5vIHdpbGwgbmV2ZXIgcmVmcmVzaCB0aGUgSldLUy4iLCJ0eXBlIjoiaW50ZWdlciJ9fSwidHlwZSI6Im9iamVjdCJ9LCJrdWJlcm5ldGVzVG9rZW5SZXZpZXciOnsiZGVzY3JpcHRpb24iOiJBdXRoZW50aWNhdGlvbiBieSBLdWJlcm5ldGVzIHRva2VuIHJldmlldy4iLCJwcm9wZXJ0aWVzIjp7ImF1ZGllbmNlcyI6eyJkZXNjcmlwdGlvbiI6IlRoZSBsaXN0IG9mIGF1ZGllbmNlcyAoc2NvcGVzKSB0aGF0IG11c3QgYmUgY2xhaW1lZCBpbiBhIEt1YmVybmV0ZXMgYXV0aGVudGljYXRpb24gdG9rZW4gc3VwcGxpZWQgaW4gdGhlIHJlcXVlc3QsIGFuZCByZXZpZXdlZCBieSBBdXRob3Jpbm8uXG5JZiBvbWl0dGVkLCBBdXRob3Jpbm8gd2lsbCByZXZpZXcgdG9rZW5zIGV4cGVjdGluZyB0aGUgaG9zdCBuYW1lIG9mIHRoZSByZXF1ZXN0ZWQgcHJvdGVjdGVkIHNlcnZpY2UgYW1vbmdzdCB0aGUgYXVkaWVuY2VzLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In0sIm1ldHJpY3MiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiV2hldGhlciB0aGlzIGNvbmZpZyBzaG91bGQgZ2VuZXJhdGUgaW5kaXZpZHVhbCBvYnNlcnZhYmlsaXR5IG1ldHJpY3MiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJvYXV0aDJJbnRyb3NwZWN0aW9uIjp7ImRlc2NyaXB0aW9uIjoiQXV0aGVudGljYXRpb24gYnkgT0F1dGgyIHRva2VuIGludHJvc3BlY3Rpb24uIiwicHJvcGVydGllcyI6eyJjcmVkZW50aWFsc1JlZiI6eyJkZXNjcmlwdGlvbiI6IlJlZmVyZW5jZSB0byBhIEt1YmVybmV0ZXMgc2VjcmV0IGluIHRoZSBzYW1lIG5hbWVzcGFjZSwgdGhhdCBzdG9yZXMgY2xpZW50IGNyZWRlbnRpYWxzIHRvIHRoZSBPQXV0aDIgc2VydmVyLiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHJlZmVyZW50LlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXNcblRPRE86IEFkZCBvdGhlciB1c2VmdWwgZmllbGRzLiBhcGlWZXJzaW9uLCBraW5kLCB1aWQ/IiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJlbmRwb2ludCI6eyJkZXNjcmlwdGlvbiI6IlRoZSBmdWxsIFVSTCBvZiB0aGUgdG9rZW4gaW50cm9zcGVjdGlvbiBlbmRwb2ludC4iLCJ0eXBlIjoic3RyaW5nIn0sInRva2VuVHlwZUhpbnQiOnsiZGVzY3JpcHRpb24iOiJUaGUgdG9rZW4gdHlwZSBoaW50IGZvciB0aGUgdG9rZW4gaW50cm9zcGVjdGlvbi5cbklmIG9taXR0ZWQsIGl0IGRlZmF1bHRzIHRvIFwiYWNjZXNzX3Rva2VuXCIuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiY3JlZGVudGlhbHNSZWYiLCJlbmRwb2ludCJdLCJ0eXBlIjoib2JqZWN0In0sIm92ZXJyaWRlcyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJwcm9wZXJ0aWVzIjp7ImV4cHJlc3Npb24iOnsiZGVzY3JpcHRpb24iOiJBIENvbW1vbiBFeHByZXNzaW9uIExhbmd1YWdlIChDRUwpIGV4cHJlc3Npb24gdGhhdCBldmFsdWF0ZXMgdG8gYSB2YWx1ZS5cblN0cmluZyBleHByZXNzaW9ucyBhcmUgc3VwcG9ydGVkIChodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS9nb29nbGUvY2VsLWdvL2V4dCNTdHJpbmdzKS4iLCJ0eXBlIjoic3RyaW5nIn0sInNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiT3ZlcnJpZGVzIHRoZSByZXNvbHZlZCBpZGVudGl0eSBvYmplY3QgYnkgc2V0dGluZyB0aGUgYWRkaXRpb25hbCBwcm9wZXJ0aWVzIChjbGFpbXMpIHNwZWNpZmllZCBpbiB0aGlzIGNvbmZpZyxcbmJlZm9yZSBhcHBlbmRpbmcgdGhlIG9iamVjdCB0byB0aGUgYXV0aG9yaXphdGlvbiBKU09OLlxuSXQgcmVxdWlyZXMgdGhlIHJlc29sdmVkIGlkZW50aXR5IG9iamVjdCB0byBhbHdheXMgYmUgYSBKU09OIG9iamVjdC5cbkRvIG5vdCB1c2UgdGhpcyBvcHRpb24gd2l0aCBpZGVudGl0eSBvYmplY3RzIG9mIG90aGVyIEpTT04gdHlwZXMgKGFycmF5LCBzdHJpbmcsIGV0YykuIiwidHlwZSI6Im9iamVjdCJ9LCJwbGFpbiI6eyJkZXNjcmlwdGlvbiI6IklkZW50aXR5IG9iamVjdCBleHRyYWN0ZWQgZnJvbSB0aGUgY29udGV4dC5cblVzZSB0aGlzIG1ldGhvZCB3aGVuIGF1dGhlbnRpY2F0aW9uIGlzIHBlcmZvcm1lZCBiZWZvcmVoYW5kIGJ5IGEgcHJveHkgYW5kIHRoZSByZXN1bHRpbmcgb2JqZWN0IHBhc3NlZCB0byBBdXRob3Jpbm8gYXMgSlNPTiBpbiB0aGUgYXV0aCByZXF1ZXN0LiIsInByb3BlcnRpZXMiOnsiZXhwcmVzc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkEgQ29tbW9uIEV4cHJlc3Npb24gTGFuZ3VhZ2UgKENFTCkgZXhwcmVzc2lvbiB0aGF0IGV2YWx1YXRlcyB0byBhIHZhbHVlIHRoYXQgcmVwcmVzZW50cyBhbiBpZGVudGl0eS5cblN0cmluZyBleHByZXNzaW9ucyBhcmUgc3VwcG9ydGVkIChodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS9nb29nbGUvY2VsLWdvL2V4dCNTdHJpbmdzKS4iLCJ0eXBlIjoic3RyaW5nIn0sInNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJwcmlvcml0eSI6eyJkZWZhdWx0IjowLCJkZXNjcmlwdGlvbiI6IlByaW9yaXR5IGdyb3VwIG9mIHRoZSBjb25maWcuXG5BbGwgY29uZmlncyBpbiB0aGUgc2FtZSBwcmlvcml0eSBncm91cCBhcmUgZXZhbHVhdGVkIGNvbmN1cnJlbnRseTsgY29uc2VjdXRpdmUgcHJpb3JpdHkgZ3JvdXBzIGFyZSBldmFsdWF0ZWQgc2VxdWVudGlhbGx5LiIsInR5cGUiOiJpbnRlZ2VyIn0sIndoZW4iOnsiZGVzY3JpcHRpb24iOiJDb25kaXRpb25zIGZvciBBdXRob3Jpbm8gdG8gZW5mb3JjZSB0aGlzIGNvbmZpZy5cbklmIG9taXR0ZWQsIHRoZSBjb25maWcgd2lsbCBiZSBlbmZvcmNlZCBmb3IgYWxsIHJlcXVlc3RzLlxuSWYgcHJlc2VudCwgYWxsIGNvbmRpdGlvbnMgbXVzdCBtYXRjaCBmb3IgdGhlIGNvbmZpZyB0byBiZSBlbmZvcmNlZDsgb3RoZXJ3aXNlLCB0aGUgY29uZmlnIHdpbGwgYmUgc2tpcHBlZC4iLCJpdGVtcyI6eyJvbmVPZiI6W3sicHJvcGVydGllcyI6eyJwYXR0ZXJuUmVmIjp7fX0sInJlcXVpcmVkIjpbInBhdHRlcm5SZWYiXX0seyJwcm9wZXJ0aWVzIjp7Im9wZXJhdG9yIjp7fSwic2VsZWN0b3IiOnt9LCJ2YWx1ZSI6e319LCJyZXF1aXJlZCI6WyJvcGVyYXRvciIsInNlbGVjdG9yIl19LHsicHJvcGVydGllcyI6eyJhbGwiOnt9fSwicmVxdWlyZWQiOlsiYWxsIl19LHsicHJvcGVydGllcyI6eyJhbnkiOnt9fSwicmVxdWlyZWQiOlsiYW55Il19LHsicHJvcGVydGllcyI6eyJwcmVkaWNhdGUiOnt9fSwicmVxdWlyZWQiOlsicHJlZGljYXRlIl19XSwicHJvcGVydGllcyI6eyJhbGwiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2YgcGF0dGVybiBleHByZXNzaW9ucyB0byBiZSBldmFsdWF0ZWQgYXMgYSBsb2dpY2FsIEFORC4iLCJpdGVtcyI6eyJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfSwidHlwZSI6ImFycmF5In0sImFueSI6eyJkZXNjcmlwdGlvbiI6IkEgbGlzdCBvZiBwYXR0ZXJuIGV4cHJlc3Npb25zIHRvIGJlIGV2YWx1YXRlZCBhcyBhIGxvZ2ljYWwgT1IuIiwiaXRlbXMiOnsidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sInR5cGUiOiJhcnJheSJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6IlRoZSBiaW5hcnkgb3BlcmF0b3IgdG8gYmUgYXBwbGllZCB0byB0aGUgY29udGVudCBmZXRjaGVkIGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiwgZm9yIGNvbXBhcmlzb24gd2l0aCBcInZhbHVlXCIuXG5Qb3NzaWJsZSB2YWx1ZXMgYXJlOiBcImVxXCIgKGVxdWFsIHRvKSwgXCJuZXFcIiAobm90IGVxdWFsIHRvKSwgXCJpbmNsXCIgKGluY2x1ZGVzOyBmb3IgYXJyYXlzKSwgXCJleGNsXCIgKGV4Y2x1ZGVzOyBmb3IgYXJyYXlzKSwgXCJtYXRjaGVzXCIgKHJlZ2V4KSIsImVudW0iOlsiZXEiLCJuZXEiLCJpbmNsIiwiZXhjbCIsIm1hdGNoZXMiXSwidHlwZSI6InN0cmluZyJ9LCJwYXR0ZXJuUmVmIjp7ImRlc2NyaXB0aW9uIjoiUmVmZXJlbmNlIHRvIGEgbmFtZWQgc2V0IG9mIHBhdHRlcm4gZXhwcmVzc2lvbnMiLCJ0eXBlIjoic3RyaW5nIn0sInByZWRpY2F0ZSI6eyJkZXNjcmlwdGlvbiI6IkEgQ29tbW9uIEV4cHJlc3Npb24gTGFuZ3VhZ2UgKENFTCkgZXhwcmVzc2lvbiB0aGF0IGV2YWx1YXRlcyB0byBhIGJvb2xlYW4uXG5TdHJpbmcgZXhwcmVzc2lvbnMgYXJlIHN1cHBvcnRlZCAoaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vZ29vZ2xlL2NlbC1nby9leHQjU3RyaW5ncykuIiwidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cbkF1dGhvcmlubyBjdXN0b20gSlNPTiBwYXRoIG1vZGlmaWVycyBhcmUgYWxzbyBzdXBwb3J0ZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSB2YWx1ZSBvZiByZWZlcmVuY2UgZm9yIHRoZSBjb21wYXJpc29uIHdpdGggdGhlIGNvbnRlbnQgZmV0Y2hlZCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04uXG5JZiB1c2VkIHdpdGggdGhlIFwibWF0Y2hlc1wiIG9wZXJhdG9yLCB0aGUgdmFsdWUgbXVzdCBjb21waWxlIHRvIGEgdmFsaWQgR29sYW5nIHJlZ2V4LiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIng1MDkiOnsiZGVzY3JpcHRpb24iOiJBdXRoZW50aWNhdGlvbiBiYXNlZCBvbiBjbGllbnQgWC41MDkgY2VydGlmaWNhdGVzLlxuVGhlIGNlcnRpZmljYXRlcyBwcmVzZW50ZWQgYnkgdGhlIGNsaWVudHMgbXVzdCBiZSBzaWduZWQgYnkgYSB0cnVzdGVkIENBIHdob3NlIGNlcnRpZmljYXRlcyBhcmUgc3RvcmVkIGluIEt1YmVybmV0ZXMgc2VjcmV0cy4iLCJwcm9wZXJ0aWVzIjp7ImFsbE5hbWVzcGFjZXMiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiV2hldGhlciBBdXRob3Jpbm8gc2hvdWxkIGxvb2sgZm9yIFRMUyBzZWNyZXRzIGluIGFsbCBuYW1lc3BhY2VzIG9yIG9ubHkgaW4gdGhlIHNhbWUgbmFtZXNwYWNlIGFzIHRoZSBBdXRoQ29uZmlnLlxuRW5hYmxpbmcgdGhpcyBvcHRpb24gaW4gbmFtZXNwYWNlZCBBdXRob3Jpbm8gaW5zdGFuY2VzIGhhcyBubyBlZmZlY3QuIiwidHlwZSI6ImJvb2xlYW4ifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJMYWJlbCBzZWxlY3RvciB1c2VkIGJ5IEF1dGhvcmlubyB0byBtYXRjaCBzZWNyZXRzIGZyb20gdGhlIGNsdXN0ZXIgc3RvcmluZyB0cnVzdGVkIENBIGNlcnRpZmljYXRlcyB0byB2YWxpZGF0ZVxuY2xpZW50cyB0cnlpbmcgdG8gYXV0aGVudGljYXRlIHRvIHRoaXMgc2VydmljZSIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdFxucmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWNcbm1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVsc1xubWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlXG5vcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJzZWxlY3RvciJdLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiQXV0aGVudGljYXRpb24gY29uZmlncy5cbkF0IGxlYXN0IG9uZSBjb25maWcgTVVTVCBldmFsdWF0ZSB0byBhIHZhbGlkIGlkZW50aXR5IG9iamVjdCBmb3IgdGhlIGF1dGggcmVxdWVzdCB0byBiZSBzdWNjZXNzZnVsLiIsInR5cGUiOiJvYmplY3QifSwiYXV0aG9yaXphdGlvbiI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJvbmVPZiI6W3sicHJvcGVydGllcyI6eyJvcGEiOnt9fSwicmVxdWlyZWQiOlsib3BhIl19LHsicHJvcGVydGllcyI6eyJwYXR0ZXJuTWF0Y2hpbmciOnt9fSwicmVxdWlyZWQiOlsicGF0dGVybk1hdGNoaW5nIl19LHsicHJvcGVydGllcyI6eyJrdWJlcm5ldGVzU3ViamVjdEFjY2Vzc1JldmlldyI6e319LCJyZXF1aXJlZCI6WyJrdWJlcm5ldGVzU3ViamVjdEFjY2Vzc1JldmlldyJdfSx7InByb3BlcnRpZXMiOnsic3BpY2VkYiI6e319LCJyZXF1aXJlZCI6WyJzcGljZWRiIl19XSwicHJvcGVydGllcyI6eyJjYWNoZSI6eyJkZXNjcmlwdGlvbiI6IkNhY2hpbmcgb3B0aW9ucyBmb3IgdGhlIHJlc29sdmVkIG9iamVjdCByZXR1cm5lZCB3aGVuIGFwcGx5aW5nIHRoaXMgY29uZmlnLlxuT21pdCBpdCB0byBhdm9pZCBjYWNoaW5nIG9iamVjdHMgZm9yIHRoaXMgY29uZmlnLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiS2V5IHVzZWQgdG8gc3RvcmUgdGhlIGVudHJ5IGluIHRoZSBjYWNoZS5cblRoZSByZXNvbHZlZCBrZXkgbXVzdCBiZSB1bmlxdWUgd2l0aGluIHRoZSBzY29wZSBvZiB0aGlzIHBhcnRpY3VsYXIgY29uZmlnLiIsInByb3BlcnRpZXMiOnsiZXhwcmVzc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkEgQ29tbW9uIEV4cHJlc3Npb24gTGFuZ3VhZ2UgKENFTCkgZXhwcmVzc2lvbiB0aGF0IGV2YWx1YXRlcyB0byBhIHZhbHVlLlxuU3RyaW5nIGV4cHJlc3Npb25zIGFyZSBzdXBwb3J0ZWQgKGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL2dvb2dsZS9jZWwtZ28vZXh0I1N0cmluZ3MpLiIsInR5cGUiOiJzdHJpbmcifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifSwidHRsIjp7ImRlZmF1bHQiOjYwLCJkZXNjcmlwdGlvbiI6IkR1cmF0aW9uIChpbiBzZWNvbmRzKSBvZiB0aGUgZXh0ZXJuYWwgZGF0YSBpbiB0aGUgY2FjaGUgYmVmb3JlIHB1bGxlZCBhZ2FpbiBmcm9tIHRoZSBzb3VyY2UuIiwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbImtleSJdLCJ0eXBlIjoib2JqZWN0In0sImt1YmVybmV0ZXNTdWJqZWN0QWNjZXNzUmV2aWV3Ijp7ImRlc2NyaXB0aW9uIjoiQXV0aG9yaXphdGlvbiBieSBLdWJlcm5ldGVzIFN1YmplY3RBY2Nlc3NSZXZpZXciLCJwcm9wZXJ0aWVzIjp7ImF1dGhvcml6YXRpb25Hcm91cHMiOnsiZGVzY3JpcHRpb24iOiJHcm91cHMgdG8gY2hlY2sgZm9yIGV4aXN0aW5nIHBlcm1pc3Npb24gaW4gdGhlIEt1YmVybmV0ZXMgUkJBQyBhbHRlcm5hdGl2ZWx5IHRvIGEgc3BlY2lmaWMgdXNlci4gVGhpcyBpcyB0eXBpY2FsbHkgb2J0YWluZWQgZnJvbSBhIGxpc3Qgb2YgZ3JvdXBzIHRoZSB1c2VyIGlzIGEgbWVtYmVyIG9mLiBNdXN0IGJlIGEgc3RhdGljIGxpc3Qgb2YgZ3JvdXAgbmFtZXMgb3IgZHluYW1pY2FsbHkgcmVzb2x2ZSB0byBvbmUgZnJvbSB0aGUgQXV0aG9yaXphdGlvbiBKU09OLiIsInByb3BlcnRpZXMiOnsiZXhwcmVzc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkEgQ29tbW9uIEV4cHJlc3Npb24gTGFuZ3VhZ2UgKENFTCkgZXhwcmVzc2lvbiB0aGF0IGV2YWx1YXRlcyB0byBhIHZhbHVlLlxuU3RyaW5nIGV4cHJlc3Npb25zIGFyZSBzdXBwb3J0ZWQgKGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL2dvb2dsZS9jZWwtZ28vZXh0I1N0cmluZ3MpLiIsInR5cGUiOiJzdHJpbmcifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifSwiZ3JvdXBzIjp7ImRlc2NyaXB0aW9uIjoiR3JvdXBzIHRoZSB1c2VyIG11c3QgYmUgYSBtZW1iZXIgb2Ygb3IsIGlmIGB1c2VyYCBpcyBvbWl0dGVkLCB0aGUgZ3JvdXBzIHRvIGNoZWNrIGZvciBhdXRob3JpemF0aW9uIGluIHRoZSBLdWJlcm5ldGVzIFJCQUMuXG5EZXByZWNhdGVkOiBVc2UgYXV0aG9yaXphdGlvbkdyb3VwcyBpbnN0ZWFkLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sInJlc291cmNlQXR0cmlidXRlcyI6eyJkZXNjcmlwdGlvbiI6IlVzZSByZXNvdXJjZUF0dHJpYnV0ZXMgdG8gY2hlY2sgcGVybWlzc2lvbnMgb24gS3ViZXJuZXRlcyByZXNvdXJjZXMuXG5JZiBvbWl0dGVkLCBpdCBwZXJmb3JtcyBhIG5vbi1yZXNvdXJjZSBTdWJqZWN0QWNjZXNzUmV2aWV3LCB3aXRoIHZlcmIgYW5kIHBhdGggaW5mZXJyZWQgZnJvbSB0aGUgcmVxdWVzdC4iLCJwcm9wZXJ0aWVzIjp7Imdyb3VwIjp7ImRlc2NyaXB0aW9uIjoiQVBJIGdyb3VwIG9mIHRoZSByZXNvdXJjZS5cblVzZSAnKicgZm9yIGFsbCBBUEkgZ3JvdXBzLiIsInByb3BlcnRpZXMiOnsiZXhwcmVzc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkEgQ29tbW9uIEV4cHJlc3Npb24gTGFuZ3VhZ2UgKENFTCkgZXhwcmVzc2lvbiB0aGF0IGV2YWx1YXRlcyB0byBhIHZhbHVlLlxuU3RyaW5nIGV4cHJlc3Npb25zIGFyZSBzdXBwb3J0ZWQgKGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL2dvb2dsZS9jZWwtZ28vZXh0I1N0cmluZ3MpLiIsInR5cGUiOiJzdHJpbmcifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6IlJlc291cmNlIG5hbWVcbk9taXQgaXQgdG8gY2hlY2sgZm9yIGF1dGhvcml6YXRpb24gb24gYWxsIHJlc291cmNlcyBvZiB0aGUgc3BlY2lmaWVkIGtpbmQuIiwicHJvcGVydGllcyI6eyJleHByZXNzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQSBDb21tb24gRXhwcmVzc2lvbiBMYW5ndWFnZSAoQ0VMKSBleHByZXNzaW9uIHRoYXQgZXZhbHVhdGVzIHRvIGEgdmFsdWUuXG5TdHJpbmcgZXhwcmVzc2lvbnMgYXJlIHN1cHBvcnRlZCAoaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vZ29vZ2xlL2NlbC1nby9leHQjU3RyaW5ncykuIiwidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlNpbXBsZSBwYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpIG9yIGEgc3RyaW5nIHRlbXBsYXRlIHdpdGggdmFyaWFibGVzIHRoYXQgcmVzb2x2ZSB0byBwYXR0ZXJucyAoZS5nLiBcIkhlbGxvLCB7YXV0aC5pZGVudGl0eS5uYW1lfSFcIikuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cblRoZSBmb2xsb3dpbmcgQXV0aG9yaW5vIGN1c3RvbSBtb2RpZmllcnMgYXJlIHN1cHBvcnRlZDogQGV4dHJhY3Q6e3NlcDpcIiBcIixwb3M6MH0sIEByZXBsYWNle29sZDpcIlwiLG5ldzpcIlwifSwgQGNhc2U6dXBwZXJ8bG93ZXIsIEBiYXNlNjQ6ZW5jb2RlfGRlY29kZSBhbmQgQHN0cmlwLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJTdGF0aWMgdmFsdWUiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9LCJuYW1lc3BhY2UiOnsiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2Ugd2hlcmUgdGhlIHVzZXIgbXVzdCBoYXZlIHBlcm1pc3Npb25zIG9uIHRoZSByZXNvdXJjZS4iLCJwcm9wZXJ0aWVzIjp7ImV4cHJlc3Npb24iOnsiZGVzY3JpcHRpb24iOiJBIENvbW1vbiBFeHByZXNzaW9uIExhbmd1YWdlIChDRUwpIGV4cHJlc3Npb24gdGhhdCBldmFsdWF0ZXMgdG8gYSB2YWx1ZS5cblN0cmluZyBleHByZXNzaW9ucyBhcmUgc3VwcG9ydGVkIChodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS9nb29nbGUvY2VsLWdvL2V4dCNTdHJpbmdzKS4iLCJ0eXBlIjoic3RyaW5nIn0sInNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sInJlc291cmNlIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2Uga2luZFxuVXNlICcqJyBmb3IgYWxsIHJlc291cmNlIGtpbmRzLiIsInByb3BlcnRpZXMiOnsiZXhwcmVzc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkEgQ29tbW9uIEV4cHJlc3Npb24gTGFuZ3VhZ2UgKENFTCkgZXhwcmVzc2lvbiB0aGF0IGV2YWx1YXRlcyB0byBhIHZhbHVlLlxuU3RyaW5nIGV4cHJlc3Npb25zIGFyZSBzdXBwb3J0ZWQgKGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL2dvb2dsZS9jZWwtZ28vZXh0I1N0cmluZ3MpLiIsInR5cGUiOiJzdHJpbmcifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifSwic3VicmVzb3VyY2UiOnsiZGVzY3JpcHRpb24iOiJTdWJyZXNvdXJjZSBraW5kIiwicHJvcGVydGllcyI6eyJleHByZXNzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQSBDb21tb24gRXhwcmVzc2lvbiBMYW5ndWFnZSAoQ0VMKSBleHByZXNzaW9uIHRoYXQgZXZhbHVhdGVzIHRvIGEgdmFsdWUuXG5TdHJpbmcgZXhwcmVzc2lvbnMgYXJlIHN1cHBvcnRlZCAoaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vZ29vZ2xlL2NlbC1nby9leHQjU3RyaW5ncykuIiwidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlNpbXBsZSBwYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpIG9yIGEgc3RyaW5nIHRlbXBsYXRlIHdpdGggdmFyaWFibGVzIHRoYXQgcmVzb2x2ZSB0byBwYXR0ZXJucyAoZS5nLiBcIkhlbGxvLCB7YXV0aC5pZGVudGl0eS5uYW1lfSFcIikuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cblRoZSBmb2xsb3dpbmcgQXV0aG9yaW5vIGN1c3RvbSBtb2RpZmllcnMgYXJlIHN1cHBvcnRlZDogQGV4dHJhY3Q6e3NlcDpcIiBcIixwb3M6MH0sIEByZXBsYWNle29sZDpcIlwiLG5ldzpcIlwifSwgQGNhc2U6dXBwZXJ8bG93ZXIsIEBiYXNlNjQ6ZW5jb2RlfGRlY29kZSBhbmQgQHN0cmlwLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJTdGF0aWMgdmFsdWUiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9LCJ2ZXJiIjp7ImRlc2NyaXB0aW9uIjoiVmVyYiB0byBjaGVjayBmb3IgYXV0aG9yaXphdGlvbiBvbiB0aGUgcmVzb3VyY2UuXG5Vc2UgJyonIGZvciBhbGwgdmVyYnMuIiwicHJvcGVydGllcyI6eyJleHByZXNzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQSBDb21tb24gRXhwcmVzc2lvbiBMYW5ndWFnZSAoQ0VMKSBleHByZXNzaW9uIHRoYXQgZXZhbHVhdGVzIHRvIGEgdmFsdWUuXG5TdHJpbmcgZXhwcmVzc2lvbnMgYXJlIHN1cHBvcnRlZCAoaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vZ29vZ2xlL2NlbC1nby9leHQjU3RyaW5ncykuIiwidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlNpbXBsZSBwYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpIG9yIGEgc3RyaW5nIHRlbXBsYXRlIHdpdGggdmFyaWFibGVzIHRoYXQgcmVzb2x2ZSB0byBwYXR0ZXJucyAoZS5nLiBcIkhlbGxvLCB7YXV0aC5pZGVudGl0eS5uYW1lfSFcIikuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cblRoZSBmb2xsb3dpbmcgQXV0aG9yaW5vIGN1c3RvbSBtb2RpZmllcnMgYXJlIHN1cHBvcnRlZDogQGV4dHJhY3Q6e3NlcDpcIiBcIixwb3M6MH0sIEByZXBsYWNle29sZDpcIlwiLG5ldzpcIlwifSwgQGNhc2U6dXBwZXJ8bG93ZXIsIEBiYXNlNjQ6ZW5jb2RlfGRlY29kZSBhbmQgQHN0cmlwLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJTdGF0aWMgdmFsdWUiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ1c2VyIjp7ImRlc2NyaXB0aW9uIjoiVXNlciB0byBjaGVjayBmb3IgYXV0aG9yaXphdGlvbiBpbiB0aGUgS3ViZXJuZXRlcyBSQkFDLlxuT21pdCBpdCB0byBjaGVjayBmb3IgZ3JvdXAgYXV0aG9yaXphdGlvbiBvbmx5LiIsInByb3BlcnRpZXMiOnsiZXhwcmVzc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkEgQ29tbW9uIEV4cHJlc3Npb24gTGFuZ3VhZ2UgKENFTCkgZXhwcmVzc2lvbiB0aGF0IGV2YWx1YXRlcyB0byBhIHZhbHVlLlxuU3RyaW5nIGV4cHJlc3Npb25zIGFyZSBzdXBwb3J0ZWQgKGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL2dvb2dsZS9jZWwtZ28vZXh0I1N0cmluZ3MpLiIsInR5cGUiOiJzdHJpbmcifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwibWV0cmljcyI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJXaGV0aGVyIHRoaXMgY29uZmlnIHNob3VsZCBnZW5lcmF0ZSBpbmRpdmlkdWFsIG9ic2VydmFiaWxpdHkgbWV0cmljcyIsInR5cGUiOiJib29sZWFuIn0sIm9wYSI6eyJkZXNjcmlwdGlvbiI6Ik9wZW4gUG9saWN5IEFnZW50IChPUEEpIFJlZ28gcG9saWN5LiIsInByb3BlcnRpZXMiOnsiYWxsVmFsdWVzIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IlJldHVybnMgdGhlIHZhbHVlIG9mIGFsbCBSZWdvIHJ1bGVzIGluIHRoZSB2aXJ0dWFsIGRvY3VtZW50LiBWYWx1ZXMgY2FuIGJlIHJlYWQgaW4gc3Vic2VxdWVudCBldmFsdWF0b3JzL3BoYXNlcyBvZiB0aGUgQXV0aCBQaXBlbGluZS5cbk90aGVyd2lzZSwgb25seSB0aGUgZGVmYXVsdCBgYWxsb3dgIHJ1bGUgd2lsbCBiZSBleHBvc2VkLlxuUmV0dXJuaW5nIGFsbCBSZWdvIHJ1bGVzIGNhbiBhZmZlY3QgcGVyZm9ybWFuY2Ugb2YgT1BBIHBvbGljaWVzIGR1cmluZyByZWNvbmNpbGlhdGlvbiAocG9saWN5IHByZWNvbXBpbGUpIGFuZCBhdCBydW50aW1lLiIsInR5cGUiOiJib29sZWFuIn0sImV4dGVybmFsUG9saWN5Ijp7ImRlc2NyaXB0aW9uIjoiU2V0dGluZ3MgZm9yIGZldGNoaW5nIHRoZSBPUEEgcG9saWN5IGZyb20gYW4gZXh0ZXJuYWwgcmVnaXN0cnkuXG5Vc2UgaXQgYWx0ZXJuYXRpdmVseSB0byAncmVnbycuXG5Gb3IgdGhlIGNvbmZpZ3VyYXRpb25zIG9mIHRoZSBIVFRQIHJlcXVlc3QsIHRoZSBmb2xsb3dpbmcgb3B0aW9ucyBhcmUgbm90IGltcGxlbWVudGVkOiAnbWV0aG9kJywgJ2JvZHknLCAnYm9keVBhcmFtZXRlcnMnLFxuJ2NvbnRlbnRUeXBlJywgJ2hlYWRlcnMnLCAnb2F1dGgyJy4gVXNlIGl0IG9ubHkgd2l0aDogJ3VybCcsICdzaGFyZWRTZWNyZXQnLCAnY3JlZGVudGlhbHMnLiIsInByb3BlcnRpZXMiOnsiYm9keSI6eyJkZXNjcmlwdGlvbiI6IlJhdyBib2R5IG9mIHRoZSBIVFRQIHJlcXVlc3QuXG5TdXBlcnNlZGVzICdib2R5UGFyYW1ldGVycyc7IHVzZSBlaXRoZXIgb25lIG9yIHRoZSBvdGhlci5cblVzZSBpdCB3aXRoIG1ldGhvZD1QT1NUOyBmb3IgR0VUIHJlcXVlc3RzLCBzZXQgcGFyYW1ldGVycyBhcyBxdWVyeSBzdHJpbmcgaW4gdGhlICdlbmRwb2ludCcgKHBsYWNlaG9sZGVycyBjYW4gYmUgdXNlZCkuIiwicHJvcGVydGllcyI6eyJleHByZXNzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQSBDb21tb24gRXhwcmVzc2lvbiBMYW5ndWFnZSAoQ0VMKSBleHByZXNzaW9uIHRoYXQgZXZhbHVhdGVzIHRvIGEgdmFsdWUuXG5TdHJpbmcgZXhwcmVzc2lvbnMgYXJlIHN1cHBvcnRlZCAoaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vZ29vZ2xlL2NlbC1nby9leHQjU3RyaW5ncykuIiwidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlNpbXBsZSBwYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpIG9yIGEgc3RyaW5nIHRlbXBsYXRlIHdpdGggdmFyaWFibGVzIHRoYXQgcmVzb2x2ZSB0byBwYXR0ZXJucyAoZS5nLiBcIkhlbGxvLCB7YXV0aC5pZGVudGl0eS5uYW1lfSFcIikuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cblRoZSBmb2xsb3dpbmcgQXV0aG9yaW5vIGN1c3RvbSBtb2RpZmllcnMgYXJlIHN1cHBvcnRlZDogQGV4dHJhY3Q6e3NlcDpcIiBcIixwb3M6MH0sIEByZXBsYWNle29sZDpcIlwiLG5ldzpcIlwifSwgQGNhc2U6dXBwZXJ8bG93ZXIsIEBiYXNlNjQ6ZW5jb2RlfGRlY29kZSBhbmQgQHN0cmlwLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJTdGF0aWMgdmFsdWUiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9LCJib2R5UGFyYW1ldGVycyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJwcm9wZXJ0aWVzIjp7ImV4cHJlc3Npb24iOnsiZGVzY3JpcHRpb24iOiJBIENvbW1vbiBFeHByZXNzaW9uIExhbmd1YWdlIChDRUwpIGV4cHJlc3Npb24gdGhhdCBldmFsdWF0ZXMgdG8gYSB2YWx1ZS5cblN0cmluZyBleHByZXNzaW9ucyBhcmUgc3VwcG9ydGVkIChodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS9nb29nbGUvY2VsLWdvL2V4dCNTdHJpbmdzKS4iLCJ0eXBlIjoic3RyaW5nIn0sInNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiQ3VzdG9tIHBhcmFtZXRlcnMgdG8gZW5jb2RlIGluIHRoZSBib2R5IG9mIHRoZSBIVFRQIHJlcXVlc3QuXG5TdXBlcnNlZGVkIGJ5ICdib2R5JzsgdXNlIGVpdGhlciBvbmUgb3IgdGhlIG90aGVyLlxuVXNlIGl0IHdpdGggbWV0aG9kPVBPU1Q7IGZvciBHRVQgcmVxdWVzdHMsIHNldCBwYXJhbWV0ZXJzIGFzIHF1ZXJ5IHN0cmluZyBpbiB0aGUgJ2VuZHBvaW50JyAocGxhY2Vob2xkZXJzIGNhbiBiZSB1c2VkKS4iLCJ0eXBlIjoib2JqZWN0In0sImNvbnRlbnRUeXBlIjp7ImRlZmF1bHQiOiJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQiLCJkZXNjcmlwdGlvbiI6IkNvbnRlbnQtVHlwZSBvZiB0aGUgcmVxdWVzdCBib2R5LiBTaGFwZXMgaG93ICdib2R5UGFyYW1ldGVycycgYXJlIGVuY29kZWQuXG5Vc2UgaXQgd2l0aCBtZXRob2Q9UE9TVDsgZm9yIEdFVCByZXF1ZXN0cywgQ29udGVudC1UeXBlIGlzIGF1dG9tYXRpY2FsbHkgc2V0IHRvICd0ZXh0L3BsYWluJy4iLCJlbnVtIjpbImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIsImFwcGxpY2F0aW9uL2pzb24iXSwidHlwZSI6InN0cmluZyJ9LCJjcmVkZW50aWFscyI6eyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgd2hlcmUgY2xpZW50IGNyZWRlbnRpYWxzIHdpbGwgYmUgcGFzc2VkIGluIHRoZSByZXF1ZXN0IHRvIHRoZSBzZXJ2aWNlLlxuSWYgb21pdHRlZCwgaXQgZGVmYXVsdHMgdG8gY2xpZW50IGNyZWRlbnRpYWxzIHBhc3NlZCBpbiB0aGUgSFRUUCBBdXRob3JpemF0aW9uIGhlYWRlciBhbmQgdGhlIFwiQmVhcmVyXCIgcHJlZml4IGV4cGVjdGVkIHByZXBlbmRlZCB0byB0aGUgc2VjcmV0IHZhbHVlLiIsInByb3BlcnRpZXMiOnsiYXV0aG9yaXphdGlvbkhlYWRlciI6eyJwcm9wZXJ0aWVzIjp7InByZWZpeCI6eyJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImNvb2tpZSI6eyJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sImN1c3RvbUhlYWRlciI6eyJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInF1ZXJ5U3RyaW5nIjp7InByb3BlcnRpZXMiOnsibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwiaGVhZGVycyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJwcm9wZXJ0aWVzIjp7ImV4cHJlc3Npb24iOnsiZGVzY3JpcHRpb24iOiJBIENvbW1vbiBFeHByZXNzaW9uIExhbmd1YWdlIChDRUwpIGV4cHJlc3Npb24gdGhhdCBldmFsdWF0ZXMgdG8gYSB2YWx1ZS5cblN0cmluZyBleHByZXNzaW9ucyBhcmUgc3VwcG9ydGVkIChodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS9nb29nbGUvY2VsLWdvL2V4dCNTdHJpbmdzKS4iLCJ0eXBlIjoic3RyaW5nIn0sInNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiQ3VzdG9tIGhlYWRlcnMgaW4gdGhlIEhUVFAgcmVxdWVzdC4iLCJ0eXBlIjoib2JqZWN0In0sIm1ldGhvZCI6eyJkZWZhdWx0IjoiR0VUIiwiZGVzY3JpcHRpb24iOiJIVFRQIHZlcmIgdXNlZCBpbiB0aGUgcmVxdWVzdCB0byB0aGUgc2VydmljZS4gQWNjZXB0ZWQgdmFsdWVzOiBHRVQgKGRlZmF1bHQpLCBQT1NULlxuV2hlbiB0aGUgcmVxdWVzdCBtZXRob2QgaXMgUE9TVCwgdGhlIGF1dGhvcml6YXRpb24gSlNPTiBpcyBwYXNzZWQgaW4gdGhlIGJvZHkgb2YgdGhlIHJlcXVlc3QuIiwiZW51bSI6WyJHRVQiLCJQT1NUIiwiUFVUIiwiUEFUQ0giLCJERUxFVEUiLCJIRUFEIiwiT1BUSU9OUyIsIkNPTk5FQ1QiLCJUUkFDRSJdLCJ0eXBlIjoic3RyaW5nIn0sIm9hdXRoMiI6eyJkZXNjcmlwdGlvbiI6IkF1dGhlbnRpY2F0aW9uIHdpdGggdGhlIEhUVFAgc2VydmljZSBieSBPQXV0aDIgQ2xpZW50IENyZWRlbnRpYWxzIGdyYW50LiIsInByb3BlcnRpZXMiOnsiY2FjaGUiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJDYWNoZXMgYW5kIHJldXNlcyB0aGUgdG9rZW4gdW50aWwgZXhwaXJlZC5cblNldCBpdCB0byBmYWxzZSB0byBmb3JjZSBmZXRjaCB0aGUgdG9rZW4gYXQgZXZlcnkgYXV0aG9yaXphdGlvbiByZXF1ZXN0IHJlZ2FyZGxlc3Mgb2YgZXhwaXJhdGlvbi4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJjbGllbnRJZCI6eyJkZXNjcmlwdGlvbiI6Ik9BdXRoMiBDbGllbnQgSUQuIiwidHlwZSI6InN0cmluZyJ9LCJjbGllbnRTZWNyZXRSZWYiOnsiZGVzY3JpcHRpb24iOiJSZWZlcmVuY2UgdG8gYSBLdWJlcmVudGVzIFNlY3JldCBrZXkgdGhhdCBzdG9yZXMgdGhhdCBPQXV0aDIgQ2xpZW50IFNlY3JldC4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBrZXkgb2YgdGhlIHNlY3JldCB0byBzZWxlY3QgZnJvbS4gIE11c3QgYmUgYSB2YWxpZCBzZWNyZXQga2V5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBuYW1lIG9mIHRoZSBzZWNyZXQgaW4gdGhlIEF1dGhvcmlubydzIG5hbWVzcGFjZSB0byBzZWxlY3QgZnJvbS4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwiZXh0cmFQYXJhbXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Ik9wdGlvbmFsIGV4dHJhIHBhcmFtZXRlcnMgZm9yIHRoZSByZXF1ZXN0cyB0byB0aGUgdG9rZW4gVVJMLiIsInR5cGUiOiJvYmplY3QifSwic2NvcGVzIjp7ImRlc2NyaXB0aW9uIjoiT3B0aW9uYWwgc2NvcGVzIGZvciB0aGUgY2xpZW50IGNyZWRlbnRpYWxzIGdyYW50LCBpZiBzdXBwb3J0ZWQgYnkgaGUgT0F1dGgyIHNlcnZlci4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJ0b2tlblVybCI6eyJkZXNjcmlwdGlvbiI6IlRva2VuIGVuZHBvaW50IFVSTCBvZiB0aGUgT0F1dGgyIHJlc291cmNlIHNlcnZlci4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJjbGllbnRJZCIsImNsaWVudFNlY3JldFJlZiIsInRva2VuVXJsIl0sInR5cGUiOiJvYmplY3QifSwic2hhcmVkU2VjcmV0UmVmIjp7ImRlc2NyaXB0aW9uIjoiUmVmZXJlbmNlIHRvIGEgU2VjcmV0IGtleSB3aG9zZSB2YWx1ZSB3aWxsIGJlIHBhc3NlZCBieSBBdXRob3Jpbm8gaW4gdGhlIHJlcXVlc3QuXG5UaGUgSFRUUCBzZXJ2aWNlIGNhbiB1c2UgdGhlIHNoYXJlZCBzZWNyZXQgdG8gYXV0aGVudGljYXRlIHRoZSBvcmlnaW4gb2YgdGhlIHJlcXVlc3QuXG5JZ25vcmVkIGlmIHVzZWQgdG9nZXRoZXIgd2l0aCBvYXV0aDIuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUga2V5IG9mIHRoZSBzZWNyZXQgdG8gc2VsZWN0IGZyb20uICBNdXN0IGJlIGEgdmFsaWQgc2VjcmV0IGtleS4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJUaGUgbmFtZSBvZiB0aGUgc2VjcmV0IGluIHRoZSBBdXRob3Jpbm8ncyBuYW1lc3BhY2UgdG8gc2VsZWN0IGZyb20uIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsia2V5IiwibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR0bCI6eyJkZXNjcmlwdGlvbiI6IkR1cmF0aW9uIChpbiBzZWNvbmRzKSBvZiB0aGUgZXh0ZXJuYWwgZGF0YSBpbiB0aGUgY2FjaGUgYmVmb3JlIHB1bGxlZCBhZ2FpbiBmcm9tIHRoZSBzb3VyY2UuIiwidHlwZSI6ImludGVnZXIifSwidXJsIjp7ImRlc2NyaXB0aW9uIjoiRW5kcG9pbnQgVVJMIG9mIHRoZSBIVFRQIHNlcnZpY2UuXG5UaGUgdmFsdWUgY2FuIGluY2x1ZGUgdmFyaWFibGUgcGxhY2Vob2xkZXJzIGluIHRoZSBmb3JtYXQgXCJ7c2VsZWN0b3J9XCIsIHdoZXJlIFwic2VsZWN0b3JcIiBpcyBhbnkgcGF0dGVybiBzdXBwb3J0ZWRcbmJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gYW5kIHNlbGVjdHMgdmFsdWUgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OLlxuRS5nLiBodHRwczovL2V4dC1hdXRoLXNlcnZlci5pby9tZXRhZGF0YT9wPXtyZXF1ZXN0LnBhdGh9IiwidHlwZSI6InN0cmluZyJ9LCJ1cmxFeHByZXNzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQSBDb21tb24gRXhwcmVzc2lvbiBMYW5ndWFnZSAoQ0VMKSBleHByZXNzaW9uIHRoYXQgZXZhbHVhdGVzIHRvIGEgc3RyaW5nIGVuZHBvaW50IFVSTCBvZiB0aGUgSFRUUCBzZXJ2aWNlIHRvIGNhbGwuXG5TdHJpbmcgZXhwcmVzc2lvbnMgYXJlIHN1cHBvcnRlZCAoaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vZ29vZ2xlL2NlbC1nby9leHQjU3RyaW5ncykuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJyZWdvIjp7ImRlc2NyaXB0aW9uIjoiQXV0aG9yaXphdGlvbiBwb2xpY3kgYXMgYSBSZWdvIGxhbmd1YWdlIGRvY3VtZW50LlxuVGhlIFJlZ28gZG9jdW1lbnQgbXVzdCBpbmNsdWRlIHRoZSBcImFsbG93XCIgY29uZGl0aW9uLCBzZXQgYnkgQXV0aG9yaW5vIHRvIFwiZmFsc2VcIiBieSBkZWZhdWx0IChpLmUuIHJlcXVlc3RzIGFyZSB1bmF1dGhvcml6ZWQgdW5sZXNzIGNoYW5nZWQpLlxuVGhlIFJlZ28gZG9jdW1lbnQgbXVzdCBOT1QgaW5jbHVkZSB0aGUgXCJwYWNrYWdlXCIgZGVjbGFyYXRpb24gaW4gbGluZSAxLiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicGF0dGVybk1hdGNoaW5nIjp7ImRlc2NyaXB0aW9uIjoiUGF0dGVybi1tYXRjaGluZyBhdXRob3JpemF0aW9uIHJ1bGVzLiIsInByb3BlcnRpZXMiOnsicGF0dGVybnMiOnsiaXRlbXMiOnsib25lT2YiOlt7InByb3BlcnRpZXMiOnsicGF0dGVyblJlZiI6e319LCJyZXF1aXJlZCI6WyJwYXR0ZXJuUmVmIl19LHsicHJvcGVydGllcyI6eyJvcGVyYXRvciI6e30sInNlbGVjdG9yIjp7fSwidmFsdWUiOnt9fSwicmVxdWlyZWQiOlsib3BlcmF0b3IiLCJzZWxlY3RvciJdfSx7InByb3BlcnRpZXMiOnsiYWxsIjp7fX0sInJlcXVpcmVkIjpbImFsbCJdfSx7InByb3BlcnRpZXMiOnsiYW55Ijp7fX0sInJlcXVpcmVkIjpbImFueSJdfSx7InByb3BlcnRpZXMiOnsicHJlZGljYXRlIjp7fX0sInJlcXVpcmVkIjpbInByZWRpY2F0ZSJdfV0sInByb3BlcnRpZXMiOnsiYWxsIjp7ImRlc2NyaXB0aW9uIjoiQSBsaXN0IG9mIHBhdHRlcm4gZXhwcmVzc2lvbnMgdG8gYmUgZXZhbHVhdGVkIGFzIGEgbG9naWNhbCBBTkQuIiwiaXRlbXMiOnsidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sInR5cGUiOiJhcnJheSJ9LCJhbnkiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2YgcGF0dGVybiBleHByZXNzaW9ucyB0byBiZSBldmFsdWF0ZWQgYXMgYSBsb2dpY2FsIE9SLiIsIml0ZW1zIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJ0eXBlIjoiYXJyYXkifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJUaGUgYmluYXJ5IG9wZXJhdG9yIHRvIGJlIGFwcGxpZWQgdG8gdGhlIGNvbnRlbnQgZmV0Y2hlZCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04sIGZvciBjb21wYXJpc29uIHdpdGggXCJ2YWx1ZVwiLlxuUG9zc2libGUgdmFsdWVzIGFyZTogXCJlcVwiIChlcXVhbCB0byksIFwibmVxXCIgKG5vdCBlcXVhbCB0byksIFwiaW5jbFwiIChpbmNsdWRlczsgZm9yIGFycmF5cyksIFwiZXhjbFwiIChleGNsdWRlczsgZm9yIGFycmF5cyksIFwibWF0Y2hlc1wiIChyZWdleCkiLCJlbnVtIjpbImVxIiwibmVxIiwiaW5jbCIsImV4Y2wiLCJtYXRjaGVzIl0sInR5cGUiOiJzdHJpbmcifSwicGF0dGVyblJlZiI6eyJkZXNjcmlwdGlvbiI6IlJlZmVyZW5jZSB0byBhIG5hbWVkIHNldCBvZiBwYXR0ZXJuIGV4cHJlc3Npb25zIiwidHlwZSI6InN0cmluZyJ9LCJwcmVkaWNhdGUiOnsiZGVzY3JpcHRpb24iOiJBIENvbW1vbiBFeHByZXNzaW9uIExhbmd1YWdlIChDRUwpIGV4cHJlc3Npb24gdGhhdCBldmFsdWF0ZXMgdG8gYSBib29sZWFuLlxuU3RyaW5nIGV4cHJlc3Npb25zIGFyZSBzdXBwb3J0ZWQgKGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL2dvb2dsZS9jZWwtZ28vZXh0I1N0cmluZ3MpLiIsInR5cGUiOiJzdHJpbmcifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJQYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5BdXRob3Jpbm8gY3VzdG9tIEpTT04gcGF0aCBtb2RpZmllcnMgYXJlIGFsc28gc3VwcG9ydGVkLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJUaGUgdmFsdWUgb2YgcmVmZXJlbmNlIGZvciB0aGUgY29tcGFyaXNvbiB3aXRoIHRoZSBjb250ZW50IGZldGNoZWQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OLlxuSWYgdXNlZCB3aXRoIHRoZSBcIm1hdGNoZXNcIiBvcGVyYXRvciwgdGhlIHZhbHVlIG11c3QgY29tcGlsZSB0byBhIHZhbGlkIEdvbGFuZyByZWdleC4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsicGF0dGVybnMiXSwidHlwZSI6Im9iamVjdCJ9LCJwcmlvcml0eSI6eyJkZWZhdWx0IjowLCJkZXNjcmlwdGlvbiI6IlByaW9yaXR5IGdyb3VwIG9mIHRoZSBjb25maWcuXG5BbGwgY29uZmlncyBpbiB0aGUgc2FtZSBwcmlvcml0eSBncm91cCBhcmUgZXZhbHVhdGVkIGNvbmN1cnJlbnRseTsgY29uc2VjdXRpdmUgcHJpb3JpdHkgZ3JvdXBzIGFyZSBldmFsdWF0ZWQgc2VxdWVudGlhbGx5LiIsInR5cGUiOiJpbnRlZ2VyIn0sInNwaWNlZGIiOnsiZGVzY3JpcHRpb24iOiJBdXRob3JpemF0aW9uIGRlY2lzaW9uIGRlbGVnYXRlZCB0byBleHRlcm5hbCBBdXRoemVkL1NwaWNlREIgc2VydmVyLiIsInByb3BlcnRpZXMiOnsiZW5kcG9pbnQiOnsiZGVzY3JpcHRpb24iOiJIb3N0bmFtZSBhbmQgcG9ydCBudW1iZXIgdG8gdGhlIEdSUEMgaW50ZXJmYWNlIG9mIHRoZSBTcGljZURCIHNlcnZlciAoZS5nLiBzcGljZWRiOjUwMDUxKS4iLCJ0eXBlIjoic3RyaW5nIn0sImluc2VjdXJlIjp7ImRlc2NyaXB0aW9uIjoiSW5zZWN1cmUgSFRUUCBjb25uZWN0aW9uIChpLmUuIGRpc2FibGVzIFRMUyB2ZXJpZmljYXRpb24pIiwidHlwZSI6ImJvb2xlYW4ifSwicGVybWlzc2lvbiI6eyJkZXNjcmlwdGlvbiI6IlRoZSBuYW1lIG9mIHRoZSBwZXJtaXNzaW9uIChvciByZWxhdGlvbikgb24gd2hpY2ggdG8gZXhlY3V0ZSB0aGUgY2hlY2suIiwicHJvcGVydGllcyI6eyJleHByZXNzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQSBDb21tb24gRXhwcmVzc2lvbiBMYW5ndWFnZSAoQ0VMKSBleHByZXNzaW9uIHRoYXQgZXZhbHVhdGVzIHRvIGEgdmFsdWUuXG5TdHJpbmcgZXhwcmVzc2lvbnMgYXJlIHN1cHBvcnRlZCAoaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vZ29vZ2xlL2NlbC1nby9leHQjU3RyaW5ncykuIiwidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlNpbXBsZSBwYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpIG9yIGEgc3RyaW5nIHRlbXBsYXRlIHdpdGggdmFyaWFibGVzIHRoYXQgcmVzb2x2ZSB0byBwYXR0ZXJucyAoZS5nLiBcIkhlbGxvLCB7YXV0aC5pZGVudGl0eS5uYW1lfSFcIikuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cblRoZSBmb2xsb3dpbmcgQXV0aG9yaW5vIGN1c3RvbSBtb2RpZmllcnMgYXJlIHN1cHBvcnRlZDogQGV4dHJhY3Q6e3NlcDpcIiBcIixwb3M6MH0sIEByZXBsYWNle29sZDpcIlwiLG5ldzpcIlwifSwgQGNhc2U6dXBwZXJ8bG93ZXIsIEBiYXNlNjQ6ZW5jb2RlfGRlY29kZSBhbmQgQHN0cmlwLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJTdGF0aWMgdmFsdWUiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9LCJyZXNvdXJjZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSByZXNvdXJjZSBvbiB3aGljaCB0byBjaGVjayB0aGUgcGVybWlzc2lvbiBvciByZWxhdGlvbi4iLCJwcm9wZXJ0aWVzIjp7ImtpbmQiOnsicHJvcGVydGllcyI6eyJleHByZXNzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQSBDb21tb24gRXhwcmVzc2lvbiBMYW5ndWFnZSAoQ0VMKSBleHByZXNzaW9uIHRoYXQgZXZhbHVhdGVzIHRvIGEgdmFsdWUuXG5TdHJpbmcgZXhwcmVzc2lvbnMgYXJlIHN1cHBvcnRlZCAoaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vZ29vZ2xlL2NlbC1nby9leHQjU3RyaW5ncykuIiwidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlNpbXBsZSBwYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpIG9yIGEgc3RyaW5nIHRlbXBsYXRlIHdpdGggdmFyaWFibGVzIHRoYXQgcmVzb2x2ZSB0byBwYXR0ZXJucyAoZS5nLiBcIkhlbGxvLCB7YXV0aC5pZGVudGl0eS5uYW1lfSFcIikuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cblRoZSBmb2xsb3dpbmcgQXV0aG9yaW5vIGN1c3RvbSBtb2RpZmllcnMgYXJlIHN1cHBvcnRlZDogQGV4dHJhY3Q6e3NlcDpcIiBcIixwb3M6MH0sIEByZXBsYWNle29sZDpcIlwiLG5ldzpcIlwifSwgQGNhc2U6dXBwZXJ8bG93ZXIsIEBiYXNlNjQ6ZW5jb2RlfGRlY29kZSBhbmQgQHN0cmlwLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJTdGF0aWMgdmFsdWUiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9LCJuYW1lIjp7InByb3BlcnRpZXMiOnsiZXhwcmVzc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkEgQ29tbW9uIEV4cHJlc3Npb24gTGFuZ3VhZ2UgKENFTCkgZXhwcmVzc2lvbiB0aGF0IGV2YWx1YXRlcyB0byBhIHZhbHVlLlxuU3RyaW5nIGV4cHJlc3Npb25zIGFyZSBzdXBwb3J0ZWQgKGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL2dvb2dsZS9jZWwtZ28vZXh0I1N0cmluZ3MpLiIsInR5cGUiOiJzdHJpbmcifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwic2hhcmVkU2VjcmV0UmVmIjp7ImRlc2NyaXB0aW9uIjoiUmVmZXJlbmNlIHRvIGEgU2VjcmV0IGtleSB3aG9zZSB2YWx1ZSB3aWxsIGJlIHVzZWQgYnkgQXV0aG9yaW5vIHRvIGF1dGhlbnRpY2F0ZSB3aXRoIHRoZSBBdXRoemVkIHNlcnZpY2UuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUga2V5IG9mIHRoZSBzZWNyZXQgdG8gc2VsZWN0IGZyb20uICBNdXN0IGJlIGEgdmFsaWQgc2VjcmV0IGtleS4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJUaGUgbmFtZSBvZiB0aGUgc2VjcmV0IGluIHRoZSBBdXRob3Jpbm8ncyBuYW1lc3BhY2UgdG8gc2VsZWN0IGZyb20uIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsia2V5IiwibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN1YmplY3QiOnsiZGVzY3JpcHRpb24iOiJUaGUgc3ViamVjdCB0aGF0IHdpbGwgYmUgY2hlY2tlZCBmb3IgdGhlIHBlcm1pc3Npb24gb3IgcmVsYXRpb24uIiwicHJvcGVydGllcyI6eyJraW5kIjp7InByb3BlcnRpZXMiOnsiZXhwcmVzc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkEgQ29tbW9uIEV4cHJlc3Npb24gTGFuZ3VhZ2UgKENFTCkgZXhwcmVzc2lvbiB0aGF0IGV2YWx1YXRlcyB0byBhIHZhbHVlLlxuU3RyaW5nIGV4cHJlc3Npb25zIGFyZSBzdXBwb3J0ZWQgKGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL2dvb2dsZS9jZWwtZ28vZXh0I1N0cmluZ3MpLiIsInR5cGUiOiJzdHJpbmcifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifSwibmFtZSI6eyJwcm9wZXJ0aWVzIjp7ImV4cHJlc3Npb24iOnsiZGVzY3JpcHRpb24iOiJBIENvbW1vbiBFeHByZXNzaW9uIExhbmd1YWdlIChDRUwpIGV4cHJlc3Npb24gdGhhdCBldmFsdWF0ZXMgdG8gYSB2YWx1ZS5cblN0cmluZyBleHByZXNzaW9ucyBhcmUgc3VwcG9ydGVkIChodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS9nb29nbGUvY2VsLWdvL2V4dCNTdHJpbmdzKS4iLCJ0eXBlIjoic3RyaW5nIn0sInNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJlbmRwb2ludCJdLCJ0eXBlIjoib2JqZWN0In0sIndoZW4iOnsiZGVzY3JpcHRpb24iOiJDb25kaXRpb25zIGZvciBBdXRob3Jpbm8gdG8gZW5mb3JjZSB0aGlzIGNvbmZpZy5cbklmIG9taXR0ZWQsIHRoZSBjb25maWcgd2lsbCBiZSBlbmZvcmNlZCBmb3IgYWxsIHJlcXVlc3RzLlxuSWYgcHJlc2VudCwgYWxsIGNvbmRpdGlvbnMgbXVzdCBtYXRjaCBmb3IgdGhlIGNvbmZpZyB0byBiZSBlbmZvcmNlZDsgb3RoZXJ3aXNlLCB0aGUgY29uZmlnIHdpbGwgYmUgc2tpcHBlZC4iLCJpdGVtcyI6eyJvbmVPZiI6W3sicHJvcGVydGllcyI6eyJwYXR0ZXJuUmVmIjp7fX0sInJlcXVpcmVkIjpbInBhdHRlcm5SZWYiXX0seyJwcm9wZXJ0aWVzIjp7Im9wZXJhdG9yIjp7fSwic2VsZWN0b3IiOnt9LCJ2YWx1ZSI6e319LCJyZXF1aXJlZCI6WyJvcGVyYXRvciIsInNlbGVjdG9yIl19LHsicHJvcGVydGllcyI6eyJhbGwiOnt9fSwicmVxdWlyZWQiOlsiYWxsIl19LHsicHJvcGVydGllcyI6eyJhbnkiOnt9fSwicmVxdWlyZWQiOlsiYW55Il19LHsicHJvcGVydGllcyI6eyJwcmVkaWNhdGUiOnt9fSwicmVxdWlyZWQiOlsicHJlZGljYXRlIl19XSwicHJvcGVydGllcyI6eyJhbGwiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2YgcGF0dGVybiBleHByZXNzaW9ucyB0byBiZSBldmFsdWF0ZWQgYXMgYSBsb2dpY2FsIEFORC4iLCJpdGVtcyI6eyJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfSwidHlwZSI6ImFycmF5In0sImFueSI6eyJkZXNjcmlwdGlvbiI6IkEgbGlzdCBvZiBwYXR0ZXJuIGV4cHJlc3Npb25zIHRvIGJlIGV2YWx1YXRlZCBhcyBhIGxvZ2ljYWwgT1IuIiwiaXRlbXMiOnsidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sInR5cGUiOiJhcnJheSJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6IlRoZSBiaW5hcnkgb3BlcmF0b3IgdG8gYmUgYXBwbGllZCB0byB0aGUgY29udGVudCBmZXRjaGVkIGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiwgZm9yIGNvbXBhcmlzb24gd2l0aCBcInZhbHVlXCIuXG5Qb3NzaWJsZSB2YWx1ZXMgYXJlOiBcImVxXCIgKGVxdWFsIHRvKSwgXCJuZXFcIiAobm90IGVxdWFsIHRvKSwgXCJpbmNsXCIgKGluY2x1ZGVzOyBmb3IgYXJyYXlzKSwgXCJleGNsXCIgKGV4Y2x1ZGVzOyBmb3IgYXJyYXlzKSwgXCJtYXRjaGVzXCIgKHJlZ2V4KSIsImVudW0iOlsiZXEiLCJuZXEiLCJpbmNsIiwiZXhjbCIsIm1hdGNoZXMiXSwidHlwZSI6InN0cmluZyJ9LCJwYXR0ZXJuUmVmIjp7ImRlc2NyaXB0aW9uIjoiUmVmZXJlbmNlIHRvIGEgbmFtZWQgc2V0IG9mIHBhdHRlcm4gZXhwcmVzc2lvbnMiLCJ0eXBlIjoic3RyaW5nIn0sInByZWRpY2F0ZSI6eyJkZXNjcmlwdGlvbiI6IkEgQ29tbW9uIEV4cHJlc3Npb24gTGFuZ3VhZ2UgKENFTCkgZXhwcmVzc2lvbiB0aGF0IGV2YWx1YXRlcyB0byBhIGJvb2xlYW4uXG5TdHJpbmcgZXhwcmVzc2lvbnMgYXJlIHN1cHBvcnRlZCAoaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vZ29vZ2xlL2NlbC1nby9leHQjU3RyaW5ncykuIiwidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cbkF1dGhvcmlubyBjdXN0b20gSlNPTiBwYXRoIG1vZGlmaWVycyBhcmUgYWxzbyBzdXBwb3J0ZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSB2YWx1ZSBvZiByZWZlcmVuY2UgZm9yIHRoZSBjb21wYXJpc29uIHdpdGggdGhlIGNvbnRlbnQgZmV0Y2hlZCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04uXG5JZiB1c2VkIHdpdGggdGhlIFwibWF0Y2hlc1wiIG9wZXJhdG9yLCB0aGUgdmFsdWUgbXVzdCBjb21waWxlIHRvIGEgdmFsaWQgR29sYW5nIHJlZ2V4LiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiQXV0aG9yaXphdGlvbiBwb2xpY2llcy5cbkFsbCBwb2xpY2llcyBNVVNUIGV2YWx1YXRlIHRvIFwiYWxsb3dlZCA9IHRydWVcIiBmb3IgdGhlIGF1dGggcmVxdWVzdCBiZSBzdWNjZXNzZnVsLiIsInR5cGUiOiJvYmplY3QifSwiY2FsbGJhY2tzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InByb3BlcnRpZXMiOnsiY2FjaGUiOnsiZGVzY3JpcHRpb24iOiJDYWNoaW5nIG9wdGlvbnMgZm9yIHRoZSByZXNvbHZlZCBvYmplY3QgcmV0dXJuZWQgd2hlbiBhcHBseWluZyB0aGlzIGNvbmZpZy5cbk9taXQgaXQgdG8gYXZvaWQgY2FjaGluZyBvYmplY3RzIGZvciB0aGlzIGNvbmZpZy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IktleSB1c2VkIHRvIHN0b3JlIHRoZSBlbnRyeSBpbiB0aGUgY2FjaGUuXG5UaGUgcmVzb2x2ZWQga2V5IG11c3QgYmUgdW5pcXVlIHdpdGhpbiB0aGUgc2NvcGUgb2YgdGhpcyBwYXJ0aWN1bGFyIGNvbmZpZy4iLCJwcm9wZXJ0aWVzIjp7ImV4cHJlc3Npb24iOnsiZGVzY3JpcHRpb24iOiJBIENvbW1vbiBFeHByZXNzaW9uIExhbmd1YWdlIChDRUwpIGV4cHJlc3Npb24gdGhhdCBldmFsdWF0ZXMgdG8gYSB2YWx1ZS5cblN0cmluZyBleHByZXNzaW9ucyBhcmUgc3VwcG9ydGVkIChodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS9nb29nbGUvY2VsLWdvL2V4dCNTdHJpbmdzKS4iLCJ0eXBlIjoic3RyaW5nIn0sInNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sInR0bCI6eyJkZWZhdWx0Ijo2MCwiZGVzY3JpcHRpb24iOiJEdXJhdGlvbiAoaW4gc2Vjb25kcykgb2YgdGhlIGV4dGVybmFsIGRhdGEgaW4gdGhlIGNhY2hlIGJlZm9yZSBwdWxsZWQgYWdhaW4gZnJvbSB0aGUgc291cmNlLiIsInR5cGUiOiJpbnRlZ2VyIn19LCJyZXF1aXJlZCI6WyJrZXkiXSwidHlwZSI6Im9iamVjdCJ9LCJodHRwIjp7ImRlc2NyaXB0aW9uIjoiU2V0dGluZ3Mgb2YgdGhlIGV4dGVybmFsIEhUVFAgcmVxdWVzdCIsInByb3BlcnRpZXMiOnsiYm9keSI6eyJkZXNjcmlwdGlvbiI6IlJhdyBib2R5IG9mIHRoZSBIVFRQIHJlcXVlc3QuXG5TdXBlcnNlZGVzICdib2R5UGFyYW1ldGVycyc7IHVzZSBlaXRoZXIgb25lIG9yIHRoZSBvdGhlci5cblVzZSBpdCB3aXRoIG1ldGhvZD1QT1NUOyBmb3IgR0VUIHJlcXVlc3RzLCBzZXQgcGFyYW1ldGVycyBhcyBxdWVyeSBzdHJpbmcgaW4gdGhlICdlbmRwb2ludCcgKHBsYWNlaG9sZGVycyBjYW4gYmUgdXNlZCkuIiwicHJvcGVydGllcyI6eyJleHByZXNzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQSBDb21tb24gRXhwcmVzc2lvbiBMYW5ndWFnZSAoQ0VMKSBleHByZXNzaW9uIHRoYXQgZXZhbHVhdGVzIHRvIGEgdmFsdWUuXG5TdHJpbmcgZXhwcmVzc2lvbnMgYXJlIHN1cHBvcnRlZCAoaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vZ29vZ2xlL2NlbC1nby9leHQjU3RyaW5ncykuIiwidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlNpbXBsZSBwYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpIG9yIGEgc3RyaW5nIHRlbXBsYXRlIHdpdGggdmFyaWFibGVzIHRoYXQgcmVzb2x2ZSB0byBwYXR0ZXJucyAoZS5nLiBcIkhlbGxvLCB7YXV0aC5pZGVudGl0eS5uYW1lfSFcIikuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cblRoZSBmb2xsb3dpbmcgQXV0aG9yaW5vIGN1c3RvbSBtb2RpZmllcnMgYXJlIHN1cHBvcnRlZDogQGV4dHJhY3Q6e3NlcDpcIiBcIixwb3M6MH0sIEByZXBsYWNle29sZDpcIlwiLG5ldzpcIlwifSwgQGNhc2U6dXBwZXJ8bG93ZXIsIEBiYXNlNjQ6ZW5jb2RlfGRlY29kZSBhbmQgQHN0cmlwLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJTdGF0aWMgdmFsdWUiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9LCJib2R5UGFyYW1ldGVycyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJwcm9wZXJ0aWVzIjp7ImV4cHJlc3Npb24iOnsiZGVzY3JpcHRpb24iOiJBIENvbW1vbiBFeHByZXNzaW9uIExhbmd1YWdlIChDRUwpIGV4cHJlc3Npb24gdGhhdCBldmFsdWF0ZXMgdG8gYSB2YWx1ZS5cblN0cmluZyBleHByZXNzaW9ucyBhcmUgc3VwcG9ydGVkIChodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS9nb29nbGUvY2VsLWdvL2V4dCNTdHJpbmdzKS4iLCJ0eXBlIjoic3RyaW5nIn0sInNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiQ3VzdG9tIHBhcmFtZXRlcnMgdG8gZW5jb2RlIGluIHRoZSBib2R5IG9mIHRoZSBIVFRQIHJlcXVlc3QuXG5TdXBlcnNlZGVkIGJ5ICdib2R5JzsgdXNlIGVpdGhlciBvbmUgb3IgdGhlIG90aGVyLlxuVXNlIGl0IHdpdGggbWV0aG9kPVBPU1Q7IGZvciBHRVQgcmVxdWVzdHMsIHNldCBwYXJhbWV0ZXJzIGFzIHF1ZXJ5IHN0cmluZyBpbiB0aGUgJ2VuZHBvaW50JyAocGxhY2Vob2xkZXJzIGNhbiBiZSB1c2VkKS4iLCJ0eXBlIjoib2JqZWN0In0sImNvbnRlbnRUeXBlIjp7ImRlZmF1bHQiOiJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQiLCJkZXNjcmlwdGlvbiI6IkNvbnRlbnQtVHlwZSBvZiB0aGUgcmVxdWVzdCBib2R5LiBTaGFwZXMgaG93ICdib2R5UGFyYW1ldGVycycgYXJlIGVuY29kZWQuXG5Vc2UgaXQgd2l0aCBtZXRob2Q9UE9TVDsgZm9yIEdFVCByZXF1ZXN0cywgQ29udGVudC1UeXBlIGlzIGF1dG9tYXRpY2FsbHkgc2V0IHRvICd0ZXh0L3BsYWluJy4iLCJlbnVtIjpbImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIsImFwcGxpY2F0aW9uL2pzb24iXSwidHlwZSI6InN0cmluZyJ9LCJjcmVkZW50aWFscyI6eyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgd2hlcmUgY2xpZW50IGNyZWRlbnRpYWxzIHdpbGwgYmUgcGFzc2VkIGluIHRoZSByZXF1ZXN0IHRvIHRoZSBzZXJ2aWNlLlxuSWYgb21pdHRlZCwgaXQgZGVmYXVsdHMgdG8gY2xpZW50IGNyZWRlbnRpYWxzIHBhc3NlZCBpbiB0aGUgSFRUUCBBdXRob3JpemF0aW9uIGhlYWRlciBhbmQgdGhlIFwiQmVhcmVyXCIgcHJlZml4IGV4cGVjdGVkIHByZXBlbmRlZCB0byB0aGUgc2VjcmV0IHZhbHVlLiIsInByb3BlcnRpZXMiOnsiYXV0aG9yaXphdGlvbkhlYWRlciI6eyJwcm9wZXJ0aWVzIjp7InByZWZpeCI6eyJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImNvb2tpZSI6eyJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sImN1c3RvbUhlYWRlciI6eyJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInF1ZXJ5U3RyaW5nIjp7InByb3BlcnRpZXMiOnsibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwiaGVhZGVycyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJwcm9wZXJ0aWVzIjp7ImV4cHJlc3Npb24iOnsiZGVzY3JpcHRpb24iOiJBIENvbW1vbiBFeHByZXNzaW9uIExhbmd1YWdlIChDRUwpIGV4cHJlc3Npb24gdGhhdCBldmFsdWF0ZXMgdG8gYSB2YWx1ZS5cblN0cmluZyBleHByZXNzaW9ucyBhcmUgc3VwcG9ydGVkIChodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS9nb29nbGUvY2VsLWdvL2V4dCNTdHJpbmdzKS4iLCJ0eXBlIjoic3RyaW5nIn0sInNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiQ3VzdG9tIGhlYWRlcnMgaW4gdGhlIEhUVFAgcmVxdWVzdC4iLCJ0eXBlIjoib2JqZWN0In0sIm1ldGhvZCI6eyJkZWZhdWx0IjoiR0VUIiwiZGVzY3JpcHRpb24iOiJIVFRQIHZlcmIgdXNlZCBpbiB0aGUgcmVxdWVzdCB0byB0aGUgc2VydmljZS4gQWNjZXB0ZWQgdmFsdWVzOiBHRVQgKGRlZmF1bHQpLCBQT1NULlxuV2hlbiB0aGUgcmVxdWVzdCBtZXRob2QgaXMgUE9TVCwgdGhlIGF1dGhvcml6YXRpb24gSlNPTiBpcyBwYXNzZWQgaW4gdGhlIGJvZHkgb2YgdGhlIHJlcXVlc3QuIiwiZW51bSI6WyJHRVQiLCJQT1NUIiwiUFVUIiwiUEFUQ0giLCJERUxFVEUiLCJIRUFEIiwiT1BUSU9OUyIsIkNPTk5FQ1QiLCJUUkFDRSJdLCJ0eXBlIjoic3RyaW5nIn0sIm9hdXRoMiI6eyJkZXNjcmlwdGlvbiI6IkF1dGhlbnRpY2F0aW9uIHdpdGggdGhlIEhUVFAgc2VydmljZSBieSBPQXV0aDIgQ2xpZW50IENyZWRlbnRpYWxzIGdyYW50LiIsInByb3BlcnRpZXMiOnsiY2FjaGUiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJDYWNoZXMgYW5kIHJldXNlcyB0aGUgdG9rZW4gdW50aWwgZXhwaXJlZC5cblNldCBpdCB0byBmYWxzZSB0byBmb3JjZSBmZXRjaCB0aGUgdG9rZW4gYXQgZXZlcnkgYXV0aG9yaXphdGlvbiByZXF1ZXN0IHJlZ2FyZGxlc3Mgb2YgZXhwaXJhdGlvbi4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJjbGllbnRJZCI6eyJkZXNjcmlwdGlvbiI6Ik9BdXRoMiBDbGllbnQgSUQuIiwidHlwZSI6InN0cmluZyJ9LCJjbGllbnRTZWNyZXRSZWYiOnsiZGVzY3JpcHRpb24iOiJSZWZlcmVuY2UgdG8gYSBLdWJlcmVudGVzIFNlY3JldCBrZXkgdGhhdCBzdG9yZXMgdGhhdCBPQXV0aDIgQ2xpZW50IFNlY3JldC4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBrZXkgb2YgdGhlIHNlY3JldCB0byBzZWxlY3QgZnJvbS4gIE11c3QgYmUgYSB2YWxpZCBzZWNyZXQga2V5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBuYW1lIG9mIHRoZSBzZWNyZXQgaW4gdGhlIEF1dGhvcmlubydzIG5hbWVzcGFjZSB0byBzZWxlY3QgZnJvbS4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwiZXh0cmFQYXJhbXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Ik9wdGlvbmFsIGV4dHJhIHBhcmFtZXRlcnMgZm9yIHRoZSByZXF1ZXN0cyB0byB0aGUgdG9rZW4gVVJMLiIsInR5cGUiOiJvYmplY3QifSwic2NvcGVzIjp7ImRlc2NyaXB0aW9uIjoiT3B0aW9uYWwgc2NvcGVzIGZvciB0aGUgY2xpZW50IGNyZWRlbnRpYWxzIGdyYW50LCBpZiBzdXBwb3J0ZWQgYnkgaGUgT0F1dGgyIHNlcnZlci4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJ0b2tlblVybCI6eyJkZXNjcmlwdGlvbiI6IlRva2VuIGVuZHBvaW50IFVSTCBvZiB0aGUgT0F1dGgyIHJlc291cmNlIHNlcnZlci4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJjbGllbnRJZCIsImNsaWVudFNlY3JldFJlZiIsInRva2VuVXJsIl0sInR5cGUiOiJvYmplY3QifSwic2hhcmVkU2VjcmV0UmVmIjp7ImRlc2NyaXB0aW9uIjoiUmVmZXJlbmNlIHRvIGEgU2VjcmV0IGtleSB3aG9zZSB2YWx1ZSB3aWxsIGJlIHBhc3NlZCBieSBBdXRob3Jpbm8gaW4gdGhlIHJlcXVlc3QuXG5UaGUgSFRUUCBzZXJ2aWNlIGNhbiB1c2UgdGhlIHNoYXJlZCBzZWNyZXQgdG8gYXV0aGVudGljYXRlIHRoZSBvcmlnaW4gb2YgdGhlIHJlcXVlc3QuXG5JZ25vcmVkIGlmIHVzZWQgdG9nZXRoZXIgd2l0aCBvYXV0aDIuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUga2V5IG9mIHRoZSBzZWNyZXQgdG8gc2VsZWN0IGZyb20uICBNdXN0IGJlIGEgdmFsaWQgc2VjcmV0IGtleS4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJUaGUgbmFtZSBvZiB0aGUgc2VjcmV0IGluIHRoZSBBdXRob3Jpbm8ncyBuYW1lc3BhY2UgdG8gc2VsZWN0IGZyb20uIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsia2V5IiwibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInVybCI6eyJkZXNjcmlwdGlvbiI6IkVuZHBvaW50IFVSTCBvZiB0aGUgSFRUUCBzZXJ2aWNlLlxuVGhlIHZhbHVlIGNhbiBpbmNsdWRlIHZhcmlhYmxlIHBsYWNlaG9sZGVycyBpbiB0aGUgZm9ybWF0IFwie3NlbGVjdG9yfVwiLCB3aGVyZSBcInNlbGVjdG9yXCIgaXMgYW55IHBhdHRlcm4gc3VwcG9ydGVkXG5ieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGFuZCBzZWxlY3RzIHZhbHVlIGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTi5cbkUuZy4gaHR0cHM6Ly9leHQtYXV0aC1zZXJ2ZXIuaW8vbWV0YWRhdGE/cD17cmVxdWVzdC5wYXRofSIsInR5cGUiOiJzdHJpbmcifSwidXJsRXhwcmVzc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkEgQ29tbW9uIEV4cHJlc3Npb24gTGFuZ3VhZ2UgKENFTCkgZXhwcmVzc2lvbiB0aGF0IGV2YWx1YXRlcyB0byBhIHN0cmluZyBlbmRwb2ludCBVUkwgb2YgdGhlIEhUVFAgc2VydmljZSB0byBjYWxsLlxuU3RyaW5nIGV4cHJlc3Npb25zIGFyZSBzdXBwb3J0ZWQgKGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL2dvb2dsZS9jZWwtZ28vZXh0I1N0cmluZ3MpLiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwibWV0cmljcyI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJXaGV0aGVyIHRoaXMgY29uZmlnIHNob3VsZCBnZW5lcmF0ZSBpbmRpdmlkdWFsIG9ic2VydmFiaWxpdHkgbWV0cmljcyIsInR5cGUiOiJib29sZWFuIn0sInByaW9yaXR5Ijp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiUHJpb3JpdHkgZ3JvdXAgb2YgdGhlIGNvbmZpZy5cbkFsbCBjb25maWdzIGluIHRoZSBzYW1lIHByaW9yaXR5IGdyb3VwIGFyZSBldmFsdWF0ZWQgY29uY3VycmVudGx5OyBjb25zZWN1dGl2ZSBwcmlvcml0eSBncm91cHMgYXJlIGV2YWx1YXRlZCBzZXF1ZW50aWFsbHkuIiwidHlwZSI6ImludGVnZXIifSwid2hlbiI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbnMgZm9yIEF1dGhvcmlubyB0byBlbmZvcmNlIHRoaXMgY29uZmlnLlxuSWYgb21pdHRlZCwgdGhlIGNvbmZpZyB3aWxsIGJlIGVuZm9yY2VkIGZvciBhbGwgcmVxdWVzdHMuXG5JZiBwcmVzZW50LCBhbGwgY29uZGl0aW9ucyBtdXN0IG1hdGNoIGZvciB0aGUgY29uZmlnIHRvIGJlIGVuZm9yY2VkOyBvdGhlcndpc2UsIHRoZSBjb25maWcgd2lsbCBiZSBza2lwcGVkLiIsIml0ZW1zIjp7InByb3BlcnRpZXMiOnsiYWxsIjp7ImRlc2NyaXB0aW9uIjoiQSBsaXN0IG9mIHBhdHRlcm4gZXhwcmVzc2lvbnMgdG8gYmUgZXZhbHVhdGVkIGFzIGEgbG9naWNhbCBBTkQuIiwiaXRlbXMiOnsidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sInR5cGUiOiJhcnJheSJ9LCJhbnkiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2YgcGF0dGVybiBleHByZXNzaW9ucyB0byBiZSBldmFsdWF0ZWQgYXMgYSBsb2dpY2FsIE9SLiIsIml0ZW1zIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJ0eXBlIjoiYXJyYXkifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJUaGUgYmluYXJ5IG9wZXJhdG9yIHRvIGJlIGFwcGxpZWQgdG8gdGhlIGNvbnRlbnQgZmV0Y2hlZCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04sIGZvciBjb21wYXJpc29uIHdpdGggXCJ2YWx1ZVwiLlxuUG9zc2libGUgdmFsdWVzIGFyZTogXCJlcVwiIChlcXVhbCB0byksIFwibmVxXCIgKG5vdCBlcXVhbCB0byksIFwiaW5jbFwiIChpbmNsdWRlczsgZm9yIGFycmF5cyksIFwiZXhjbFwiIChleGNsdWRlczsgZm9yIGFycmF5cyksIFwibWF0Y2hlc1wiIChyZWdleCkiLCJlbnVtIjpbImVxIiwibmVxIiwiaW5jbCIsImV4Y2wiLCJtYXRjaGVzIl0sInR5cGUiOiJzdHJpbmcifSwicGF0dGVyblJlZiI6eyJkZXNjcmlwdGlvbiI6IlJlZmVyZW5jZSB0byBhIG5hbWVkIHNldCBvZiBwYXR0ZXJuIGV4cHJlc3Npb25zIiwidHlwZSI6InN0cmluZyJ9LCJwcmVkaWNhdGUiOnsiZGVzY3JpcHRpb24iOiJBIENvbW1vbiBFeHByZXNzaW9uIExhbmd1YWdlIChDRUwpIGV4cHJlc3Npb24gdGhhdCBldmFsdWF0ZXMgdG8gYSBib29sZWFuLlxuU3RyaW5nIGV4cHJlc3Npb25zIGFyZSBzdXBwb3J0ZWQgKGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL2dvb2dsZS9jZWwtZ28vZXh0I1N0cmluZ3MpLiIsInR5cGUiOiJzdHJpbmcifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJQYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5BdXRob3Jpbm8gY3VzdG9tIEpTT04gcGF0aCBtb2RpZmllcnMgYXJlIGFsc28gc3VwcG9ydGVkLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJUaGUgdmFsdWUgb2YgcmVmZXJlbmNlIGZvciB0aGUgY29tcGFyaXNvbiB3aXRoIHRoZSBjb250ZW50IGZldGNoZWQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OLlxuSWYgdXNlZCB3aXRoIHRoZSBcIm1hdGNoZXNcIiBvcGVyYXRvciwgdGhlIHZhbHVlIG11c3QgY29tcGlsZSB0byBhIHZhbGlkIEdvbGFuZyByZWdleC4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsiaHR0cCJdLCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiQ2FsbGJhY2sgZnVuY3Rpb25zLlxuQXV0aG9yaW5vIHNlbmRzIGNhbGxiYWNrcyBhdCB0aGUgZW5kIG9mIHRoZSBhdXRoIHBpcGVsaW5lIHRvIHRoZSBlbmRwb2ludHMgc3BlY2lmaWVkIGluIHRoaXMgY29uZmlnLiIsInR5cGUiOiJvYmplY3QifSwiaG9zdHMiOnsiZGVzY3JpcHRpb24iOiJUaGUgbGlzdCBvZiBwdWJsaWMgaG9zdCBuYW1lcyBvZiB0aGUgc2VydmljZXMgcHJvdGVjdGVkIGJ5IHRoaXMgYXV0aGVudGljYXRpb24vYXV0aG9yaXphdGlvbiBzY2hlbWUuXG5BdXRob3Jpbm8gdXNlcyB0aGUgcmVxdWVzdGVkIGhvc3QgdG8gbG9va3VwIGZvciB0aGUgY29ycmVzcG9uZGluZyBhdXRoZW50aWNhdGlvbi9hdXRob3JpemF0aW9uIGNvbmZpZ3MgdG8gZW5mb3JjZS4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJtZXRhZGF0YSI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJvbmVPZiI6W3sicHJvcGVydGllcyI6eyJ1c2VySW5mbyI6e319LCJyZXF1aXJlZCI6WyJ1c2VySW5mbyJdfSx7InByb3BlcnRpZXMiOnsidW1hIjp7fX0sInJlcXVpcmVkIjpbInVtYSJdfSx7InByb3BlcnRpZXMiOnsiaHR0cCI6e319LCJyZXF1aXJlZCI6WyJodHRwIl19XSwicHJvcGVydGllcyI6eyJjYWNoZSI6eyJkZXNjcmlwdGlvbiI6IkNhY2hpbmcgb3B0aW9ucyBmb3IgdGhlIHJlc29sdmVkIG9iamVjdCByZXR1cm5lZCB3aGVuIGFwcGx5aW5nIHRoaXMgY29uZmlnLlxuT21pdCBpdCB0byBhdm9pZCBjYWNoaW5nIG9iamVjdHMgZm9yIHRoaXMgY29uZmlnLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiS2V5IHVzZWQgdG8gc3RvcmUgdGhlIGVudHJ5IGluIHRoZSBjYWNoZS5cblRoZSByZXNvbHZlZCBrZXkgbXVzdCBiZSB1bmlxdWUgd2l0aGluIHRoZSBzY29wZSBvZiB0aGlzIHBhcnRpY3VsYXIgY29uZmlnLiIsInByb3BlcnRpZXMiOnsiZXhwcmVzc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkEgQ29tbW9uIEV4cHJlc3Npb24gTGFuZ3VhZ2UgKENFTCkgZXhwcmVzc2lvbiB0aGF0IGV2YWx1YXRlcyB0byBhIHZhbHVlLlxuU3RyaW5nIGV4cHJlc3Npb25zIGFyZSBzdXBwb3J0ZWQgKGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL2dvb2dsZS9jZWwtZ28vZXh0I1N0cmluZ3MpLiIsInR5cGUiOiJzdHJpbmcifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifSwidHRsIjp7ImRlZmF1bHQiOjYwLCJkZXNjcmlwdGlvbiI6IkR1cmF0aW9uIChpbiBzZWNvbmRzKSBvZiB0aGUgZXh0ZXJuYWwgZGF0YSBpbiB0aGUgY2FjaGUgYmVmb3JlIHB1bGxlZCBhZ2FpbiBmcm9tIHRoZSBzb3VyY2UuIiwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbImtleSJdLCJ0eXBlIjoib2JqZWN0In0sImh0dHAiOnsiZGVzY3JpcHRpb24iOiJFeHRlcm5hbCBzb3VyY2Ugb2YgYXV0aCBtZXRhZGF0YSB2aWEgSFRUUCByZXF1ZXN0IiwicHJvcGVydGllcyI6eyJib2R5Ijp7ImRlc2NyaXB0aW9uIjoiUmF3IGJvZHkgb2YgdGhlIEhUVFAgcmVxdWVzdC5cblN1cGVyc2VkZXMgJ2JvZHlQYXJhbWV0ZXJzJzsgdXNlIGVpdGhlciBvbmUgb3IgdGhlIG90aGVyLlxuVXNlIGl0IHdpdGggbWV0aG9kPVBPU1Q7IGZvciBHRVQgcmVxdWVzdHMsIHNldCBwYXJhbWV0ZXJzIGFzIHF1ZXJ5IHN0cmluZyBpbiB0aGUgJ2VuZHBvaW50JyAocGxhY2Vob2xkZXJzIGNhbiBiZSB1c2VkKS4iLCJwcm9wZXJ0aWVzIjp7ImV4cHJlc3Npb24iOnsiZGVzY3JpcHRpb24iOiJBIENvbW1vbiBFeHByZXNzaW9uIExhbmd1YWdlIChDRUwpIGV4cHJlc3Npb24gdGhhdCBldmFsdWF0ZXMgdG8gYSB2YWx1ZS5cblN0cmluZyBleHByZXNzaW9ucyBhcmUgc3VwcG9ydGVkIChodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS9nb29nbGUvY2VsLWdvL2V4dCNTdHJpbmdzKS4iLCJ0eXBlIjoic3RyaW5nIn0sInNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sImJvZHlQYXJhbWV0ZXJzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InByb3BlcnRpZXMiOnsiZXhwcmVzc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkEgQ29tbW9uIEV4cHJlc3Npb24gTGFuZ3VhZ2UgKENFTCkgZXhwcmVzc2lvbiB0aGF0IGV2YWx1YXRlcyB0byBhIHZhbHVlLlxuU3RyaW5nIGV4cHJlc3Npb25zIGFyZSBzdXBwb3J0ZWQgKGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL2dvb2dsZS9jZWwtZ28vZXh0I1N0cmluZ3MpLiIsInR5cGUiOiJzdHJpbmcifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifSwiZGVzY3JpcHRpb24iOiJDdXN0b20gcGFyYW1ldGVycyB0byBlbmNvZGUgaW4gdGhlIGJvZHkgb2YgdGhlIEhUVFAgcmVxdWVzdC5cblN1cGVyc2VkZWQgYnkgJ2JvZHknOyB1c2UgZWl0aGVyIG9uZSBvciB0aGUgb3RoZXIuXG5Vc2UgaXQgd2l0aCBtZXRob2Q9UE9TVDsgZm9yIEdFVCByZXF1ZXN0cywgc2V0IHBhcmFtZXRlcnMgYXMgcXVlcnkgc3RyaW5nIGluIHRoZSAnZW5kcG9pbnQnIChwbGFjZWhvbGRlcnMgY2FuIGJlIHVzZWQpLiIsInR5cGUiOiJvYmplY3QifSwiY29udGVudFR5cGUiOnsiZGVmYXVsdCI6ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIsImRlc2NyaXB0aW9uIjoiQ29udGVudC1UeXBlIG9mIHRoZSByZXF1ZXN0IGJvZHkuIFNoYXBlcyBob3cgJ2JvZHlQYXJhbWV0ZXJzJyBhcmUgZW5jb2RlZC5cblVzZSBpdCB3aXRoIG1ldGhvZD1QT1NUOyBmb3IgR0VUIHJlcXVlc3RzLCBDb250ZW50LVR5cGUgaXMgYXV0b21hdGljYWxseSBzZXQgdG8gJ3RleHQvcGxhaW4nLiIsImVudW0iOlsiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIiwiYXBwbGljYXRpb24vanNvbiJdLCJ0eXBlIjoic3RyaW5nIn0sImNyZWRlbnRpYWxzIjp7ImRlc2NyaXB0aW9uIjoiRGVmaW5lcyB3aGVyZSBjbGllbnQgY3JlZGVudGlhbHMgd2lsbCBiZSBwYXNzZWQgaW4gdGhlIHJlcXVlc3QgdG8gdGhlIHNlcnZpY2UuXG5JZiBvbWl0dGVkLCBpdCBkZWZhdWx0cyB0byBjbGllbnQgY3JlZGVudGlhbHMgcGFzc2VkIGluIHRoZSBIVFRQIEF1dGhvcml6YXRpb24gaGVhZGVyIGFuZCB0aGUgXCJCZWFyZXJcIiBwcmVmaXggZXhwZWN0ZWQgcHJlcGVuZGVkIHRvIHRoZSBzZWNyZXQgdmFsdWUuIiwicHJvcGVydGllcyI6eyJhdXRob3JpemF0aW9uSGVhZGVyIjp7InByb3BlcnRpZXMiOnsicHJlZml4Ijp7InR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiY29va2llIjp7InByb3BlcnRpZXMiOnsibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwiY3VzdG9tSGVhZGVyIjp7InByb3BlcnRpZXMiOnsibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwicXVlcnlTdHJpbmciOnsicHJvcGVydGllcyI6eyJuYW1lIjp7InR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJoZWFkZXJzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InByb3BlcnRpZXMiOnsiZXhwcmVzc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkEgQ29tbW9uIEV4cHJlc3Npb24gTGFuZ3VhZ2UgKENFTCkgZXhwcmVzc2lvbiB0aGF0IGV2YWx1YXRlcyB0byBhIHZhbHVlLlxuU3RyaW5nIGV4cHJlc3Npb25zIGFyZSBzdXBwb3J0ZWQgKGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL2dvb2dsZS9jZWwtZ28vZXh0I1N0cmluZ3MpLiIsInR5cGUiOiJzdHJpbmcifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifSwiZGVzY3JpcHRpb24iOiJDdXN0b20gaGVhZGVycyBpbiB0aGUgSFRUUCByZXF1ZXN0LiIsInR5cGUiOiJvYmplY3QifSwibWV0aG9kIjp7ImRlZmF1bHQiOiJHRVQiLCJkZXNjcmlwdGlvbiI6IkhUVFAgdmVyYiB1c2VkIGluIHRoZSByZXF1ZXN0IHRvIHRoZSBzZXJ2aWNlLiBBY2NlcHRlZCB2YWx1ZXM6IEdFVCAoZGVmYXVsdCksIFBPU1QuXG5XaGVuIHRoZSByZXF1ZXN0IG1ldGhvZCBpcyBQT1NULCB0aGUgYXV0aG9yaXphdGlvbiBKU09OIGlzIHBhc3NlZCBpbiB0aGUgYm9keSBvZiB0aGUgcmVxdWVzdC4iLCJlbnVtIjpbIkdFVCIsIlBPU1QiLCJQVVQiLCJQQVRDSCIsIkRFTEVURSIsIkhFQUQiLCJPUFRJT05TIiwiQ09OTkVDVCIsIlRSQUNFIl0sInR5cGUiOiJzdHJpbmcifSwib2F1dGgyIjp7ImRlc2NyaXB0aW9uIjoiQXV0aGVudGljYXRpb24gd2l0aCB0aGUgSFRUUCBzZXJ2aWNlIGJ5IE9BdXRoMiBDbGllbnQgQ3JlZGVudGlhbHMgZ3JhbnQuIiwicHJvcGVydGllcyI6eyJjYWNoZSI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6IkNhY2hlcyBhbmQgcmV1c2VzIHRoZSB0b2tlbiB1bnRpbCBleHBpcmVkLlxuU2V0IGl0IHRvIGZhbHNlIHRvIGZvcmNlIGZldGNoIHRoZSB0b2tlbiBhdCBldmVyeSBhdXRob3JpemF0aW9uIHJlcXVlc3QgcmVnYXJkbGVzcyBvZiBleHBpcmF0aW9uLiIsInR5cGUiOiJib29sZWFuIn0sImNsaWVudElkIjp7ImRlc2NyaXB0aW9uIjoiT0F1dGgyIENsaWVudCBJRC4iLCJ0eXBlIjoic3RyaW5nIn0sImNsaWVudFNlY3JldFJlZiI6eyJkZXNjcmlwdGlvbiI6IlJlZmVyZW5jZSB0byBhIEt1YmVyZW50ZXMgU2VjcmV0IGtleSB0aGF0IHN0b3JlcyB0aGF0IE9BdXRoMiBDbGllbnQgU2VjcmV0LiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGtleSBvZiB0aGUgc2VjcmV0IHRvIHNlbGVjdCBmcm9tLiAgTXVzdCBiZSBhIHZhbGlkIHNlY3JldCBrZXkuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiVGhlIG5hbWUgb2YgdGhlIHNlY3JldCBpbiB0aGUgQXV0aG9yaW5vJ3MgbmFtZXNwYWNlIHRvIHNlbGVjdCBmcm9tLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImtleSIsIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJleHRyYVBhcmFtcyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiT3B0aW9uYWwgZXh0cmEgcGFyYW1ldGVycyBmb3IgdGhlIHJlcXVlc3RzIHRvIHRoZSB0b2tlbiBVUkwuIiwidHlwZSI6Im9iamVjdCJ9LCJzY29wZXMiOnsiZGVzY3JpcHRpb24iOiJPcHRpb25hbCBzY29wZXMgZm9yIHRoZSBjbGllbnQgY3JlZGVudGlhbHMgZ3JhbnQsIGlmIHN1cHBvcnRlZCBieSBoZSBPQXV0aDIgc2VydmVyLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sInRva2VuVXJsIjp7ImRlc2NyaXB0aW9uIjoiVG9rZW4gZW5kcG9pbnQgVVJMIG9mIHRoZSBPQXV0aDIgcmVzb3VyY2Ugc2VydmVyLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImNsaWVudElkIiwiY2xpZW50U2VjcmV0UmVmIiwidG9rZW5VcmwiXSwidHlwZSI6Im9iamVjdCJ9LCJzaGFyZWRTZWNyZXRSZWYiOnsiZGVzY3JpcHRpb24iOiJSZWZlcmVuY2UgdG8gYSBTZWNyZXQga2V5IHdob3NlIHZhbHVlIHdpbGwgYmUgcGFzc2VkIGJ5IEF1dGhvcmlubyBpbiB0aGUgcmVxdWVzdC5cblRoZSBIVFRQIHNlcnZpY2UgY2FuIHVzZSB0aGUgc2hhcmVkIHNlY3JldCB0byBhdXRoZW50aWNhdGUgdGhlIG9yaWdpbiBvZiB0aGUgcmVxdWVzdC5cbklnbm9yZWQgaWYgdXNlZCB0b2dldGhlciB3aXRoIG9hdXRoMi4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBrZXkgb2YgdGhlIHNlY3JldCB0byBzZWxlY3QgZnJvbS4gIE11c3QgYmUgYSB2YWxpZCBzZWNyZXQga2V5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBuYW1lIG9mIHRoZSBzZWNyZXQgaW4gdGhlIEF1dGhvcmlubydzIG5hbWVzcGFjZSB0byBzZWxlY3QgZnJvbS4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidXJsIjp7ImRlc2NyaXB0aW9uIjoiRW5kcG9pbnQgVVJMIG9mIHRoZSBIVFRQIHNlcnZpY2UuXG5UaGUgdmFsdWUgY2FuIGluY2x1ZGUgdmFyaWFibGUgcGxhY2Vob2xkZXJzIGluIHRoZSBmb3JtYXQgXCJ7c2VsZWN0b3J9XCIsIHdoZXJlIFwic2VsZWN0b3JcIiBpcyBhbnkgcGF0dGVybiBzdXBwb3J0ZWRcbmJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gYW5kIHNlbGVjdHMgdmFsdWUgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OLlxuRS5nLiBodHRwczovL2V4dC1hdXRoLXNlcnZlci5pby9tZXRhZGF0YT9wPXtyZXF1ZXN0LnBhdGh9IiwidHlwZSI6InN0cmluZyJ9LCJ1cmxFeHByZXNzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQSBDb21tb24gRXhwcmVzc2lvbiBMYW5ndWFnZSAoQ0VMKSBleHByZXNzaW9uIHRoYXQgZXZhbHVhdGVzIHRvIGEgc3RyaW5nIGVuZHBvaW50IFVSTCBvZiB0aGUgSFRUUCBzZXJ2aWNlIHRvIGNhbGwuXG5TdHJpbmcgZXhwcmVzc2lvbnMgYXJlIHN1cHBvcnRlZCAoaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vZ29vZ2xlL2NlbC1nby9leHQjU3RyaW5ncykuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJtZXRyaWNzIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IldoZXRoZXIgdGhpcyBjb25maWcgc2hvdWxkIGdlbmVyYXRlIGluZGl2aWR1YWwgb2JzZXJ2YWJpbGl0eSBtZXRyaWNzIiwidHlwZSI6ImJvb2xlYW4ifSwicHJpb3JpdHkiOnsiZGVmYXVsdCI6MCwiZGVzY3JpcHRpb24iOiJQcmlvcml0eSBncm91cCBvZiB0aGUgY29uZmlnLlxuQWxsIGNvbmZpZ3MgaW4gdGhlIHNhbWUgcHJpb3JpdHkgZ3JvdXAgYXJlIGV2YWx1YXRlZCBjb25jdXJyZW50bHk7IGNvbnNlY3V0aXZlIHByaW9yaXR5IGdyb3VwcyBhcmUgZXZhbHVhdGVkIHNlcXVlbnRpYWxseS4iLCJ0eXBlIjoiaW50ZWdlciJ9LCJ1bWEiOnsiZGVzY3JpcHRpb24iOiJVc2VyLU1hbmFnZWQgQWNjZXNzIChVTUEpIHNvdXJjZSBvZiByZXNvdXJjZSBkYXRhLiIsInByb3BlcnRpZXMiOnsiY3JlZGVudGlhbHNSZWYiOnsiZGVzY3JpcHRpb24iOiJSZWZlcmVuY2UgdG8gYSBLdWJlcm5ldGVzIHNlY3JldCBpbiB0aGUgc2FtZSBuYW1lc3BhY2UsIHRoYXQgc3RvcmVzIGNsaWVudCBjcmVkZW50aWFscyB0byB0aGUgcmVzb3VyY2UgcmVnaXN0cmF0aW9uIEFQSSBvZiB0aGUgVU1BIHNlcnZlci4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudC5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzXG5UT0RPOiBBZGQgb3RoZXIgdXNlZnVsIGZpZWxkcy4gYXBpVmVyc2lvbiwga2luZCwgdWlkPyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwiZW5kcG9pbnQiOnsiZGVzY3JpcHRpb24iOiJUaGUgZW5kcG9pbnQgb2YgdGhlIFVNQSBzZXJ2ZXIuXG5UaGUgdmFsdWUgbXVzdCBjb2luY2lkZSB3aXRoIHRoZSBcImlzc3VlclwiIGNsYWltIG9mIHRoZSBVTUEgY29uZmlnIGRpc2NvdmVyZWQgZnJvbSB0aGUgd2VsbC1rbm93biB1bWEgY29uZmlndXJhdGlvbiBlbmRwb2ludC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJjcmVkZW50aWFsc1JlZiIsImVuZHBvaW50Il0sInR5cGUiOiJvYmplY3QifSwidXNlckluZm8iOnsiZGVzY3JpcHRpb24iOiJPcGVuZElEIENvbm5lY3QgVXNlckluZm8gbGlua2VkIHRvIGFuIE9JREMgYXV0aGVudGljYXRpb24gY29uZmlnIHNwZWNpZmllZCBpbiB0aGlzIHNhbWUgQXV0aENvbmZpZy4iLCJwcm9wZXJ0aWVzIjp7ImlkZW50aXR5U291cmNlIjp7ImRlc2NyaXB0aW9uIjoiVGhlIG5hbWUgb2YgYW4gT0lEQy1lbmFibGVkIEpXVCBhdXRoZW50aWNhdGlvbiBjb25maWcgd2hvc2UgT3BlbklEIENvbm5lY3QgY29uZmlndXJhdGlvbiBkaXNjb3ZlcmVkIGluY2x1ZGVzIHRoZSBPSURDIFwidXNlcmluZm9fZW5kcG9pbnRcIiBjbGFpbS4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJpZGVudGl0eVNvdXJjZSJdLCJ0eXBlIjoib2JqZWN0In0sIndoZW4iOnsiZGVzY3JpcHRpb24iOiJDb25kaXRpb25zIGZvciBBdXRob3Jpbm8gdG8gZW5mb3JjZSB0aGlzIGNvbmZpZy5cbklmIG9taXR0ZWQsIHRoZSBjb25maWcgd2lsbCBiZSBlbmZvcmNlZCBmb3IgYWxsIHJlcXVlc3RzLlxuSWYgcHJlc2VudCwgYWxsIGNvbmRpdGlvbnMgbXVzdCBtYXRjaCBmb3IgdGhlIGNvbmZpZyB0byBiZSBlbmZvcmNlZDsgb3RoZXJ3aXNlLCB0aGUgY29uZmlnIHdpbGwgYmUgc2tpcHBlZC4iLCJpdGVtcyI6eyJvbmVPZiI6W3sicHJvcGVydGllcyI6eyJwYXR0ZXJuUmVmIjp7fX0sInJlcXVpcmVkIjpbInBhdHRlcm5SZWYiXX0seyJwcm9wZXJ0aWVzIjp7Im9wZXJhdG9yIjp7fSwic2VsZWN0b3IiOnt9LCJ2YWx1ZSI6e319LCJyZXF1aXJlZCI6WyJvcGVyYXRvciIsInNlbGVjdG9yIl19LHsicHJvcGVydGllcyI6eyJhbGwiOnt9fSwicmVxdWlyZWQiOlsiYWxsIl19LHsicHJvcGVydGllcyI6eyJhbnkiOnt9fSwicmVxdWlyZWQiOlsiYW55Il19LHsicHJvcGVydGllcyI6eyJwcmVkaWNhdGUiOnt9fSwicmVxdWlyZWQiOlsicHJlZGljYXRlIl19XSwicHJvcGVydGllcyI6eyJhbGwiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2YgcGF0dGVybiBleHByZXNzaW9ucyB0byBiZSBldmFsdWF0ZWQgYXMgYSBsb2dpY2FsIEFORC4iLCJpdGVtcyI6eyJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfSwidHlwZSI6ImFycmF5In0sImFueSI6eyJkZXNjcmlwdGlvbiI6IkEgbGlzdCBvZiBwYXR0ZXJuIGV4cHJlc3Npb25zIHRvIGJlIGV2YWx1YXRlZCBhcyBhIGxvZ2ljYWwgT1IuIiwiaXRlbXMiOnsidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sInR5cGUiOiJhcnJheSJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6IlRoZSBiaW5hcnkgb3BlcmF0b3IgdG8gYmUgYXBwbGllZCB0byB0aGUgY29udGVudCBmZXRjaGVkIGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiwgZm9yIGNvbXBhcmlzb24gd2l0aCBcInZhbHVlXCIuXG5Qb3NzaWJsZSB2YWx1ZXMgYXJlOiBcImVxXCIgKGVxdWFsIHRvKSwgXCJuZXFcIiAobm90IGVxdWFsIHRvKSwgXCJpbmNsXCIgKGluY2x1ZGVzOyBmb3IgYXJyYXlzKSwgXCJleGNsXCIgKGV4Y2x1ZGVzOyBmb3IgYXJyYXlzKSwgXCJtYXRjaGVzXCIgKHJlZ2V4KSIsImVudW0iOlsiZXEiLCJuZXEiLCJpbmNsIiwiZXhjbCIsIm1hdGNoZXMiXSwidHlwZSI6InN0cmluZyJ9LCJwYXR0ZXJuUmVmIjp7ImRlc2NyaXB0aW9uIjoiUmVmZXJlbmNlIHRvIGEgbmFtZWQgc2V0IG9mIHBhdHRlcm4gZXhwcmVzc2lvbnMiLCJ0eXBlIjoic3RyaW5nIn0sInByZWRpY2F0ZSI6eyJkZXNjcmlwdGlvbiI6IkEgQ29tbW9uIEV4cHJlc3Npb24gTGFuZ3VhZ2UgKENFTCkgZXhwcmVzc2lvbiB0aGF0IGV2YWx1YXRlcyB0byBhIGJvb2xlYW4uXG5TdHJpbmcgZXhwcmVzc2lvbnMgYXJlIHN1cHBvcnRlZCAoaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vZ29vZ2xlL2NlbC1nby9leHQjU3RyaW5ncykuIiwidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cbkF1dGhvcmlubyBjdXN0b20gSlNPTiBwYXRoIG1vZGlmaWVycyBhcmUgYWxzbyBzdXBwb3J0ZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSB2YWx1ZSBvZiByZWZlcmVuY2UgZm9yIHRoZSBjb21wYXJpc29uIHdpdGggdGhlIGNvbnRlbnQgZmV0Y2hlZCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04uXG5JZiB1c2VkIHdpdGggdGhlIFwibWF0Y2hlc1wiIG9wZXJhdG9yLCB0aGUgdmFsdWUgbXVzdCBjb21waWxlIHRvIGEgdmFsaWQgR29sYW5nIHJlZ2V4LiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiTWV0YWRhdGEgc291cmNlcy5cbkF1dGhvcmlubyBmZXRjaGVzIGF1dGggbWV0YWRhdGEgYXMgSlNPTiBmcm9tIHNvdXJjZXMgc3BlY2lmaWVkIGluIHRoaXMgY29uZmlnLiIsInR5cGUiOiJvYmplY3QifSwicGF0dGVybnMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiaXRlbXMiOnsicHJvcGVydGllcyI6eyJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6IlRoZSBiaW5hcnkgb3BlcmF0b3IgdG8gYmUgYXBwbGllZCB0byB0aGUgY29udGVudCBmZXRjaGVkIGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiwgZm9yIGNvbXBhcmlzb24gd2l0aCBcInZhbHVlXCIuXG5Qb3NzaWJsZSB2YWx1ZXMgYXJlOiBcImVxXCIgKGVxdWFsIHRvKSwgXCJuZXFcIiAobm90IGVxdWFsIHRvKSwgXCJpbmNsXCIgKGluY2x1ZGVzOyBmb3IgYXJyYXlzKSwgXCJleGNsXCIgKGV4Y2x1ZGVzOyBmb3IgYXJyYXlzKSwgXCJtYXRjaGVzXCIgKHJlZ2V4KSIsImVudW0iOlsiZXEiLCJuZXEiLCJpbmNsIiwiZXhjbCIsIm1hdGNoZXMiXSwidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cbkF1dGhvcmlubyBjdXN0b20gSlNPTiBwYXRoIG1vZGlmaWVycyBhcmUgYWxzbyBzdXBwb3J0ZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSB2YWx1ZSBvZiByZWZlcmVuY2UgZm9yIHRoZSBjb21wYXJpc29uIHdpdGggdGhlIGNvbnRlbnQgZmV0Y2hlZCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04uXG5JZiB1c2VkIHdpdGggdGhlIFwibWF0Y2hlc1wiIG9wZXJhdG9yLCB0aGUgdmFsdWUgbXVzdCBjb21waWxlIHRvIGEgdmFsaWQgR29sYW5nIHJlZ2V4LiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sImRlc2NyaXB0aW9uIjoiTmFtZWQgc2V0cyBvZiBwYXR0ZXJucyB0aGF0IGNhbiBiZSByZWZlcnJlZCBpbiBgd2hlbmAgY29uZGl0aW9ucyBhbmQgaW4gcGF0dGVybi1tYXRjaGluZyBhdXRob3JpemF0aW9uIHBvbGljeSBydWxlcy4iLCJ0eXBlIjoib2JqZWN0In0sInJlc3BvbnNlIjp7ImRlc2NyaXB0aW9uIjoiUmVzcG9uc2UgaXRlbXMuXG5BdXRob3Jpbm8gYnVpbGRzIGN1c3RvbSByZXNwb25zZXMgdG8gdGhlIGNsaWVudCBvZiB0aGUgYXV0aCByZXF1ZXN0LiIsInByb3BlcnRpZXMiOnsic3VjY2VzcyI6eyJkZXNjcmlwdGlvbiI6IlJlc3BvbnNlIGl0ZW1zIHRvIGJlIGluY2x1ZGVkIGluIHRoZSBhdXRoIHJlc3BvbnNlIHdoZW4gdGhlIHJlcXVlc3QgaXMgYXV0aGVudGljYXRlZCBhbmQgYXV0aG9yaXplZC5cbkZvciBpbnRlZ3JhdGlvbiBvZiBBdXRob3Jpbm8gdmlhIHByb3h5LCB0aGUgcHJveHkgbXVzdCB1c2UgdGhlc2Ugc2V0dGluZ3MgdG8gcHJvcGFnYXRlIGR5bmFtaWMgbWV0YWRhdGEgYW5kL29yIGluamVjdCBkYXRhIGluIHRoZSByZXF1ZXN0LiIsInByb3BlcnRpZXMiOnsiZHluYW1pY01ldGFkYXRhIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImRlc2NyaXB0aW9uIjoiU2V0dGluZ3Mgb2YgdGhlIHN1Y2Nlc3MgY3VzdG9tIHJlc3BvbnNlIGl0ZW0uIiwib25lT2YiOlt7InByb3BlcnRpZXMiOnsid3Jpc3RiYW5kIjp7fX0sInJlcXVpcmVkIjpbIndyaXN0YmFuZCJdfSx7InByb3BlcnRpZXMiOnsianNvbiI6e319LCJyZXF1aXJlZCI6WyJqc29uIl19LHsicHJvcGVydGllcyI6eyJwbGFpbiI6e319LCJyZXF1aXJlZCI6WyJwbGFpbiJdfV0sInByb3BlcnRpZXMiOnsiY2FjaGUiOnsiZGVzY3JpcHRpb24iOiJDYWNoaW5nIG9wdGlvbnMgZm9yIHRoZSByZXNvbHZlZCBvYmplY3QgcmV0dXJuZWQgd2hlbiBhcHBseWluZyB0aGlzIGNvbmZpZy5cbk9taXQgaXQgdG8gYXZvaWQgY2FjaGluZyBvYmplY3RzIGZvciB0aGlzIGNvbmZpZy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IktleSB1c2VkIHRvIHN0b3JlIHRoZSBlbnRyeSBpbiB0aGUgY2FjaGUuXG5UaGUgcmVzb2x2ZWQga2V5IG11c3QgYmUgdW5pcXVlIHdpdGhpbiB0aGUgc2NvcGUgb2YgdGhpcyBwYXJ0aWN1bGFyIGNvbmZpZy4iLCJwcm9wZXJ0aWVzIjp7ImV4cHJlc3Npb24iOnsiZGVzY3JpcHRpb24iOiJBIENvbW1vbiBFeHByZXNzaW9uIExhbmd1YWdlIChDRUwpIGV4cHJlc3Npb24gdGhhdCBldmFsdWF0ZXMgdG8gYSB2YWx1ZS5cblN0cmluZyBleHByZXNzaW9ucyBhcmUgc3VwcG9ydGVkIChodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS9nb29nbGUvY2VsLWdvL2V4dCNTdHJpbmdzKS4iLCJ0eXBlIjoic3RyaW5nIn0sInNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sInR0bCI6eyJkZWZhdWx0Ijo2MCwiZGVzY3JpcHRpb24iOiJEdXJhdGlvbiAoaW4gc2Vjb25kcykgb2YgdGhlIGV4dGVybmFsIGRhdGEgaW4gdGhlIGNhY2hlIGJlZm9yZSBwdWxsZWQgYWdhaW4gZnJvbSB0aGUgc291cmNlLiIsInR5cGUiOiJpbnRlZ2VyIn19LCJyZXF1aXJlZCI6WyJrZXkiXSwidHlwZSI6Im9iamVjdCJ9LCJqc29uIjp7ImRlc2NyaXB0aW9uIjoiSlNPTiBvYmplY3RcblNwZWNpZnkgaXQgYXMgdGhlIGxpc3Qgb2YgcHJvcGVydGllcyBvZiB0aGUgb2JqZWN0LCB3aG9zZSB2YWx1ZXMgY2FuIGNvbWJpbmUgc3RhdGljIHZhbHVlcyBhbmQgdmFsdWVzIHNlbGVjdGVkIGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTi4iLCJwcm9wZXJ0aWVzIjp7InByb3BlcnRpZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsicHJvcGVydGllcyI6eyJleHByZXNzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQSBDb21tb24gRXhwcmVzc2lvbiBMYW5ndWFnZSAoQ0VMKSBleHByZXNzaW9uIHRoYXQgZXZhbHVhdGVzIHRvIGEgdmFsdWUuXG5TdHJpbmcgZXhwcmVzc2lvbnMgYXJlIHN1cHBvcnRlZCAoaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vZ29vZ2xlL2NlbC1nby9leHQjU3RyaW5ncykuIiwidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlNpbXBsZSBwYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpIG9yIGEgc3RyaW5nIHRlbXBsYXRlIHdpdGggdmFyaWFibGVzIHRoYXQgcmVzb2x2ZSB0byBwYXR0ZXJucyAoZS5nLiBcIkhlbGxvLCB7YXV0aC5pZGVudGl0eS5uYW1lfSFcIikuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cblRoZSBmb2xsb3dpbmcgQXV0aG9yaW5vIGN1c3RvbSBtb2RpZmllcnMgYXJlIHN1cHBvcnRlZDogQGV4dHJhY3Q6e3NlcDpcIiBcIixwb3M6MH0sIEByZXBsYWNle29sZDpcIlwiLG5ldzpcIlwifSwgQGNhc2U6dXBwZXJ8bG93ZXIsIEBiYXNlNjQ6ZW5jb2RlfGRlY29kZSBhbmQgQHN0cmlwLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJTdGF0aWMgdmFsdWUiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJwcm9wZXJ0aWVzIl0sInR5cGUiOiJvYmplY3QifSwia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGtleSB1c2VkIHRvIGFkZCB0aGUgY3VzdG9tIHJlc3BvbnNlIGl0ZW0gKG5hbWUgb2YgdGhlIEhUVFAgaGVhZGVyIG9yIHJvb3QgcHJvcGVydHkgb2YgdGhlIER5bmFtaWMgTWV0YWRhdGEgb2JqZWN0KS5cbklmIG9taXR0ZWQsIGl0IHdpbGwgYmUgc2V0IHRvIHRoZSBuYW1lIG9mIHRoZSByZXNwb25zZSBjb25maWcuIiwidHlwZSI6InN0cmluZyJ9LCJtZXRyaWNzIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IldoZXRoZXIgdGhpcyBjb25maWcgc2hvdWxkIGdlbmVyYXRlIGluZGl2aWR1YWwgb2JzZXJ2YWJpbGl0eSBtZXRyaWNzIiwidHlwZSI6ImJvb2xlYW4ifSwicGxhaW4iOnsiZGVzY3JpcHRpb24iOiJQbGFpbiB0ZXh0IGNvbnRlbnQiLCJwcm9wZXJ0aWVzIjp7ImV4cHJlc3Npb24iOnsiZGVzY3JpcHRpb24iOiJBIENvbW1vbiBFeHByZXNzaW9uIExhbmd1YWdlIChDRUwpIGV4cHJlc3Npb24gdGhhdCBldmFsdWF0ZXMgdG8gYSB2YWx1ZS5cblN0cmluZyBleHByZXNzaW9ucyBhcmUgc3VwcG9ydGVkIChodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS9nb29nbGUvY2VsLWdvL2V4dCNTdHJpbmdzKS4iLCJ0eXBlIjoic3RyaW5nIn0sInNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sInByaW9yaXR5Ijp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiUHJpb3JpdHkgZ3JvdXAgb2YgdGhlIGNvbmZpZy5cbkFsbCBjb25maWdzIGluIHRoZSBzYW1lIHByaW9yaXR5IGdyb3VwIGFyZSBldmFsdWF0ZWQgY29uY3VycmVudGx5OyBjb25zZWN1dGl2ZSBwcmlvcml0eSBncm91cHMgYXJlIGV2YWx1YXRlZCBzZXF1ZW50aWFsbHkuIiwidHlwZSI6ImludGVnZXIifSwid2hlbiI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbnMgZm9yIEF1dGhvcmlubyB0byBlbmZvcmNlIHRoaXMgY29uZmlnLlxuSWYgb21pdHRlZCwgdGhlIGNvbmZpZyB3aWxsIGJlIGVuZm9yY2VkIGZvciBhbGwgcmVxdWVzdHMuXG5JZiBwcmVzZW50LCBhbGwgY29uZGl0aW9ucyBtdXN0IG1hdGNoIGZvciB0aGUgY29uZmlnIHRvIGJlIGVuZm9yY2VkOyBvdGhlcndpc2UsIHRoZSBjb25maWcgd2lsbCBiZSBza2lwcGVkLiIsIml0ZW1zIjp7Im9uZU9mIjpbeyJwcm9wZXJ0aWVzIjp7InBhdHRlcm5SZWYiOnt9fSwicmVxdWlyZWQiOlsicGF0dGVyblJlZiJdfSx7InByb3BlcnRpZXMiOnsib3BlcmF0b3IiOnt9LCJzZWxlY3RvciI6e30sInZhbHVlIjp7fX0sInJlcXVpcmVkIjpbIm9wZXJhdG9yIiwic2VsZWN0b3IiXX0seyJwcm9wZXJ0aWVzIjp7ImFsbCI6e319LCJyZXF1aXJlZCI6WyJhbGwiXX0seyJwcm9wZXJ0aWVzIjp7ImFueSI6e319LCJyZXF1aXJlZCI6WyJhbnkiXX0seyJwcm9wZXJ0aWVzIjp7InByZWRpY2F0ZSI6e319LCJyZXF1aXJlZCI6WyJwcmVkaWNhdGUiXX1dLCJwcm9wZXJ0aWVzIjp7ImFsbCI6eyJkZXNjcmlwdGlvbiI6IkEgbGlzdCBvZiBwYXR0ZXJuIGV4cHJlc3Npb25zIHRvIGJlIGV2YWx1YXRlZCBhcyBhIGxvZ2ljYWwgQU5ELiIsIml0ZW1zIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJ0eXBlIjoiYXJyYXkifSwiYW55Ijp7ImRlc2NyaXB0aW9uIjoiQSBsaXN0IG9mIHBhdHRlcm4gZXhwcmVzc2lvbnMgdG8gYmUgZXZhbHVhdGVkIGFzIGEgbG9naWNhbCBPUi4iLCJpdGVtcyI6eyJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfSwidHlwZSI6ImFycmF5In0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGJpbmFyeSBvcGVyYXRvciB0byBiZSBhcHBsaWVkIHRvIHRoZSBjb250ZW50IGZldGNoZWQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OLCBmb3IgY29tcGFyaXNvbiB3aXRoIFwidmFsdWVcIi5cblBvc3NpYmxlIHZhbHVlcyBhcmU6IFwiZXFcIiAoZXF1YWwgdG8pLCBcIm5lcVwiIChub3QgZXF1YWwgdG8pLCBcImluY2xcIiAoaW5jbHVkZXM7IGZvciBhcnJheXMpLCBcImV4Y2xcIiAoZXhjbHVkZXM7IGZvciBhcnJheXMpLCBcIm1hdGNoZXNcIiAocmVnZXgpIiwiZW51bSI6WyJlcSIsIm5lcSIsImluY2wiLCJleGNsIiwibWF0Y2hlcyJdLCJ0eXBlIjoic3RyaW5nIn0sInBhdHRlcm5SZWYiOnsiZGVzY3JpcHRpb24iOiJSZWZlcmVuY2UgdG8gYSBuYW1lZCBzZXQgb2YgcGF0dGVybiBleHByZXNzaW9ucyIsInR5cGUiOiJzdHJpbmcifSwicHJlZGljYXRlIjp7ImRlc2NyaXB0aW9uIjoiQSBDb21tb24gRXhwcmVzc2lvbiBMYW5ndWFnZSAoQ0VMKSBleHByZXNzaW9uIHRoYXQgZXZhbHVhdGVzIHRvIGEgYm9vbGVhbi5cblN0cmluZyBleHByZXNzaW9ucyBhcmUgc3VwcG9ydGVkIChodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS9nb29nbGUvY2VsLWdvL2V4dCNTdHJpbmdzKS4iLCJ0eXBlIjoic3RyaW5nIn0sInNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiUGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuQXV0aG9yaW5vIGN1c3RvbSBKU09OIHBhdGggbW9kaWZpZXJzIGFyZSBhbHNvIHN1cHBvcnRlZC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiVGhlIHZhbHVlIG9mIHJlZmVyZW5jZSBmb3IgdGhlIGNvbXBhcmlzb24gd2l0aCB0aGUgY29udGVudCBmZXRjaGVkIGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTi5cbklmIHVzZWQgd2l0aCB0aGUgXCJtYXRjaGVzXCIgb3BlcmF0b3IsIHRoZSB2YWx1ZSBtdXN0IGNvbXBpbGUgdG8gYSB2YWxpZCBHb2xhbmcgcmVnZXguIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwid3Jpc3RiYW5kIjp7ImRlc2NyaXB0aW9uIjoiQXV0aG9yaW5vIEZlc3RpdmFsIFdyaXN0YmFuZCB0b2tlbiIsInByb3BlcnRpZXMiOnsiY3VzdG9tQ2xhaW1zIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InByb3BlcnRpZXMiOnsiZXhwcmVzc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkEgQ29tbW9uIEV4cHJlc3Npb24gTGFuZ3VhZ2UgKENFTCkgZXhwcmVzc2lvbiB0aGF0IGV2YWx1YXRlcyB0byBhIHZhbHVlLlxuU3RyaW5nIGV4cHJlc3Npb25zIGFyZSBzdXBwb3J0ZWQgKGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL2dvb2dsZS9jZWwtZ28vZXh0I1N0cmluZ3MpLiIsInR5cGUiOiJzdHJpbmcifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifSwiZGVzY3JpcHRpb24iOiJBbnkgY2xhaW1zIHRvIGJlIGFkZGVkIHRvIHRoZSB3cmlzdGJhbmQgdG9rZW4gYXBhcnQgZnJvbSB0aGUgc3RhbmRhcmQgSldUIGNsYWltcyAoaXNzLCBpYXQsIGV4cCkgYWRkZWQgYnkgZGVmYXVsdC4iLCJ0eXBlIjoib2JqZWN0In0sImlzc3VlciI6eyJkZXNjcmlwdGlvbiI6IlRoZSBlbmRwb2ludCB0byB0aGUgQXV0aG9yaW5vIHNlcnZpY2UgdGhhdCBpc3N1ZXMgdGhlIHdyaXN0YmFuZCAoZm9ybWF0OiBcdTAwM2NzY2hlbWVcdTAwM2U6Ly9cdTAwM2Nob3N0XHUwMDNlOlx1MDAzY3BvcnRcdTAwM2UvXHUwMDNjcmVhbG1cdTAwM2UsIHdoZXJlIFx1MDAzY3JlYWxtXHUwMDNlID0gXHUwMDNjbmFtZXNwYWNlXHUwMDNlL1x1MDAzY2F1dGhvcmluby1hdXRoLWNvbmZpZy1yZXNvdXJjZS1uYW1lL3dyaXN0YmFuZC1jb25maWctbmFtZSkiLCJ0eXBlIjoic3RyaW5nIn0sInNpZ25pbmdLZXlSZWZzIjp7ImRlc2NyaXB0aW9uIjoiUmVmZXJlbmNlIGJ5IG5hbWUgdG8gS3ViZXJuZXRlcyBzZWNyZXRzIGFuZCBjb3JyZXNwb25kaW5nIHNpZ25pbmcgYWxnb3JpdGhtcy5cblRoZSBzZWNyZXRzIG11c3QgY29udGFpbiBhIGBrZXkucGVtYCBlbnRyeSB3aG9zZSB2YWx1ZSBpcyB0aGUgc2lnbmluZyBrZXkgZm9ybWF0dGVkIGFzIFBFTS4iLCJpdGVtcyI6eyJwcm9wZXJ0aWVzIjp7ImFsZ29yaXRobSI6eyJkZXNjcmlwdGlvbiI6IkFsZ29yaXRobSB0byBzaWduIHRoZSB3cmlzdGJhbmQgdG9rZW4gdXNpbmcgdGhlIHNpZ25pbmcga2V5IHByb3ZpZGVkIiwiZW51bSI6WyJFUzI1NiIsIkVTMzg0IiwiRVM1MTIiLCJSUzI1NiIsIlJTMzg0IiwiUlM1MTIiXSwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgc2lnbmluZyBrZXkuXG5UaGUgdmFsdWUgaXMgdXNlZCB0byByZWZlcmVuY2UgdGhlIEt1YmVybmV0ZXMgc2VjcmV0IHRoYXQgc3RvcmVzIHRoZSBrZXkgYW5kIGluIHRoZSBga2lkYCBjbGFpbSBvZiB0aGUgd3Jpc3RiYW5kIHRva2VuIGhlYWRlci4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJhbGdvcml0aG0iLCJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sInRva2VuRHVyYXRpb24iOnsiZGVzY3JpcHRpb24iOiJUaW1lIHNwYW4gb2YgdGhlIHdyaXN0YmFuZCB0b2tlbiwgaW4gc2Vjb25kcy4iLCJmb3JtYXQiOiJpbnQ2NCIsInR5cGUiOiJpbnRlZ2VyIn19LCJyZXF1aXJlZCI6WyJpc3N1ZXIiLCJzaWduaW5nS2V5UmVmcyJdLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiQ3VzdG9tIHN1Y2Nlc3MgcmVzcG9uc2UgaXRlbXMgd3JhcHBlZCBhcyBIVFRQIGhlYWRlcnMuXG5Gb3IgaW50ZWdyYXRpb24gb2YgQXV0aG9yaW5vIHZpYSBwcm94eSwgdGhlIHByb3h5IG11c3QgdXNlIHRoZXNlIHNldHRpbmdzIHRvIHByb3BhZ2F0ZSBkeW5hbWljIG1ldGFkYXRhLlxuU2VlIGh0dHBzOi8vd3d3LmVudm95cHJveHkuaW8vZG9jcy9lbnZveS9sYXRlc3QvY29uZmlndXJhdGlvbi9hZHZhbmNlZC93ZWxsX2tub3duX2R5bmFtaWNfbWV0YWRhdGEiLCJ0eXBlIjoib2JqZWN0In0sImhlYWRlcnMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsib25lT2YiOlt7InByb3BlcnRpZXMiOnsid3Jpc3RiYW5kIjp7fX0sInJlcXVpcmVkIjpbIndyaXN0YmFuZCJdfSx7InByb3BlcnRpZXMiOnsianNvbiI6e319LCJyZXF1aXJlZCI6WyJqc29uIl19LHsicHJvcGVydGllcyI6eyJwbGFpbiI6e319LCJyZXF1aXJlZCI6WyJwbGFpbiJdfV0sInByb3BlcnRpZXMiOnsiY2FjaGUiOnsiZGVzY3JpcHRpb24iOiJDYWNoaW5nIG9wdGlvbnMgZm9yIHRoZSByZXNvbHZlZCBvYmplY3QgcmV0dXJuZWQgd2hlbiBhcHBseWluZyB0aGlzIGNvbmZpZy5cbk9taXQgaXQgdG8gYXZvaWQgY2FjaGluZyBvYmplY3RzIGZvciB0aGlzIGNvbmZpZy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IktleSB1c2VkIHRvIHN0b3JlIHRoZSBlbnRyeSBpbiB0aGUgY2FjaGUuXG5UaGUgcmVzb2x2ZWQga2V5IG11c3QgYmUgdW5pcXVlIHdpdGhpbiB0aGUgc2NvcGUgb2YgdGhpcyBwYXJ0aWN1bGFyIGNvbmZpZy4iLCJwcm9wZXJ0aWVzIjp7ImV4cHJlc3Npb24iOnsiZGVzY3JpcHRpb24iOiJBIENvbW1vbiBFeHByZXNzaW9uIExhbmd1YWdlIChDRUwpIGV4cHJlc3Npb24gdGhhdCBldmFsdWF0ZXMgdG8gYSB2YWx1ZS5cblN0cmluZyBleHByZXNzaW9ucyBhcmUgc3VwcG9ydGVkIChodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS9nb29nbGUvY2VsLWdvL2V4dCNTdHJpbmdzKS4iLCJ0eXBlIjoic3RyaW5nIn0sInNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sInR0bCI6eyJkZWZhdWx0Ijo2MCwiZGVzY3JpcHRpb24iOiJEdXJhdGlvbiAoaW4gc2Vjb25kcykgb2YgdGhlIGV4dGVybmFsIGRhdGEgaW4gdGhlIGNhY2hlIGJlZm9yZSBwdWxsZWQgYWdhaW4gZnJvbSB0aGUgc291cmNlLiIsInR5cGUiOiJpbnRlZ2VyIn19LCJyZXF1aXJlZCI6WyJrZXkiXSwidHlwZSI6Im9iamVjdCJ9LCJqc29uIjp7ImRlc2NyaXB0aW9uIjoiSlNPTiBvYmplY3RcblNwZWNpZnkgaXQgYXMgdGhlIGxpc3Qgb2YgcHJvcGVydGllcyBvZiB0aGUgb2JqZWN0LCB3aG9zZSB2YWx1ZXMgY2FuIGNvbWJpbmUgc3RhdGljIHZhbHVlcyBhbmQgdmFsdWVzIHNlbGVjdGVkIGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTi4iLCJwcm9wZXJ0aWVzIjp7InByb3BlcnRpZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsicHJvcGVydGllcyI6eyJleHByZXNzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQSBDb21tb24gRXhwcmVzc2lvbiBMYW5ndWFnZSAoQ0VMKSBleHByZXNzaW9uIHRoYXQgZXZhbHVhdGVzIHRvIGEgdmFsdWUuXG5TdHJpbmcgZXhwcmVzc2lvbnMgYXJlIHN1cHBvcnRlZCAoaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vZ29vZ2xlL2NlbC1nby9leHQjU3RyaW5ncykuIiwidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlNpbXBsZSBwYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpIG9yIGEgc3RyaW5nIHRlbXBsYXRlIHdpdGggdmFyaWFibGVzIHRoYXQgcmVzb2x2ZSB0byBwYXR0ZXJucyAoZS5nLiBcIkhlbGxvLCB7YXV0aC5pZGVudGl0eS5uYW1lfSFcIikuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cblRoZSBmb2xsb3dpbmcgQXV0aG9yaW5vIGN1c3RvbSBtb2RpZmllcnMgYXJlIHN1cHBvcnRlZDogQGV4dHJhY3Q6e3NlcDpcIiBcIixwb3M6MH0sIEByZXBsYWNle29sZDpcIlwiLG5ldzpcIlwifSwgQGNhc2U6dXBwZXJ8bG93ZXIsIEBiYXNlNjQ6ZW5jb2RlfGRlY29kZSBhbmQgQHN0cmlwLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJTdGF0aWMgdmFsdWUiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJwcm9wZXJ0aWVzIl0sInR5cGUiOiJvYmplY3QifSwia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGtleSB1c2VkIHRvIGFkZCB0aGUgY3VzdG9tIHJlc3BvbnNlIGl0ZW0gKG5hbWUgb2YgdGhlIEhUVFAgaGVhZGVyIG9yIHJvb3QgcHJvcGVydHkgb2YgdGhlIER5bmFtaWMgTWV0YWRhdGEgb2JqZWN0KS5cbklmIG9taXR0ZWQsIGl0IHdpbGwgYmUgc2V0IHRvIHRoZSBuYW1lIG9mIHRoZSByZXNwb25zZSBjb25maWcuIiwidHlwZSI6InN0cmluZyJ9LCJtZXRyaWNzIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IldoZXRoZXIgdGhpcyBjb25maWcgc2hvdWxkIGdlbmVyYXRlIGluZGl2aWR1YWwgb2JzZXJ2YWJpbGl0eSBtZXRyaWNzIiwidHlwZSI6ImJvb2xlYW4ifSwicGxhaW4iOnsiZGVzY3JpcHRpb24iOiJQbGFpbiB0ZXh0IGNvbnRlbnQiLCJwcm9wZXJ0aWVzIjp7ImV4cHJlc3Npb24iOnsiZGVzY3JpcHRpb24iOiJBIENvbW1vbiBFeHByZXNzaW9uIExhbmd1YWdlIChDRUwpIGV4cHJlc3Npb24gdGhhdCBldmFsdWF0ZXMgdG8gYSB2YWx1ZS5cblN0cmluZyBleHByZXNzaW9ucyBhcmUgc3VwcG9ydGVkIChodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS9nb29nbGUvY2VsLWdvL2V4dCNTdHJpbmdzKS4iLCJ0eXBlIjoic3RyaW5nIn0sInNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sInByaW9yaXR5Ijp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiUHJpb3JpdHkgZ3JvdXAgb2YgdGhlIGNvbmZpZy5cbkFsbCBjb25maWdzIGluIHRoZSBzYW1lIHByaW9yaXR5IGdyb3VwIGFyZSBldmFsdWF0ZWQgY29uY3VycmVudGx5OyBjb25zZWN1dGl2ZSBwcmlvcml0eSBncm91cHMgYXJlIGV2YWx1YXRlZCBzZXF1ZW50aWFsbHkuIiwidHlwZSI6ImludGVnZXIifSwid2hlbiI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbnMgZm9yIEF1dGhvcmlubyB0byBlbmZvcmNlIHRoaXMgY29uZmlnLlxuSWYgb21pdHRlZCwgdGhlIGNvbmZpZyB3aWxsIGJlIGVuZm9yY2VkIGZvciBhbGwgcmVxdWVzdHMuXG5JZiBwcmVzZW50LCBhbGwgY29uZGl0aW9ucyBtdXN0IG1hdGNoIGZvciB0aGUgY29uZmlnIHRvIGJlIGVuZm9yY2VkOyBvdGhlcndpc2UsIHRoZSBjb25maWcgd2lsbCBiZSBza2lwcGVkLiIsIml0ZW1zIjp7Im9uZU9mIjpbeyJwcm9wZXJ0aWVzIjp7InBhdHRlcm5SZWYiOnt9fSwicmVxdWlyZWQiOlsicGF0dGVyblJlZiJdfSx7InByb3BlcnRpZXMiOnsib3BlcmF0b3IiOnt9LCJzZWxlY3RvciI6e30sInZhbHVlIjp7fX0sInJlcXVpcmVkIjpbIm9wZXJhdG9yIiwic2VsZWN0b3IiXX0seyJwcm9wZXJ0aWVzIjp7ImFsbCI6e319LCJyZXF1aXJlZCI6WyJhbGwiXX0seyJwcm9wZXJ0aWVzIjp7ImFueSI6e319LCJyZXF1aXJlZCI6WyJhbnkiXX0seyJwcm9wZXJ0aWVzIjp7InByZWRpY2F0ZSI6e319LCJyZXF1aXJlZCI6WyJwcmVkaWNhdGUiXX1dLCJwcm9wZXJ0aWVzIjp7ImFsbCI6eyJkZXNjcmlwdGlvbiI6IkEgbGlzdCBvZiBwYXR0ZXJuIGV4cHJlc3Npb25zIHRvIGJlIGV2YWx1YXRlZCBhcyBhIGxvZ2ljYWwgQU5ELiIsIml0ZW1zIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJ0eXBlIjoiYXJyYXkifSwiYW55Ijp7ImRlc2NyaXB0aW9uIjoiQSBsaXN0IG9mIHBhdHRlcm4gZXhwcmVzc2lvbnMgdG8gYmUgZXZhbHVhdGVkIGFzIGEgbG9naWNhbCBPUi4iLCJpdGVtcyI6eyJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfSwidHlwZSI6ImFycmF5In0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGJpbmFyeSBvcGVyYXRvciB0byBiZSBhcHBsaWVkIHRvIHRoZSBjb250ZW50IGZldGNoZWQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OLCBmb3IgY29tcGFyaXNvbiB3aXRoIFwidmFsdWVcIi5cblBvc3NpYmxlIHZhbHVlcyBhcmU6IFwiZXFcIiAoZXF1YWwgdG8pLCBcIm5lcVwiIChub3QgZXF1YWwgdG8pLCBcImluY2xcIiAoaW5jbHVkZXM7IGZvciBhcnJheXMpLCBcImV4Y2xcIiAoZXhjbHVkZXM7IGZvciBhcnJheXMpLCBcIm1hdGNoZXNcIiAocmVnZXgpIiwiZW51bSI6WyJlcSIsIm5lcSIsImluY2wiLCJleGNsIiwibWF0Y2hlcyJdLCJ0eXBlIjoic3RyaW5nIn0sInBhdHRlcm5SZWYiOnsiZGVzY3JpcHRpb24iOiJSZWZlcmVuY2UgdG8gYSBuYW1lZCBzZXQgb2YgcGF0dGVybiBleHByZXNzaW9ucyIsInR5cGUiOiJzdHJpbmcifSwicHJlZGljYXRlIjp7ImRlc2NyaXB0aW9uIjoiQSBDb21tb24gRXhwcmVzc2lvbiBMYW5ndWFnZSAoQ0VMKSBleHByZXNzaW9uIHRoYXQgZXZhbHVhdGVzIHRvIGEgYm9vbGVhbi5cblN0cmluZyBleHByZXNzaW9ucyBhcmUgc3VwcG9ydGVkIChodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS9nb29nbGUvY2VsLWdvL2V4dCNTdHJpbmdzKS4iLCJ0eXBlIjoic3RyaW5nIn0sInNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiUGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuQXV0aG9yaW5vIGN1c3RvbSBKU09OIHBhdGggbW9kaWZpZXJzIGFyZSBhbHNvIHN1cHBvcnRlZC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiVGhlIHZhbHVlIG9mIHJlZmVyZW5jZSBmb3IgdGhlIGNvbXBhcmlzb24gd2l0aCB0aGUgY29udGVudCBmZXRjaGVkIGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTi5cbklmIHVzZWQgd2l0aCB0aGUgXCJtYXRjaGVzXCIgb3BlcmF0b3IsIHRoZSB2YWx1ZSBtdXN0IGNvbXBpbGUgdG8gYSB2YWxpZCBHb2xhbmcgcmVnZXguIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwid3Jpc3RiYW5kIjp7ImRlc2NyaXB0aW9uIjoiQXV0aG9yaW5vIEZlc3RpdmFsIFdyaXN0YmFuZCB0b2tlbiIsInByb3BlcnRpZXMiOnsiY3VzdG9tQ2xhaW1zIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InByb3BlcnRpZXMiOnsiZXhwcmVzc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkEgQ29tbW9uIEV4cHJlc3Npb24gTGFuZ3VhZ2UgKENFTCkgZXhwcmVzc2lvbiB0aGF0IGV2YWx1YXRlcyB0byBhIHZhbHVlLlxuU3RyaW5nIGV4cHJlc3Npb25zIGFyZSBzdXBwb3J0ZWQgKGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL2dvb2dsZS9jZWwtZ28vZXh0I1N0cmluZ3MpLiIsInR5cGUiOiJzdHJpbmcifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifSwiZGVzY3JpcHRpb24iOiJBbnkgY2xhaW1zIHRvIGJlIGFkZGVkIHRvIHRoZSB3cmlzdGJhbmQgdG9rZW4gYXBhcnQgZnJvbSB0aGUgc3RhbmRhcmQgSldUIGNsYWltcyAoaXNzLCBpYXQsIGV4cCkgYWRkZWQgYnkgZGVmYXVsdC4iLCJ0eXBlIjoib2JqZWN0In0sImlzc3VlciI6eyJkZXNjcmlwdGlvbiI6IlRoZSBlbmRwb2ludCB0byB0aGUgQXV0aG9yaW5vIHNlcnZpY2UgdGhhdCBpc3N1ZXMgdGhlIHdyaXN0YmFuZCAoZm9ybWF0OiBcdTAwM2NzY2hlbWVcdTAwM2U6Ly9cdTAwM2Nob3N0XHUwMDNlOlx1MDAzY3BvcnRcdTAwM2UvXHUwMDNjcmVhbG1cdTAwM2UsIHdoZXJlIFx1MDAzY3JlYWxtXHUwMDNlID0gXHUwMDNjbmFtZXNwYWNlXHUwMDNlL1x1MDAzY2F1dGhvcmluby1hdXRoLWNvbmZpZy1yZXNvdXJjZS1uYW1lL3dyaXN0YmFuZC1jb25maWctbmFtZSkiLCJ0eXBlIjoic3RyaW5nIn0sInNpZ25pbmdLZXlSZWZzIjp7ImRlc2NyaXB0aW9uIjoiUmVmZXJlbmNlIGJ5IG5hbWUgdG8gS3ViZXJuZXRlcyBzZWNyZXRzIGFuZCBjb3JyZXNwb25kaW5nIHNpZ25pbmcgYWxnb3JpdGhtcy5cblRoZSBzZWNyZXRzIG11c3QgY29udGFpbiBhIGBrZXkucGVtYCBlbnRyeSB3aG9zZSB2YWx1ZSBpcyB0aGUgc2lnbmluZyBrZXkgZm9ybWF0dGVkIGFzIFBFTS4iLCJpdGVtcyI6eyJwcm9wZXJ0aWVzIjp7ImFsZ29yaXRobSI6eyJkZXNjcmlwdGlvbiI6IkFsZ29yaXRobSB0byBzaWduIHRoZSB3cmlzdGJhbmQgdG9rZW4gdXNpbmcgdGhlIHNpZ25pbmcga2V5IHByb3ZpZGVkIiwiZW51bSI6WyJFUzI1NiIsIkVTMzg0IiwiRVM1MTIiLCJSUzI1NiIsIlJTMzg0IiwiUlM1MTIiXSwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgc2lnbmluZyBrZXkuXG5UaGUgdmFsdWUgaXMgdXNlZCB0byByZWZlcmVuY2UgdGhlIEt1YmVybmV0ZXMgc2VjcmV0IHRoYXQgc3RvcmVzIHRoZSBrZXkgYW5kIGluIHRoZSBga2lkYCBjbGFpbSBvZiB0aGUgd3Jpc3RiYW5kIHRva2VuIGhlYWRlci4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJhbGdvcml0aG0iLCJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sInRva2VuRHVyYXRpb24iOnsiZGVzY3JpcHRpb24iOiJUaW1lIHNwYW4gb2YgdGhlIHdyaXN0YmFuZCB0b2tlbiwgaW4gc2Vjb25kcy4iLCJmb3JtYXQiOiJpbnQ2NCIsInR5cGUiOiJpbnRlZ2VyIn19LCJyZXF1aXJlZCI6WyJpc3N1ZXIiLCJzaWduaW5nS2V5UmVmcyJdLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiQ3VzdG9tIHN1Y2Nlc3MgcmVzcG9uc2UgaXRlbXMgd3JhcHBlZCBhcyBIVFRQIGhlYWRlcnMuXG5Gb3IgaW50ZWdyYXRpb24gb2YgQXV0aG9yaW5vIHZpYSBwcm94eSwgdGhlIHByb3h5IG11c3QgdXNlIHRoZXNlIHNldHRpbmdzIHRvIGluamVjdCBkYXRhIGluIHRoZSByZXF1ZXN0LiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwidW5hdXRoZW50aWNhdGVkIjp7ImRlc2NyaXB0aW9uIjoiQ3VzdG9taXphdGlvbnMgb24gdGhlIGRlbmlhbCBzdGF0dXMgYXR0cmlidXRlcyB3aGVuIHRoZSByZXF1ZXN0IGlzIHVuYXV0aGVudGljYXRlZC5cbkZvciBpbnRlZ3JhdGlvbiBvZiBBdXRob3Jpbm8gdmlhIHByb3h5LCB0aGUgcHJveHkgbXVzdCBob25vdXIgdGhlIHJlc3BvbnNlIHN0YXR1cyBhdHRyaWJ1dGVzIHNwZWNpZmllZCBpbiB0aGlzIGNvbmZpZy5cbkRlZmF1bHQ6IDQwMSBVbmF1dGhvcml6ZWQiLCJwcm9wZXJ0aWVzIjp7ImJvZHkiOnsiZGVzY3JpcHRpb24iOiJIVFRQIHJlc3BvbnNlIGJvZHkgdG8gb3ZlcnJpZGUgdGhlIGRlZmF1bHQgZGVuaWFsIGJvZHkuIiwicHJvcGVydGllcyI6eyJleHByZXNzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQSBDb21tb24gRXhwcmVzc2lvbiBMYW5ndWFnZSAoQ0VMKSBleHByZXNzaW9uIHRoYXQgZXZhbHVhdGVzIHRvIGEgdmFsdWUuXG5TdHJpbmcgZXhwcmVzc2lvbnMgYXJlIHN1cHBvcnRlZCAoaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vZ29vZ2xlL2NlbC1nby9leHQjU3RyaW5ncykuIiwidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlNpbXBsZSBwYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpIG9yIGEgc3RyaW5nIHRlbXBsYXRlIHdpdGggdmFyaWFibGVzIHRoYXQgcmVzb2x2ZSB0byBwYXR0ZXJucyAoZS5nLiBcIkhlbGxvLCB7YXV0aC5pZGVudGl0eS5uYW1lfSFcIikuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cblRoZSBmb2xsb3dpbmcgQXV0aG9yaW5vIGN1c3RvbSBtb2RpZmllcnMgYXJlIHN1cHBvcnRlZDogQGV4dHJhY3Q6e3NlcDpcIiBcIixwb3M6MH0sIEByZXBsYWNle29sZDpcIlwiLG5ldzpcIlwifSwgQGNhc2U6dXBwZXJ8bG93ZXIsIEBiYXNlNjQ6ZW5jb2RlfGRlY29kZSBhbmQgQHN0cmlwLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJTdGF0aWMgdmFsdWUiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9LCJjb2RlIjp7ImRlc2NyaXB0aW9uIjoiSFRUUCBzdGF0dXMgY29kZSB0byBvdmVycmlkZSB0aGUgZGVmYXVsdCBkZW5pYWwgc3RhdHVzIGNvZGUuIiwiZm9ybWF0IjoiaW50NjQiLCJtYXhpbXVtIjo1OTksIm1pbmltdW0iOjMwMCwidHlwZSI6ImludGVnZXIifSwiaGVhZGVycyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJwcm9wZXJ0aWVzIjp7ImV4cHJlc3Npb24iOnsiZGVzY3JpcHRpb24iOiJBIENvbW1vbiBFeHByZXNzaW9uIExhbmd1YWdlIChDRUwpIGV4cHJlc3Npb24gdGhhdCBldmFsdWF0ZXMgdG8gYSB2YWx1ZS5cblN0cmluZyBleHByZXNzaW9ucyBhcmUgc3VwcG9ydGVkIChodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS9nb29nbGUvY2VsLWdvL2V4dCNTdHJpbmdzKS4iLCJ0eXBlIjoic3RyaW5nIn0sInNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiSFRUUCByZXNwb25zZSBoZWFkZXJzIHRvIG92ZXJyaWRlIHRoZSBkZWZhdWx0IGRlbmlhbCBoZWFkZXJzLiIsInR5cGUiOiJvYmplY3QifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6IkhUVFAgbWVzc2FnZSB0byBvdmVycmlkZSB0aGUgZGVmYXVsdCBkZW5pYWwgbWVzc2FnZS4iLCJwcm9wZXJ0aWVzIjp7ImV4cHJlc3Npb24iOnsiZGVzY3JpcHRpb24iOiJBIENvbW1vbiBFeHByZXNzaW9uIExhbmd1YWdlIChDRUwpIGV4cHJlc3Npb24gdGhhdCBldmFsdWF0ZXMgdG8gYSB2YWx1ZS5cblN0cmluZyBleHByZXNzaW9ucyBhcmUgc3VwcG9ydGVkIChodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS9nb29nbGUvY2VsLWdvL2V4dCNTdHJpbmdzKS4iLCJ0eXBlIjoic3RyaW5nIn0sInNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiU2ltcGxlIHBhdGggc2VsZWN0b3IgdG8gZmV0Y2ggY29udGVudCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04gKGUuZy4gJ3JlcXVlc3QubWV0aG9kJykgb3IgYSBzdHJpbmcgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgdGhhdCByZXNvbHZlIHRvIHBhdHRlcm5zIChlLmcuIFwiSGVsbG8sIHthdXRoLmlkZW50aXR5Lm5hbWV9IVwiKS5cbkFueSBwYXR0ZXJuIHN1cHBvcnRlZCBieSBodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90aWR3YWxsL2dqc29uIGNhbiBiZSB1c2VkLlxuVGhlIGZvbGxvd2luZyBBdXRob3Jpbm8gY3VzdG9tIG1vZGlmaWVycyBhcmUgc3VwcG9ydGVkOiBAZXh0cmFjdDp7c2VwOlwiIFwiLHBvczowfSwgQHJlcGxhY2V7b2xkOlwiXCIsbmV3OlwiXCJ9LCBAY2FzZTp1cHBlcnxsb3dlciwgQGJhc2U2NDplbmNvZGV8ZGVjb2RlIGFuZCBAc3RyaXAuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRpYyB2YWx1ZSIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sInVuYXV0aG9yaXplZCI6eyJkZXNjcmlwdGlvbiI6IkN1c3RvbWl6YXRpb25zIG9uIHRoZSBkZW5pYWwgc3RhdHVzIGF0dHJpYnV0ZXMgd2hlbiB0aGUgcmVxdWVzdCBpcyB1bmF1dGhvcml6ZWQuXG5Gb3IgaW50ZWdyYXRpb24gb2YgQXV0aG9yaW5vIHZpYSBwcm94eSwgdGhlIHByb3h5IG11c3QgaG9ub3VyIHRoZSByZXNwb25zZSBzdGF0dXMgYXR0cmlidXRlcyBzcGVjaWZpZWQgaW4gdGhpcyBjb25maWcuXG5EZWZhdWx0OiA0MDMgRm9yYmlkZGVuIiwicHJvcGVydGllcyI6eyJib2R5Ijp7ImRlc2NyaXB0aW9uIjoiSFRUUCByZXNwb25zZSBib2R5IHRvIG92ZXJyaWRlIHRoZSBkZWZhdWx0IGRlbmlhbCBib2R5LiIsInByb3BlcnRpZXMiOnsiZXhwcmVzc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkEgQ29tbW9uIEV4cHJlc3Npb24gTGFuZ3VhZ2UgKENFTCkgZXhwcmVzc2lvbiB0aGF0IGV2YWx1YXRlcyB0byBhIHZhbHVlLlxuU3RyaW5nIGV4cHJlc3Npb25zIGFyZSBzdXBwb3J0ZWQgKGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL2dvb2dsZS9jZWwtZ28vZXh0I1N0cmluZ3MpLiIsInR5cGUiOiJzdHJpbmcifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTaW1wbGUgcGF0aCBzZWxlY3RvciB0byBmZXRjaCBjb250ZW50IGZyb20gdGhlIGF1dGhvcml6YXRpb24gSlNPTiAoZS5nLiAncmVxdWVzdC5tZXRob2QnKSBvciBhIHN0cmluZyB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyB0aGF0IHJlc29sdmUgdG8gcGF0dGVybnMgKGUuZy4gXCJIZWxsbywge2F1dGguaWRlbnRpdHkubmFtZX0hXCIpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5UaGUgZm9sbG93aW5nIEF1dGhvcmlubyBjdXN0b20gbW9kaWZpZXJzIGFyZSBzdXBwb3J0ZWQ6IEBleHRyYWN0OntzZXA6XCIgXCIscG9zOjB9LCBAcmVwbGFjZXtvbGQ6XCJcIixuZXc6XCJcIn0sIEBjYXNlOnVwcGVyfGxvd2VyLCBAYmFzZTY0OmVuY29kZXxkZWNvZGUgYW5kIEBzdHJpcC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGljIHZhbHVlIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifSwiY29kZSI6eyJkZXNjcmlwdGlvbiI6IkhUVFAgc3RhdHVzIGNvZGUgdG8gb3ZlcnJpZGUgdGhlIGRlZmF1bHQgZGVuaWFsIHN0YXR1cyBjb2RlLiIsImZvcm1hdCI6ImludDY0IiwibWF4aW11bSI6NTk5LCJtaW5pbXVtIjozMDAsInR5cGUiOiJpbnRlZ2VyIn0sImhlYWRlcnMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsicHJvcGVydGllcyI6eyJleHByZXNzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQSBDb21tb24gRXhwcmVzc2lvbiBMYW5ndWFnZSAoQ0VMKSBleHByZXNzaW9uIHRoYXQgZXZhbHVhdGVzIHRvIGEgdmFsdWUuXG5TdHJpbmcgZXhwcmVzc2lvbnMgYXJlIHN1cHBvcnRlZCAoaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vZ29vZ2xlL2NlbC1nby9leHQjU3RyaW5ncykuIiwidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlNpbXBsZSBwYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpIG9yIGEgc3RyaW5nIHRlbXBsYXRlIHdpdGggdmFyaWFibGVzIHRoYXQgcmVzb2x2ZSB0byBwYXR0ZXJucyAoZS5nLiBcIkhlbGxvLCB7YXV0aC5pZGVudGl0eS5uYW1lfSFcIikuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cblRoZSBmb2xsb3dpbmcgQXV0aG9yaW5vIGN1c3RvbSBtb2RpZmllcnMgYXJlIHN1cHBvcnRlZDogQGV4dHJhY3Q6e3NlcDpcIiBcIixwb3M6MH0sIEByZXBsYWNle29sZDpcIlwiLG5ldzpcIlwifSwgQGNhc2U6dXBwZXJ8bG93ZXIsIEBiYXNlNjQ6ZW5jb2RlfGRlY29kZSBhbmQgQHN0cmlwLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJTdGF0aWMgdmFsdWUiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9LCJkZXNjcmlwdGlvbiI6IkhUVFAgcmVzcG9uc2UgaGVhZGVycyB0byBvdmVycmlkZSB0aGUgZGVmYXVsdCBkZW5pYWwgaGVhZGVycy4iLCJ0eXBlIjoib2JqZWN0In0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJIVFRQIG1lc3NhZ2UgdG8gb3ZlcnJpZGUgdGhlIGRlZmF1bHQgZGVuaWFsIG1lc3NhZ2UuIiwicHJvcGVydGllcyI6eyJleHByZXNzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQSBDb21tb24gRXhwcmVzc2lvbiBMYW5ndWFnZSAoQ0VMKSBleHByZXNzaW9uIHRoYXQgZXZhbHVhdGVzIHRvIGEgdmFsdWUuXG5TdHJpbmcgZXhwcmVzc2lvbnMgYXJlIHN1cHBvcnRlZCAoaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vZ29vZ2xlL2NlbC1nby9leHQjU3RyaW5ncykuIiwidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlNpbXBsZSBwYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpIG9yIGEgc3RyaW5nIHRlbXBsYXRlIHdpdGggdmFyaWFibGVzIHRoYXQgcmVzb2x2ZSB0byBwYXR0ZXJucyAoZS5nLiBcIkhlbGxvLCB7YXV0aC5pZGVudGl0eS5uYW1lfSFcIikuXG5BbnkgcGF0dGVybiBzdXBwb3J0ZWQgYnkgaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGlkd2FsbC9nanNvbiBjYW4gYmUgdXNlZC5cblRoZSBmb2xsb3dpbmcgQXV0aG9yaW5vIGN1c3RvbSBtb2RpZmllcnMgYXJlIHN1cHBvcnRlZDogQGV4dHJhY3Q6e3NlcDpcIiBcIixwb3M6MH0sIEByZXBsYWNle29sZDpcIlwiLG5ldzpcIlwifSwgQGNhc2U6dXBwZXJ8bG93ZXIsIEBiYXNlNjQ6ZW5jb2RlfGRlY29kZSBhbmQgQHN0cmlwLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJTdGF0aWMgdmFsdWUiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ3aGVuIjp7ImRlc2NyaXB0aW9uIjoiT3ZlcmFsbCBjb25kaXRpb25zIGZvciB0aGUgQXV0aENvbmZpZyB0byBiZSBlbmZvcmNlZC5cbklmIG9taXR0ZWQsIHRoZSBBdXRoQ29uZmlnIHdpbGwgYmUgZW5mb3JjZWQgYXQgYWxsIHJlcXVlc3RzLlxuSWYgcHJlc2VudCwgYWxsIGNvbmRpdGlvbnMgbXVzdCBtYXRjaCBmb3IgdGhlIEF1dGhDb25maWcgdG8gYmUgZW5mb3JjZWQ7IG90aGVyd2lzZSwgQXV0aG9yaW5vIHNraXBzIHRoZSBBdXRoQ29uZmlnIGFuZCByZXR1cm5zIHRvIHRoZSBhdXRoIHJlcXVlc3Qgd2l0aCBzdGF0dXMgT0suIiwiaXRlbXMiOnsib25lT2YiOlt7InByb3BlcnRpZXMiOnsicGF0dGVyblJlZiI6e319LCJyZXF1aXJlZCI6WyJwYXR0ZXJuUmVmIl19LHsicHJvcGVydGllcyI6eyJvcGVyYXRvciI6e30sInNlbGVjdG9yIjp7fSwidmFsdWUiOnt9fSwicmVxdWlyZWQiOlsib3BlcmF0b3IiLCJzZWxlY3RvciJdfSx7InByb3BlcnRpZXMiOnsiYWxsIjp7fX0sInJlcXVpcmVkIjpbImFsbCJdfSx7InByb3BlcnRpZXMiOnsiYW55Ijp7fX0sInJlcXVpcmVkIjpbImFueSJdfSx7InByb3BlcnRpZXMiOnsicHJlZGljYXRlIjp7fX0sInJlcXVpcmVkIjpbInByZWRpY2F0ZSJdfV0sInByb3BlcnRpZXMiOnsiYWxsIjp7ImRlc2NyaXB0aW9uIjoiQSBsaXN0IG9mIHBhdHRlcm4gZXhwcmVzc2lvbnMgdG8gYmUgZXZhbHVhdGVkIGFzIGEgbG9naWNhbCBBTkQuIiwiaXRlbXMiOnsidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sInR5cGUiOiJhcnJheSJ9LCJhbnkiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2YgcGF0dGVybiBleHByZXNzaW9ucyB0byBiZSBldmFsdWF0ZWQgYXMgYSBsb2dpY2FsIE9SLiIsIml0ZW1zIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJ0eXBlIjoiYXJyYXkifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJUaGUgYmluYXJ5IG9wZXJhdG9yIHRvIGJlIGFwcGxpZWQgdG8gdGhlIGNvbnRlbnQgZmV0Y2hlZCBmcm9tIHRoZSBhdXRob3JpemF0aW9uIEpTT04sIGZvciBjb21wYXJpc29uIHdpdGggXCJ2YWx1ZVwiLlxuUG9zc2libGUgdmFsdWVzIGFyZTogXCJlcVwiIChlcXVhbCB0byksIFwibmVxXCIgKG5vdCBlcXVhbCB0byksIFwiaW5jbFwiIChpbmNsdWRlczsgZm9yIGFycmF5cyksIFwiZXhjbFwiIChleGNsdWRlczsgZm9yIGFycmF5cyksIFwibWF0Y2hlc1wiIChyZWdleCkiLCJlbnVtIjpbImVxIiwibmVxIiwiaW5jbCIsImV4Y2wiLCJtYXRjaGVzIl0sInR5cGUiOiJzdHJpbmcifSwicGF0dGVyblJlZiI6eyJkZXNjcmlwdGlvbiI6IlJlZmVyZW5jZSB0byBhIG5hbWVkIHNldCBvZiBwYXR0ZXJuIGV4cHJlc3Npb25zIiwidHlwZSI6InN0cmluZyJ9LCJwcmVkaWNhdGUiOnsiZGVzY3JpcHRpb24iOiJBIENvbW1vbiBFeHByZXNzaW9uIExhbmd1YWdlIChDRUwpIGV4cHJlc3Npb24gdGhhdCBldmFsdWF0ZXMgdG8gYSBib29sZWFuLlxuU3RyaW5nIGV4cHJlc3Npb25zIGFyZSBzdXBwb3J0ZWQgKGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL2dvb2dsZS9jZWwtZ28vZXh0I1N0cmluZ3MpLiIsInR5cGUiOiJzdHJpbmcifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJQYXRoIHNlbGVjdG9yIHRvIGZldGNoIGNvbnRlbnQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OIChlLmcuICdyZXF1ZXN0Lm1ldGhvZCcpLlxuQW55IHBhdHRlcm4gc3VwcG9ydGVkIGJ5IGh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RpZHdhbGwvZ2pzb24gY2FuIGJlIHVzZWQuXG5BdXRob3Jpbm8gY3VzdG9tIEpTT04gcGF0aCBtb2RpZmllcnMgYXJlIGFsc28gc3VwcG9ydGVkLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJUaGUgdmFsdWUgb2YgcmVmZXJlbmNlIGZvciB0aGUgY29tcGFyaXNvbiB3aXRoIHRoZSBjb250ZW50IGZldGNoZWQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBKU09OLlxuSWYgdXNlZCB3aXRoIHRoZSBcIm1hdGNoZXNcIiBvcGVyYXRvciwgdGhlIHZhbHVlIG11c3QgY29tcGlsZSB0byBhIHZhbGlkIEdvbGFuZyByZWdleC4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsiaG9zdHMiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJBdXRoQ29uZmlnU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIEF1dGhDb25maWciLCJwcm9wZXJ0aWVzIjp7ImNvbmRpdGlvbnMiOnsiaXRlbXMiOnsicHJvcGVydGllcyI6eyJsYXN0VHJhbnNpdGlvblRpbWUiOnsiZGVzY3JpcHRpb24iOiJMYXN0IHRpbWUgdGhlIGNvbmRpdGlvbiB0cmFuc2l0IGZyb20gb25lIHN0YXR1cyB0byBhbm90aGVyLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibGFzdFVwZGF0ZWRUaW1lIjp7ImRlc2NyaXB0aW9uIjoiTGFzdCB0aW1lIHRoZSBjb25kaXRpb24gd2FzIHVwZGF0ZWQiLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJIdW1hbiByZWFkYWJsZSBtZXNzYWdlIGluZGljYXRpbmcgZGV0YWlscyBhYm91dCBsYXN0IHRyYW5zaXRpb24uIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiIoYnJpZWYpIHJlYXNvbiBmb3IgdGhlIGNvbmRpdGlvbidzIGxhc3QgdHJhbnNpdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlN0YXR1cyBvZiB0aGUgY29uZGl0aW9uLCBvbmUgb2YgVHJ1ZSwgRmFsc2UsIFVua25vd24uIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBvZiBjb25kaXRpb24iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJzdGF0dXMiLCJ0eXBlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sInN1bW1hcnkiOnsicHJvcGVydGllcyI6eyJmZXN0aXZhbFdyaXN0YmFuZEVuYWJsZWQiOnsiZGVzY3JpcHRpb24iOiJJbmRpY2F0b3Igb2Ygd2hldGhlciB0aGUgQXV0aENvbmZpZyBpc3N1ZXMgRmVzdGl2YWwgV3Jpc3RiYW5kIHRva2VucyBvbiBzdWNjZXNzZnVsIGV2YWx1YXRpb24gb2YgdGhlIEF1dGhDb25maWcgKGFjY2VzcyBncmFudGVkKSIsInR5cGUiOiJib29sZWFuIn0sImhvc3RzUmVhZHkiOnsiZGVzY3JpcHRpb24iOiJMaXN0cyB0aGUgaG9zdHMgZnJvbSBzcGVjLmhvc3RzIGxpbmtlZCB0byB0aGUgcmVzb3VyY2UgaW4gdGhlIGluZGV4IiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwibnVtQXV0aG9yaXphdGlvblBvbGljaWVzIjp7ImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIGF1dGhvcml6YXRpb24gcG9saWNpZXMgaW4gdGhlIEF1dGhDb25maWciLCJmb3JtYXQiOiJpbnQ2NCIsInR5cGUiOiJpbnRlZ2VyIn0sIm51bUhvc3RzUmVhZHkiOnsiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2YgaG9zdHMgZnJvbSBzcGVjLmhvc3RzIGxpbmtlZCB0byB0aGUgcmVzb3VyY2UgaW4gdGhlIGluZGV4LCBjb21wYXJlZCB0byB0aGUgdG90YWwgbnVtYmVyIG9mIGhvc3RzIGluIHNwZWMuaG9zdHMiLCJ0eXBlIjoic3RyaW5nIn0sIm51bUlkZW50aXR5U291cmNlcyI6eyJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiB0cnVzdGVkIHNvdXJjZXMgb2YgaWRlbnRpdHkgZm9yIGF1dGhlbnRpY2F0aW9uIGluIHRoZSBBdXRoQ29uZmlnIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJudW1NZXRhZGF0YVNvdXJjZXMiOnsiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2Ygc291cmNlcyBvZiBleHRlcm5hbCBtZXRhZGF0YSBpbiB0aGUgQXV0aENvbmZpZyIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwibnVtUmVzcG9uc2VJdGVtcyI6eyJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiBjdXN0b20gYXV0aG9yaXphdGlvbiByZXNwb25zZSBpdGVtcyBpbiB0aGUgQXV0aENvbmZpZyIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwicmVhZHkiOnsiZGVzY3JpcHRpb24iOiJXaGV0aGVyIGFsbCBob3N0cyBmcm9tIHNwZWMuaG9zdHMgaGF2ZSBiZWVuIGxpbmtlZCB0byB0aGUgcmVzb3VyY2UgaW4gdGhlIGluZGV4IiwidHlwZSI6ImJvb2xlYW4ifX0sInJlcXVpcmVkIjpbImZlc3RpdmFsV3Jpc3RiYW5kRW5hYmxlZCIsImhvc3RzUmVhZHkiLCJudW1BdXRob3JpemF0aW9uUG9saWNpZXMiLCJudW1Ib3N0c1JlYWR5IiwibnVtSWRlbnRpdHlTb3VyY2VzIiwibnVtTWV0YWRhdGFTb3VyY2VzIiwibnVtUmVzcG9uc2VJdGVtcyIsInJlYWR5Il0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLW1hbmFnZXItazhzLWF1dGgtcm9sZSJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbImF1dGhlbnRpY2F0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsidG9rZW5yZXZpZXdzIl0sInZlcmJzIjpbImNyZWF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsic3ViamVjdGFjY2Vzc3Jldmlld3MiXSwidmVyYnMiOlsiY3JlYXRlIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLW1hbmFnZXItcm9sZSJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbImF1dGhvcmluby5rdWFkcmFudC5pbyJdLCJyZXNvdXJjZXMiOlsiYXV0aGNvbmZpZ3MiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiYXV0aG9yaW5vLmt1YWRyYW50LmlvIl0sInJlc291cmNlcyI6WyJhdXRoY29uZmlncy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCIsImxpc3QiLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZWNyZXRzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLWF1dGhjb25maWctZWRpdG9yLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLWF1dGhjb25maWctdmlld2VyLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogYWFjM2ExNWQuYXV0aG9yaW5vLmt1YWRyYW50LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJtYW5hZ2VyLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImF1dGhvcmluby1vcGVyYXRvciJ9LCJuYW1lIjoiYXV0aG9yaW5vLW9wZXJhdG9yLW1ldHJpY3MifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Im1ldHJpY3MiLCJwb3J0Ijo4MDgwLCJ0YXJnZXRQb3J0IjoibWV0cmljcyJ9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImF1dGhvcmluby1vcGVyYXRvciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoiYXV0aG9yaW5vIiwiYXV0aG9yaW5vLWNvbXBvbmVudCI6ImF1dGhvcmluby13ZWJob29rcyJ9LCJuYW1lIjoiYXV0aG9yaW5vLXdlYmhvb2tzIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImFwcCI6ImF1dGhvcmlubyIsImF1dGhvcmluby1jb21wb25lbnQiOiJhdXRob3Jpbm8td2ViaG9va3MifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
relatedImages:
  - image: registry.redhat.io/rhcl-1/authorino-operator-bundle@sha256:ca00981e52dbee8ce0551e4a4f6dec8275887b0c43eff4691662063630df6348
    name: ""
  - image: registry.redhat.io/rhcl-1/authorino-rhel9-operator@sha256:fc181bc51c9099031b9724e5a9e7818d04e440b43bae461770d2c8529bbf5a4e
    name: authorino-rhel9-operator-fc181bc51c9099031b9724e5a9e7818d04e440b43bae461770d2c8529bbf5a4e-annotation
  - image: registry.redhat.io/rhcl-1/authorino-rhel9-operator@sha256:fc181bc51c9099031b9724e5a9e7818d04e440b43bae461770d2c8529bbf5a4e
    name: authorino-operator
  - image: registry.redhat.io/rhcl-1/authorino-rhel9@sha256:4125b12ac239367626fdeaa9c2b4b905e2abb791c99b689a67498da7579a0ec0
    name: authorino
schema: olm.bundle
---
image: registry.redhat.io/rhcl-1/authorino-operator-bundle@sha256:f3084120951879a29ee690ab78eef6dbcde5228b6ab3956060280d40a09d4af7
name: authorino-operator.v1.2.1
package: authorino-operator
properties:
  - type: olm.gvk
    value:
      group: authorino.kuadrant.io
      kind: AuthConfig
      version: v1beta2
  - type: olm.gvk
    value:
      group: authorino.kuadrant.io
      kind: AuthConfig
      version: v1beta3
  - type: olm.gvk
    value:
      group: operator.authorino.kuadrant.io
      kind: Authorino
      version: v1beta1
  - type: olm.package
    value:
      packageName: authorino-operator
      version: 1.2.1
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLW1hbmFnZXItazhzLWF1dGgtcm9sZSJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbImF1dGhlbnRpY2F0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsidG9rZW5yZXZpZXdzIl0sInZlcmJzIjpbImNyZWF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsic3ViamVjdGFjY2Vzc3Jldmlld3MiXSwidmVyYnMiOlsiY3JlYXRlIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLW1hbmFnZXItcm9sZSJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbImF1dGhvcmluby5rdWFkcmFudC5pbyJdLCJyZXNvdXJjZXMiOlsiYXV0aGNvbmZpZ3MiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiYXV0aG9yaW5vLmt1YWRyYW50LmlvIl0sInJlc291cmNlcyI6WyJhdXRoY29uZmlncy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCIsImxpc3QiLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZWNyZXRzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLWF1dGhjb25maWctZWRpdG9yLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLWF1dGhjb25maWctdmlld2VyLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogYWFjM2ExNWQuYXV0aG9yaW5vLmt1YWRyYW50LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJtYW5hZ2VyLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImF1dGhvcmluby1vcGVyYXRvciJ9LCJuYW1lIjoiYXV0aG9yaW5vLW9wZXJhdG9yLW1ldHJpY3MifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Im1ldHJpY3MiLCJwb3J0Ijo4MDgwLCJ0YXJnZXRQb3J0IjoibWV0cmljcyJ9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImF1dGhvcmluby1vcGVyYXRvciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoiYXV0aG9yaW5vIiwiYXV0aG9yaW5vLWNvbXBvbmVudCI6ImF1dGhvcmluby13ZWJob29rcyJ9LCJuYW1lIjoiYXV0aG9yaW5vLXdlYmhvb2tzIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImFwcCI6ImF1dGhvcmlubyIsImF1dGhvcmluby1jb21wb25lbnQiOiJhdXRob3Jpbm8td2ViaG9va3MifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
relatedImages:
  - image: registry.redhat.io/rhcl-1/authorino-operator-bundle@sha256:f3084120951879a29ee690ab78eef6dbcde5228b6ab3956060280d40a09d4af7
    name: ""
  - image: registry.redhat.io/rhcl-1/authorino-rhel9-operator@sha256:90b10b2cd89893eed468e85c4b0e7a21d010e11594a29f33d58f8e404d3c7fa5
    name: authorino-rhel9-operator-90b10b2cd89893eed468e85c4b0e7a21d010e11594a29f33d58f8e404d3c7fa5-annotation
  - image: registry.redhat.io/rhcl-1/authorino-rhel9-operator@sha256:90b10b2cd89893eed468e85c4b0e7a21d010e11594a29f33d58f8e404d3c7fa5
    name: authorino-operator
  - image: registry.redhat.io/rhcl-1/authorino-rhel9@sha256:4125b12ac239367626fdeaa9c2b4b905e2abb791c99b689a67498da7579a0ec0
    name: authorino
schema: olm.bundle
---
image: registry.redhat.io/rhcl-1/authorino-operator-bundle@sha256:7f3d41672fa8c60725304f0d45e468a4f01defcab7352501737ffddfd32edded
name: authorino-operator.v1.2.2
package: authorino-operator
properties:
  - type: olm.gvk
    value:
      group: authorino.kuadrant.io
      kind: AuthConfig
      version: v1beta2
  - type: olm.gvk
    value:
      group: authorino.kuadrant.io
      kind: AuthConfig
      version: v1beta3
  - type: olm.gvk
    value:
      group: operator.authorino.kuadrant.io
      kind: Authorino
      version: v1beta1
  - type: olm.package
    value:
      packageName: authorino-operator
      version: 1.2.2
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLW1hbmFnZXItazhzLWF1dGgtcm9sZSJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbImF1dGhlbnRpY2F0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsidG9rZW5yZXZpZXdzIl0sInZlcmJzIjpbImNyZWF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsic3ViamVjdGFjY2Vzc3Jldmlld3MiXSwidmVyYnMiOlsiY3JlYXRlIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLW1hbmFnZXItcm9sZSJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbImF1dGhvcmluby5rdWFkcmFudC5pbyJdLCJyZXNvdXJjZXMiOlsiYXV0aGNvbmZpZ3MiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiYXV0aG9yaW5vLmt1YWRyYW50LmlvIl0sInJlc291cmNlcyI6WyJhdXRoY29uZmlncy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCIsImxpc3QiLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZWNyZXRzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLWF1dGhjb25maWctZWRpdG9yLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoiYXV0aG9yaW5vLWF1dGhjb25maWctdmlld2VyLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3Jpbm8ua3VhZHJhbnQuaW8iXSwicmVzb3VyY2VzIjpbImF1dGhjb25maWdzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogYWFjM2ExNWQuYXV0aG9yaW5vLmt1YWRyYW50LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJtYW5hZ2VyLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImF1dGhvcmluby1vcGVyYXRvciJ9LCJuYW1lIjoiYXV0aG9yaW5vLW9wZXJhdG9yLW1ldHJpY3MifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Im1ldHJpY3MiLCJwb3J0Ijo4MDgwLCJ0YXJnZXRQb3J0IjoibWV0cmljcyJ9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImF1dGhvcmluby1vcGVyYXRvciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoiYXV0aG9yaW5vIiwiYXV0aG9yaW5vLWNvbXBvbmVudCI6ImF1dGhvcmluby13ZWJob29rcyJ9LCJuYW1lIjoiYXV0aG9yaW5vLXdlYmhvb2tzIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImFwcCI6ImF1dGhvcmlubyIsImF1dGhvcmluby1jb21wb25lbnQiOiJhdXRob3Jpbm8td2ViaG9va3MifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
relatedImages:
  - image: registry.redhat.io/rhcl-1/authorino-operator-bundle@sha256:7f3d41672fa8c60725304f0d45e468a4f01defcab7352501737ffddfd32edded
    name: ""
  - image: registry.redhat.io/rhcl-1/authorino-rhel9-operator@sha256:2d81613856df9725ad20928a7a9895d14482c42effce0a3a0de88f40ec35d411
    name: authorino-rhel9-operator-2d81613856df9725ad20928a7a9895d14482c42effce0a3a0de88f40ec35d411-annotation
  - image: registry.redhat.io/rhcl-1/authorino-rhel9-operator@sha256:2d81613856df9725ad20928a7a9895d14482c42effce0a3a0de88f40ec35d411
    name: authorino-operator
  - image: registry.redhat.io/rhcl-1/authorino-rhel9@sha256:413d3796ad0101bf14d3341d31d9367e67fea1e73ebb3fb79124ef4c5dde0c09
    name: authorino
schema: olm.bundle
---
entries:
  - name: authorino-operator.v0.16.0
  - name: authorino-operator.v0.16.1
  - name: authorino-operator.v1.0.2
  - name: authorino-operator.v1.1.0
  - name: authorino-operator.v1.1.1
    replaces: authorino-operator.v1.0.2
    skips:
      - authorino-operator.v1.1.0
  - name: authorino-operator.v1.1.2
    replaces: authorino-operator.v1.1.1
  - name: authorino-operator.v1.1.3
  - name: authorino-operator.v1.2.0
  - name: authorino-operator.v1.2.1
    replaces: authorino-operator.v1.1.2
    skips:
      - authorino-operator.v0.16.0
      - authorino-operator.v0.16.1
      - authorino-operator.v1.2.0
  - name: authorino-operator.v1.2.2
    replaces: authorino-operator.v1.2.1
    skips:
      - authorino-operator.v1.1.3
  - name: authorino-operator.v1.2.3
    replaces: authorino-operator.v1.2.2
name: stable
package: authorino-operator
schema: olm.channel
---
entries:
  - name: authorino-operator.v1.0.2
  - name: authorino-operator.v1.1.0
  - name: authorino-operator.v1.1.1
    replaces: authorino-operator.v1.0.2
    skips:
      - authorino-operator.v1.1.0
  - name: authorino-operator.v1.1.2
  - name: authorino-operator.v1.1.3
    replaces: authorino-operator.v1.1.1
    skips:
      - authorino-operator.v1.1.2
name: tech-preview-v1
package: authorino-operator
schema: olm.channel
---
defaultChannel: stable
icon:
  base64data: 
  mediatype: image/png
name: authorino-operator
schema: olm.package
